{"version":3,"sources":["utils/types.ts","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","utils/sleep.ts","hooks/useRoom.ts","media/capture.ts","hooks/useFaceImages.ts","components/FaceImages.tsx","components/ControlPanel.tsx","components/SelectivePane.tsx","components/SingleRoom.tsx","hooks/useNicknameMap.ts","media/video.ts","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","media/audio.ts","hooks/useFaceVideos.ts","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["isObject","x","hasStringProp","prop","hasObjectProp","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","sleep","ms","Promise","resolve","setTimeout","createRoomEntry","roomId","userId","a","networkStatusListeners","Set","newPeerListeners","dataListeners","trackListeners","Map","trackCache","updateNetworkStatus","status","listener","notifyNewPeer","peerIndex","receiveData","data","info","receiveTrack","mediaType","track","trackCacheItems","get","set","add","listeners","createRoom","room","count","roomEntryMap","register","roomEntryKey","has","entry","networkStatusListener","newPeerListener","dataListener","trackListener","mediaTypeSet","prevSize","size","acceptMediaTypes","Array","from","trackCacheItem","readyState","delete","unregister","dispose","broadcastData","sendData","addTrack","removeTrack","useRoomNetworkStatus","onNetworkStatus","useState","networkStatus","type","Error","err","message","useEffect","cleanup","ns","useRoomNewPeer","sendInitialData","useBroadcastData","pending","useRef","broadcastDataRef","useCallback","args","current","registered","splice","useRoomData","onRoomData","useRoomMedia","onTrack","setAddTrack","undefined","captureImage","stream","ImageCapture","imageCapture","takePhoto","blob","createImageBitmap","srcImg","grabFrame","srcW","width","srcH","height","video","document","createElement","autoplay","setAttribute","style","display","position","bottom","body","appendChild","removeChild","srcObject","videoWidth","videoHeight","deviceId","constraints","navigator","mediaDevices","getUserMedia","getVideoTracks","canvas","ctx","getContext","dstW","dstH","ratio","Math","max","min","y","drawImage","stop","toDataURL","isImageData","image","nickname","liveMode","micOn","speakerOn","isFaceInfo","FaceImage","React","memo","statusMesg","obsoleted","muted","className","opacity","ref","videoEle","autoPlay","playsInline","src","BLANK_IMAGE","alt","title","FaceImages","avatar","suspended","videoDeviceId","audioDeviceId","myImage","setMyImage","roomImages","setRoomImages","fatalError","setFatalError","lastDataRef","send","roomImage","received","Date","now","prev","find","item","map","changed","next","timer","checkObsoletedImage","twoMinAgo","tenMinAgo","didCleanup","loop","clearTimeout","useFaceImages","useFaceVideos","faceStream","faceStreamMap","ControlPanel","setSuspended","setLiveMode","setMicOn","setSpeakerOn","secondColumnOpen","setSecondColumnOpen","onClick","onChange","e","value","components","Welcome","lazy","SelectivePane","setStatusMesg","activePane","setActivePane","multiple","name","includes","idx","indexOf","fallback","SuspenseFallback","SingleRoom","useProxy","singleRoomState","config","setRoomIdToUrl","useNicknameMap","cache","createMapFromCache","nicknameMap","setNicknameMap","index","findIndex","lastUpdated","every","getVideoStream","getFaceVideoStream","frameRate","exact","_toPropertyKey","arg","input","hint","prim","Symbol","toPrimitive","res","call","TypeError","String","Number","getAudioStream","audio","getAudioTracks","applyConstraints","echoCancellation","echoCancellationType","ideal","noiseSuppression","addTrackToStream","disposeStream","newStream","MediaStream","dispatchEvent","MediaStreamTrackEvent","addEventListener","getTracks","videoEnabled","audioEnabled","uniqueMediaId","setFaceStream","setFaceStreamMap","isMounted","s","oldStream","rest","addVideoTrack","addAudioTrack","videoStream","disposeVideo","videoTrack","removeVideoTrack","Event","audioStream","disposeAudio","audioTrack","removeAudioTrack","enabled","onaddtrack","event","kind","removeEventListener","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","prototype","propertyIsEnumerable"],"mappings":"4HAAA,sGAAO,IAAMA,EAAW,SAACC,GAAD,MACT,kBAANA,GAAwB,OAANA,GAEdC,EAAgB,SAI3BD,EACAE,GAL2B,MAOmB,kBAAtCF,EAA4BE,IAEzBC,EAAgB,SAI3BH,EACAE,GAL2B,OAO3BH,EAAUC,EAA4BE,M,iCCnBxC,8CAEA,SAASE,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GAEvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GACvCC,IAAgBI,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,eAEtDP,EAAKQ,KAAKC,MAAMT,EAAMG,GAGxB,OAAOH,EAGM,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNf,EAAQI,OAAOc,IAAS,GAAMC,SAAQ,SAAUC,GAC9C,YAAeN,EAAQM,EAAKF,EAAOE,OAE5BhB,OAAOiB,0BAChBjB,OAAOkB,iBAAiBR,EAAQV,OAAOiB,0BAA0BH,IAEjElB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GACxChB,OAAOmB,eAAeT,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,OAKjF,OAAON,I,iCCjCT,kCAAO,IAAMU,EAAQ,SAACC,GAAD,OACnB,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,Q,oQCmBzCI,EAAe,uCAAG,WACtBC,EACAC,GAFsB,iCAAAC,EAAA,6DAIhBC,EAAyB,IAAIC,IAC7BC,EAAmB,IAAID,IACvBE,EAAgB,IAAIF,IACpBG,EAAiB,IAAIC,IACrBC,EAAa,IAAID,IACjBE,EAAsB,SAACC,GAC3BR,EAAuBd,SAAQ,SAACuB,GAC9BA,EAASD,OAGPE,EAAgB,SAACC,GACrBT,EAAiBhB,SAAQ,SAACuB,GACxBA,EAASE,OAGPC,EAAc,SAACC,EAAeC,GAClCX,EAAcjB,SAAQ,SAACuB,GACrBA,EAASI,EAAMC,OAGbC,EAAe,SACnBC,EACAC,EACAH,GAEA,IAAII,EAAkBZ,EAAWa,IAAIH,GAChCE,IACHA,EAAkB,IAAIjB,IACtBK,EAAWc,IAAIJ,EAAWE,IAE5BA,EAAgBG,IAAI,CAAEJ,QAAOH,SAC7B,IAAMQ,EAAYlB,EAAee,IAAIH,GACjCM,GACFA,EAAUpC,SAAQ,SAACuB,GACjBA,EAASQ,EAAOH,OAtCA,UA0CHS,YACjB1B,EACAC,EACAS,EACAG,EACAE,EACAG,GAhDoB,eA0ChBS,EA1CgB,yBAkDf,CACLA,OACAxB,yBACAE,mBACAC,gBACAC,iBACAE,aACAmB,MAAO,IAzDa,4CAAH,wDA6DfC,EAAe,IAAIrB,IACnBsB,EAAQ,uCAAG,WACf9B,EACAC,EACAwB,GAHe,iCAAAvB,EAAA,6DAaT6B,EAbS,UAaS/B,EAbT,YAamBC,GAC7B4B,EAAaG,IAAID,IACpBF,EAAaN,IAAIQ,EAAchC,EAAgBC,EAAQC,IAf1C,SAiBM4B,EAAaP,IAAIS,GAjBvB,cAiBTE,EAjBS,OAkBXR,EAAUS,uBACZD,EAAM9B,uBAAuBqB,IAAIC,EAAUS,uBAEzCT,EAAUU,iBACZF,EAAM5B,iBAAiBmB,IAAIC,EAAUU,iBAEnCV,EAAUW,cACZH,EAAM3B,cAAckB,IAAIC,EAAUW,cAEhCX,EAAUY,gBAAgB,EACIZ,EAAUY,cAAlClB,EADmB,EACnBA,UAAWP,EADQ,EACRA,SACb0B,EAAe,IAAIlC,IAAI6B,EAAM1B,eAAelC,QAC5CkE,EAAWD,EAAaE,MAC1BjC,EAAiB0B,EAAM1B,eAAee,IAAIH,MAE5CZ,EAAiB,IAAIH,IACrB6B,EAAM1B,eAAegB,IAAIJ,EAAWZ,IAEtCA,EAAeiB,IAAIZ,GACnB0B,EAAad,IAAIL,GACboB,IAAaD,EAAaE,MAC5BP,EAAMN,KAAKc,iBAAiBC,MAAMC,KAAKL,KAEnCjB,EAAkBY,EAAMxB,WAAWa,IAAIH,KAE3CE,EAAgBhC,SAAQ,SAACuD,GACiB,UAApCA,EAAexB,MAAMyB,WAIzBjC,EAASgC,EAAexB,MAAOwB,EAAe3B,MAH5CI,EAAgByB,OAAOF,OAO/BX,EAAML,OAAS,EACTmB,EAAa,WAUjB,GATItB,EAAUS,uBACZD,EAAM9B,uBAAuB2C,OAAOrB,EAAUS,uBAE5CT,EAAUU,iBACZF,EAAM5B,iBAAiByC,OAAOrB,EAAUU,iBAEtCV,EAAUW,cACZH,EAAM3B,cAAcwC,OAAOrB,EAAUW,cAEnCX,EAAUY,cAAe,CAAC,IAAD,EACKZ,EAAUY,cAAlClB,EADmB,EACnBA,UAAWP,EADQ,EACRA,SACbL,EAAiB0B,EAAM1B,eAAee,IAAIH,GAC5CZ,IACFA,EAAeuC,OAAOlC,GACM,IAAxBL,EAAeiC,OACjBP,EAAM1B,eAAeuC,OAAO3B,GAC5Bc,EAAMN,KAAKc,iBAAiBC,MAAMC,KAAKV,EAAM1B,eAAelC,WAIlE4D,EAAML,OAAS,EACXK,EAAML,OAAS,IACjBK,EAAMN,KAAKqB,UACXnB,EAAaiB,OAAOf,KA7ET,kBAgFR,CACLkB,cAAehB,EAAMN,KAAKsB,cAC1BC,SAAUjB,EAAMN,KAAKuB,SACrBC,SAAUlB,EAAMN,KAAKwB,SACrBC,YAAanB,EAAMN,KAAKyB,YACxBL,eArFa,4CAAH,0DAyFDM,EAAuB,SAClCrD,EACAC,EACAqD,GACI,IAAD,EAC0CC,qBAD1C,mBACIC,EADJ,KACmB9C,EADnB,KAEH,GAAI8C,GAAwC,kBAAvBA,EAAcC,KACjC,MAAM,IAAIC,MAAJ,yBAA4BF,EAAcG,IAAIC,UAiBtD,OAfAC,qBAAU,WACR,IAAIC,EAAU,aAUd,OATA,sBAAC,8BAAA5D,EAAA,sEAC8B4B,EAAS9B,EAAQC,EAAQ,CACpDiC,sBAAuB,SAAC6B,GACtBrD,EAAoBqD,GAChBT,GAAiBA,EAAgBS,MAJ1C,gBACShB,EADT,EACSA,WAMRe,EAAUf,EAPX,0CAAD,GASO,WACLe,OAED,CAAC9D,EAAQC,EAAQqD,IACbE,GAGIQ,EAAiB,SAC5BhE,EACAC,EACAgE,GAEAJ,qBAAU,WACR,IAAIC,EAAU,aASd,OARA,sBAAC,gCAAA5D,EAAA,sEACwC4B,EAAS9B,EAAQC,EAAQ,CAC9DkC,gBAAiB,SAACrB,GAChBmD,GAAgB,SAACjD,GAAD,OAAUkC,EAASlC,EAAMF,SAH9C,gBACSiC,EADT,EACSA,WAAYG,EADrB,EACqBA,SAKpBY,EAAUf,EANX,0CAAD,GAQO,WACLe,OAED,CAAC9D,EAAQC,EAAQgE,KAKTC,EAAmB,SAAClE,EAAgBC,GAC/C,IAAMkE,EAAUC,iBAAoC,IAC9CC,EAAmBD,mBACnBnB,EAAgBqB,uBAAY,WAAyC,IAAD,uBAApCC,EAAoC,yBAApCA,EAAoC,gBACpEF,EAAiBG,QACnBH,EAAiBG,QAAjB,MAAAH,EAA4BE,GAE5BJ,EAAQK,QAAQ3F,KAAK0F,KAEtB,IAgBH,OAfAV,qBAAU,WACR,IAAIC,EAAU,aAUd,OATA,sBAAC,4BAAA5D,EAAA,sEAC0B4B,EAAS9B,EAAQC,EAAQ,IADnD,OACOwE,EADP,OAECJ,EAAiBG,QAAUC,EAAWxB,cACtCa,EAAUW,EAAW1B,WACrBoB,EAAQK,QAAQnF,SAAQ,SAACkF,GACvBE,EAAWxB,cAAX,MAAAwB,EAAU,YAAkBF,OAE9BJ,EAAQK,QAAQE,OAAO,EAAGP,EAAQK,QAAQrF,QAP3C,0CAAD,GASO,WACL2E,OAED,CAAC9D,EAAQC,IACLgD,GAGI0B,EAAc,SACzB3E,EACAC,EACA2E,GAEAf,qBAAU,WACR,IAAIC,EAAU,aAOd,OANA,sBAAC,8BAAA5D,EAAA,sEAC8B4B,EAAS9B,EAAQC,EAAQ,CACpDmC,aAAcwC,IAFjB,gBACS7B,EADT,EACSA,WAGRe,EAAUf,EAJX,0CAAD,GAMO,WACLe,OAED,CAAC9D,EAAQC,EAAQ2E,KAGTC,EAAe,SAC1B7E,EACAC,EACA6E,EACA3D,GACI,IAAD,EAC6BoC,qBAD7B,mBACIJ,EADJ,KACc4B,EADd,KAyBH,OArBAlB,qBAAU,WACR,IAAIC,EAAU,aAgBd,OAfI3C,GACF,sBAAC,4BAAAjB,EAAA,sEAC0B4B,EAAS9B,EAAQC,EAAQ,CAChDoC,cAAe,CAAElB,YAAWP,SAAUkE,KAFzC,OACOL,EADP,OAICM,GAAY,kBAAM,SAAC3D,GAEjB,OADAqD,EAAWtB,SAAShC,EAAWC,GACxB,kBAAMqD,EAAWrB,YAAYjC,QAEtC2C,EAAU,WACRiB,OAAYC,GACZP,EAAW1B,cAVd,0CAAD,GAcK,WACLe,OAED,CAAC9D,EAAQC,EAAQ6E,EAAS3D,IACtBgC,I,0OCxSH8B,EAAY,uCAAG,WAAOC,EAAqB9D,GAA5B,iCAAAlB,EAAA,yDACS,qBAAjBiF,aADQ,wBAEXC,EAAe,IAAID,aAAa/D,GAFrB,SAGX1B,YAAM,KAHK,gCAMI0F,EAAaC,YANjB,cAMTC,EANS,iBAOAC,kBAAkBD,GAPlB,QAOfE,EAPe,0EASAJ,EAAaK,YATb,QASfD,EATe,sBAWXE,EAAOF,EAAOG,MACdC,EAAOJ,EAAOK,OAZH,kBAaV,CAAEL,SAAQE,OAAME,SAbN,eAebE,EAAQC,SAASC,cAAc,UAC/BC,UAAW,EACjBH,EAAMI,aAAa,cAAe,IAClCJ,EAAMK,MAAMC,QAAU,QACtBN,EAAMK,MAAMR,MAAQ,MACpBG,EAAMK,MAAMN,OAAS,MACrBC,EAAMK,MAAME,SAAW,WACvBP,EAAMK,MAAMG,OAAS,IACrBP,SAASQ,KAAKC,YAAYV,GACpB9C,EAAU,WACd+C,SAASQ,KAAKE,YAAYX,IAE5BA,EAAMY,UAAYxB,EA3BC,UA4BbxF,YAAM,KA5BO,eA6Bb8F,EAASM,EACTJ,EAAOI,EAAMa,WACbf,EAAOE,EAAMc,YA/BA,kBAgCZ,CAAEpB,SAAQE,OAAME,OAAM5C,YAhCV,0DAAH,wDAmCLqC,EAAS,uCAAG,WAAOwB,GAAP,mDAAA3G,EAAA,6DACjB4G,EAAcD,EAChB,CACEf,MAAO,CAAEe,aAEX,CAAEf,OAAO,GALU,SAMFiB,UAAUC,aAAaC,aAAaH,GANlC,cAMjB5B,EANiB,SAOPA,EAAOgC,iBAPA,mBAOhB9F,EAPgB,KAQjB+F,EAASpB,SAASC,cAAc,UAChCoB,EAAMD,EAAOE,WAAW,MACxBC,EAAO,GACPC,EAAO,GACbJ,EAAOxB,MAAQ2B,EACfH,EAAOtB,OAAS0B,EAbO,UAcuBtC,EAAaC,EAAQ9D,GAd5C,wBAcfoE,EAde,EAcfA,OAAQE,EAdO,EAcPA,KAAME,EAdC,EAcDA,KAAM5C,EAdL,EAcKA,QACtBwE,EAAQC,KAAKC,IAAIJ,EAAO5B,EAAM6B,EAAO3B,GACrCD,EAAQ8B,KAAKE,IAAIjC,EAAM4B,EAAOE,GAC9B3B,EAAS4B,KAAKE,IAAI/B,EAAM2B,EAAOC,GAC/B1J,GAAK4H,EAAOC,GAAS,EACrBiC,GAAKhC,EAAOC,GAAU,EAC5BuB,EAAIS,UAAUrC,EAAQ1H,EAAG8J,EAAGjC,EAAOE,EAAQ,EAAG,EAAGyB,EAAMC,GACnDvE,GACFA,IAEF5B,EAAM0G,OAxBiB,kBAyBhBX,EAAOY,UAAU,eAzBD,4CAAH,sD,SCHhBC,EAAc,SAAClK,GAAD,OAClBD,YAASC,IACkC,kBAAnCA,EAAyBmK,OAfhB,SAACnK,GAAD,OACjBD,YAASC,IACwC,kBAAzCA,EAA4BoK,UACW,kBAAvCpK,EAA2B8F,SACc,mBAAzC9F,EAA4BqK,UACO,mBAAnCrK,EAAyBsK,OACkB,mBAA3CtK,EAA6BuK,UAUrCC,CAAYxK,EAAwBmD,O,SC9BhCsH,EAAYC,IAAMC,MAWtB,gBACER,EADF,EACEA,MACAC,EAFF,EAEEA,SACAQ,EAHF,EAGEA,WACAC,EAJF,EAIEA,UACAR,EALF,EAKEA,SACAjD,EANF,EAMEA,OACA0D,EAPF,EAOEA,MACAR,EARF,EAQEA,MACAC,EATF,EASEA,UATF,OAWE,sBAAKQ,UAAU,kBAAkB1C,MAAO,CAAE2C,QAASH,EAAY,GAAM,GAArE,UACGR,IAAaQ,GAAazD,EACzB,uBACE2D,UAAU,mBACVE,IAAK,SAACC,GACAA,GAAYA,EAAStC,YAAcxB,IAErC8D,EAAStC,UAAYxB,IAGzB+D,UAAQ,EACRC,aAAW,EACXN,MAAOA,IAGT,qBACEO,IAAKlB,GAASmB,IACdP,UAAU,mBACVQ,IAAI,WAGR,qBAAKR,UAAU,kBAAf,SAAkCX,IAClC,qBACEW,UAAU,kBACVS,MAAO,YAAIZ,GAAY,GAAKA,EAAa,sBAF3C,SAIG,YAAIA,GAAY,KAElBP,IAAaQ,GAAazD,GACzB,qBAAK2D,UAAU,4BAA4BS,MAAM,eAAjD,oBAIDnB,IAAaQ,IAAczD,GAC1B,qBAAK2D,UAAU,4BAA4BS,MAAM,sBAAjD,oBAIDnB,IAAaQ,GACZ,sBAAKE,UAAU,+BAAf,UACGT,GAAS,sBAAMkB,MAAM,SAAZ,0BACTjB,GAAa,sBAAMiB,MAAM,aAAZ,mCAOXC,EAAaf,IAAMC,MAa9B,YAYO,IAXLzI,EAWI,EAXJA,OACAC,EAUI,EAVJA,OACAuJ,EASI,EATJA,OACAtB,EAQI,EARJA,SACAQ,EAOI,EAPJA,WACAe,EAMI,EANJA,UACAtB,EAKI,EALJA,SACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,UACAqB,EAEI,EAFJA,cACAC,EACI,EADJA,cACI,EDxDqB,SAC3B3J,EACAC,EACAuJ,EACAtB,EACAQ,EACAe,EACAtB,EACAC,EACAC,EACAxB,GACI,IAAD,EAC2BtD,qBAD3B,mBACIqG,EADJ,KACaC,EADb,OAEiCtG,mBAAsB,IAFvD,mBAEIuG,EAFJ,KAEgBC,EAFhB,OAIiCxG,qBAJjC,mBAIIyG,EAJJ,KAIgBC,EAJhB,KAKH,GAAID,EACF,MAAMA,EAGR,IAAME,EAAc9F,mBACpBJ,YACEhE,EACAC,EACAqE,uBAAY,SAAC6F,GACPD,EAAY1F,SACd2F,EAAKD,EAAY1F,WAElB,KAGL,IAAMvB,EAAgBiB,YAAiBlE,EAAQC,GAmH/C,OAlHA0E,YACE3E,EACAC,EACAqE,uBAAY,SAACtD,EAAMC,GACjB,GAAK+G,EAAYhH,GAAjB,CACA,IAAMoJ,EAAS,2BACVpJ,GADU,IAEbf,OAAQgB,EAAKhB,OACboK,SAAUC,KAAKC,MACf5B,WAAW,EACX7H,UAAWG,EAAKH,YAElBiJ,GAAc,SAACS,GAEb,OADcA,EAAKC,MAAK,SAACC,GAAD,OAAUA,EAAKzK,SAAWmK,EAAUnK,UAIrDuK,EAAKG,KAAI,SAACD,GAAD,OACdA,EAAKzK,SAAWmK,EAAUnK,OAASmK,EAAYM,KAHzC,GAAN,mBAAWF,GAAX,CAAiBJ,UAMpB,KAGL/G,YACErD,EACAC,EACAqE,uBAAY,SAACd,GACX,GAAIA,GAAwC,sBAAvBA,EAAcC,KAA8B,CAAC,IACxD3C,EAAc0C,EAAd1C,UACRiJ,GAAc,SAACS,GACb,IAAII,GAAU,EACRC,EAAOL,EAAKG,KAAI,SAACD,GACrB,OAAIA,EAAK5J,YAAcA,GACrB8J,GAAU,EACH,2BAAKF,GAAZ,IAAkB/B,WAAW,KAExB+B,KAET,OAAOE,EAAUC,EAAOL,QAG3B,KAGL3G,qBAAU,WACR,IAuBIiH,EAvBEC,EAAsB,WAC1B,IAAMC,EAAYV,KAAKC,MAAQ,KACzBU,EAAYX,KAAKC,MAAQ,IAC/BR,GAAc,SAACS,GACb,IAAII,GAAU,EACRC,EAAOL,EACVG,KAAI,SAACD,GACJ,OAAIA,EAAKL,SAAWW,IAAcN,EAAK/B,WACrCiC,GAAU,EACH,2BAAKF,GAAZ,IAAkB/B,WAAW,KAE3B+B,EAAKL,SAAWY,GAAaP,EAAK/B,WACpCiC,GAAU,EACH,MAEFF,KAERjM,QAAO,SAACiM,GAAD,OAAUA,KAEpB,OAAOE,EAAUC,EAAOL,MAGxBU,GAAa,EAEXC,EAAI,uCAAG,8BAAAjL,EAAA,0DACPgL,EADO,6DAGTH,KACctB,EAJL,qBAIiBD,EAJjB,wCAIgCnE,EAAUwB,GAJ1C,+BAIHoB,EAJG,MAKLiD,EALK,mDAMTrB,EAAW5B,GAYXhF,EAJMjC,EAAkB,CACtBiH,QACAhH,KATqB,CACrBiH,WACAtE,QAAS8E,EACTP,WACAC,QACAC,eAOF6B,EAAY1F,QAAUxD,EAnBb,kDAqBTiJ,EAAc,EAAD,IArBJ,QAuBXa,EAAQhL,WAAWqL,EAAM,MAvBd,0DAAH,qDA0BV,OADAA,IACO,WACLD,GAAa,EACbE,aAAaN,MAEd,CACD9K,EACAC,EACA4G,EACA2C,EACAtB,EACAQ,EACAe,EACAtB,EACAC,EACAC,EACApF,IAGK,CACL2G,UACAE,cC3FgCuB,CAC9BrL,EACAC,EACAuJ,EACAtB,EACAQ,EACAe,EACAtB,EACAC,EACAC,EACAqB,GAVME,EADJ,EACIA,QAASE,EADb,EACaA,WADb,EAakCwB,YACpCtL,EACAC,EACAkI,EACAA,EACAC,EACAsB,EACAC,GAPM4B,EAbJ,EAaIA,WAAYC,EAbhB,EAagBA,cAUpB,OACE,qCACE,cAACjD,EAAD,CACEN,MAAO2B,EACP1B,SAAUA,EACVQ,WAAYA,EACZP,SAAUA,EACVjD,OAAQqG,QAAcvG,EACtB4D,OAAK,EACLR,MAAOA,EACPC,UAAWA,IAEZyB,EAAWa,KAAI,SAACD,GAAD,OACd,cAACnC,EAAD,CAEEN,MAAOyC,EAAKzC,MACZC,SAAUwC,EAAKzJ,KAAKiH,SACpBQ,WAAYgC,EAAKzJ,KAAK2C,QACtB+E,UAAW+B,EAAK/B,UAChBR,SAAUuC,EAAKzJ,KAAKkH,SACpBjD,OAASiD,GAAYqD,EAAcd,EAAKzK,cAAY+E,EACpD4D,OAAQP,EACRD,MAAOsC,EAAKzJ,KAAKmH,MACjBC,UAAWqC,EAAKzJ,KAAKoH,WAThBqC,EAAKzK,iBCvITwL,G,OAAejD,IAAMC,MAYhC,gBACEgB,EADF,EACEA,UACAiC,EAFF,EAEEA,aACAvD,EAHF,EAGEA,SACAwD,EAJF,EAIEA,YACAC,EALF,EAKEA,SACAC,EANF,EAMEA,aACAC,EAPF,EAOEA,iBACAC,EARF,EAQEA,oBARF,OAUE,sBAAKlD,UAAU,yBAAf,UACE,yBACEpF,KAAK,SACLuI,QAAS,kBAAMN,GAAa,SAAC5N,GAAD,OAAQA,MACpCwL,MAAOG,EAAY,gBAAkB,iBAHvC,yBAMGA,GAAa,sBAAMZ,UAAU,wBAAhB,uBAEhB,wBACEpF,KAAK,SACLuI,QAAS,kBAAMD,GAAoB,SAACjO,GAAD,OAAQA,MAC3CwL,MAAOwC,EAAmB,mBAAqB,kBAHjD,SAKGA,EAAmB,8CAAe,gDAErC,yBACErI,KAAK,SACLuI,QAAS,kBAAML,GAAY,SAAC7N,GAAD,OAAQA,MACnCwL,MAAOnB,EAAW,oBAAsB,mBAH1C,0BAMIA,GAAY,sBAAMU,UAAU,wBAAhB,uBAEhB,sBAAKA,UAAU,sBAAf,yBAEE,yBACEoD,SAAU,SAACC,GACT,OAAQA,EAAElN,OAAOmN,OACf,IAAK,MACHN,GAAa,GACbD,GAAS,GACT,MACF,IAAK,UACHC,GAAa,GACbD,GAAS,GACT,MACF,IAAK,MACHC,GAAa,GACbD,GAAS,GACT,MACF,QACE,MAAM,IAAIlI,MAAM,eAhBxB,UAoBE,wBAAQyI,MAAM,MAAd,uBACA,wBAAQA,MAAM,UAAd,0BACA,wBAAQA,MAAM,MAAd,wC,QCrEJC,G,OAAa,CACjBC,QAAS7D,IAAM8D,MAAK,kBAAM,yDAC1B,iBAAkB9D,IAAM8D,MAAK,kBAAM,gEACnC,eAAgB9D,IAAM8D,MAAK,kBAAM,yDACjC,eAAgB9D,IAAM8D,MAAK,kBAAM,mCACjC,cAAe9D,IAAM8D,MAAK,kBAAM,mCAChC,cAAe9D,IAAM8D,MAAK,kBAAM,mCAChC,WAAY9D,IAAM8D,MAAK,kBAAM,4DAGlBC,EAAgB/D,IAAMC,MAMhC,YAA8D,IAA3DzI,EAA0D,EAA1DA,OAAQC,EAAkD,EAAlDA,OAAQiI,EAA0C,EAA1CA,SAAUQ,EAAgC,EAAhCA,WAAY8D,EAAoB,EAApBA,cAAoB,EAC1BjJ,mBAAmB,CACrD,UACA,mBAH4D,mBACvDkJ,EADuD,KAC3CC,EAD2C,KAa9D,OACE,sBAAK7D,UAAU,0BAAf,UACE,sBAAKA,UAAU,uBAAf,mBAEE,wBACE8D,UAAQ,EACRnK,KAAMlE,OAAOD,KAAK+N,GAAYjN,OAC9BgN,MAAOM,EACPR,SAAU,SAACC,GAAD,OAhBEU,EAgBgBV,EAAElN,OAAOmN,WAf3CO,GAAc,SAAClC,GACb,OAAIA,EAAKqC,SAASD,GACTpC,EAAK/L,QAAO,SAACiM,GAAD,OAAUA,IAASkC,KAElC,GAAN,mBAAWpC,GAAX,CAAiBoC,OALF,IAACA,GAYd,SAMGtO,OAAOD,KAAK+N,GAAYzB,KAAI,SAACiC,GAC5B,IAAME,EAAML,EAAWM,QAAQH,GAC/B,OAAIE,GAAO,EAEP,wBAAmBX,MAAOS,EAA1B,oBACOE,EAAM,EADb,aACmBF,IADNA,GAMf,yBAAmBT,MAAOS,EAA1B,iCACiCA,IADpBA,WAOrB,qBAAK/D,UAAU,qBAAf,SACG4D,EAAW9B,KAAI,SAACiC,GAAD,OACd,cAAC,WAAD,CAAqBI,SAAU,cAACC,EAAA,EAAD,IAA/B,SACGjH,wBAAcoG,EAAWQ,GAAkC,CAC1D5M,SACAC,SACAiI,WACAQ,aACA8D,mBANWI,cCpDZM,EAAa1E,IAAMC,MAAK,WAAO,IAAD,EACN0E,YAASC,KAApCpN,EADiC,EACjCA,OAAQC,EADyB,EACzBA,OAAQoN,EADiB,EACjBA,OADiB,EAEL9J,mBAAS,IAFJ,mBAElCmF,EAFkC,KAEtB8D,EAFsB,KAGzC3I,qBAAU,WACRyJ,YAAetN,KACd,CAACA,IALqC,MAOPuD,oBAAS,GAPF,mBAOlCkG,EAPkC,KAOvBiC,EAPuB,OAQTnI,oBAAS,GARA,mBAQlC4E,EARkC,KAQxBwD,EARwB,OASfpI,oBAAS,GATM,mBASlC6E,EATkC,KAS3BwD,EAT2B,OAUPrI,oBAAS,GAVF,mBAUlC8E,EAVkC,KAUvBwD,EAVuB,OAWOtI,oBAAS,GAXhB,mBAWlCuI,EAXkC,KAWhBC,EAXgB,KAezC,OAFAwB,YAAevN,EAAQC,GAGrB,sBAAK4I,UAAU,uBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,cAAC,EAAD,CACEY,UAAWA,EACXiC,aAAcA,EACdvD,SAAUA,EACVwD,YAAaA,EACbvD,MAAOA,EACPwD,SAAUA,EACVvD,UAAWA,EACXwD,aAAcA,EACdC,iBAAkBA,EAClBC,oBAAqBA,IAEvB,cAAC,EAAD,CACE/L,OAAQA,EACRC,OAAQA,EACRyJ,cAAe2D,EAAO3D,cACtBC,cAAe0D,EAAO1D,cACtBH,OAAQ6D,EAAO7D,OACftB,SAAUmF,EAAOnF,SACjBQ,WAAYA,EACZe,UAAWA,EACXtB,SAAUA,EACVC,MAAOA,EACPC,UAAWA,OAGf,qBACEQ,UAAU,wBACV1C,MAAO,CAAEC,QAAS0F,EAAmB,UAAY,QAFnD,SAIE,cAAC,EAAD,CACE9L,OAAQA,EACRC,OAAQA,EACRiI,SAAUmF,EAAOnF,SACjBQ,WAAYA,EACZ8D,cAAeA,YAOVU,a,uGC5DTM,EAAiB,GAGjBC,EAAqB,SAACzN,GAC1B,IAAM2K,EAAoC,GAM1C,OALA6C,EAAMnO,SAAQ,SAAC4C,GACTA,EAAMjC,SAAWA,IACnB2K,EAAI1I,EAAMhC,QAAUgC,EAAMiG,aAGvByC,GAQI4C,EAAiB,SAACvN,EAAgBC,GAAoB,IAAD,EAC1BsD,oBAEnC,kBAAMkK,EAAmBzN,MAHoC,mBACzD0N,EADyD,KAC5CC,EAD4C,KA+ChE,OA3CAhJ,YACE3E,EACAC,EACAqE,uBACE,SAACtD,EAAMC,GACL,GAdiBnD,EAcIkD,EAb3BnD,YAASC,IACTD,YAAUC,EAAwBmD,OAC8B,kBAAxDnD,EAAsCmD,KAAKiH,SAW7C,CAdgB,IAACpK,EAeX8P,EAAQJ,EAAMK,WAClB,SAAC5L,GAAD,OAAWA,EAAMjC,SAAWA,GAAUiC,EAAMhC,SAAWgB,EAAKhB,UAExDsK,EAAMD,KAAKC,MACbqD,GAAS,GACPJ,EAAMI,GAAO1F,WAAalH,EAAKC,KAAKiH,WACtCsF,EAAMI,GAAO1F,SAAWlH,EAAKC,KAAKiH,UAEpCsF,EAAMI,GAAOE,YAAcvD,GAE3BiD,EAAM3O,KAAK,CACTmB,SACAC,OAAQgB,EAAKhB,OACbiI,SAAUlH,EAAKC,KAAKiH,SACpB4F,YAAavD,IAGjB,IAAK,IAAItL,EAAIuO,EAAMrO,OAAS,EAAGF,GAAK,EAAGA,GAAK,EACtCuO,EAAMvO,GAAG6O,YA7CX,IA6C+BvD,GAC/BiD,EAAM9I,OAAOzF,EAAG,GAGpB0O,GAAe,SAACnD,GACd,IAAMG,EAAM8C,EAAmBzN,GACzB3B,EAAOC,OAAOD,KAAKsM,GACzB,OACEtM,EAAKc,SAAWb,OAAOD,KAAKmM,GAAMrL,QAClCd,EAAK0P,OAAM,SAACzO,GAAD,OAASqL,EAAIrL,KAASkL,EAAKlL,MAE/BkL,EAEFG,QAGX,CAAC3K,KAGE0N,I,uIC5EIM,EAAc,uCAAG,WAAOnH,GAAP,yBAAA3G,EAAA,6DACtB4G,EAAcD,EAChB,CACEf,MAAO,CAAEe,aAEX,CAAEf,OAAO,GALe,SAMPiB,UAAUC,aAAaC,aAAaH,GAN7B,cAMtB5B,EANsB,SAOZA,EAAOgC,iBAPK,mBAOrB9F,EAPqB,KAQtB4B,EAAU,WACd5B,EAAM0G,QAToB,kBAWrB,CACL5C,SACAlC,YAb0B,2CAAH,sDAiBdiL,EAAkB,uCAAG,WAAOpH,GAAP,yBAAA3G,EAAA,6DAC1B4G,EAAc,CAClBhB,MAAO,CACLe,WACAqH,UAAW,CAAExG,IAAK,GAClB/B,MAAO,CAAEwI,MAAO,IAChBtI,OAAQ,CAAEsI,MAAO,MANW,SASXpH,UAAUC,aAAaC,aAAaH,GATzB,cAS1B5B,EAT0B,SAUhBA,EAAOgC,iBAVS,mBAUzB9F,EAVyB,KAW1B4B,EAAU,WACd5B,EAAM0G,QAZwB,kBAczB,CACL5C,SACAlC,YAhB8B,2CAAH,uD,yHCfhB,SAASoL,EAAeC,GACrC,IAAI/O,ECFS,SAAsBgP,EAAOC,GAC1C,GAAuB,WAAnB,YAAQD,IAAiC,OAAVA,EAAgB,OAAOA,EAC1D,IAAIE,EAAOF,EAAMG,OAAOC,aAExB,QAAa1J,IAATwJ,EAAoB,CACtB,IAAIG,EAAMH,EAAKI,KAAKN,EAAOC,GAAQ,WACnC,GAAqB,WAAjB,YAAQI,GAAmB,OAAOA,EACtC,MAAM,IAAIE,UAAU,gDAGtB,OAAiB,WAATN,EAAoBO,OAASC,QAAQT,GDRnC,CAAYD,EAAK,UAC3B,MAAwB,WAAjB,YAAQ/O,GAAoBA,EAAMwP,OAAOxP,G,kCEJrC0P,EAAc,uCAAG,WAAOnI,GAAP,yBAAA3G,EAAA,6DACtB4G,EAAcD,EAChB,CACEoI,MAAO,CAAEpI,aAEX,CAAEoI,OAAO,GALe,SAMPlI,UAAUC,aAAaC,aAAaH,GAN7B,cAMtB5B,EANsB,SAOZA,EAAOgK,iBAPK,mBAOrB9N,EAPqB,cAQtBA,EAAM+N,iBAAiB,CAC3BC,kBAAkB,EAClBC,qBAAsB,CAAEC,MAAO,UAC/BC,iBAAkB,CAAED,OAAO,KAXD,cAatBtM,EAAU,WACd5B,EAAM0G,QAdoB,kBAgBrB,CACL5C,SACAlC,YAlB0B,2CAAH,sD,SCMrBwM,EAAmB,SACvBpO,EACA8D,EACAuK,GAEA,IAAMC,EAAYxK,GAAU,IAAIyK,YAShC,OARAD,EAAUvM,SAAS/B,GACnBsO,EAAUE,cAAc,IAAIC,sBAAsB,WAAY,CAAEzO,WAChEA,EAAM0O,iBAAiB,SAAS,WAC9BJ,EAAUtM,YAAYhC,GACe,IAAjCsO,EAAUK,YAAY5Q,QACxBsQ,EAAcC,MAGXA,GAGIpE,EAAgB,SAC3BtL,EACAC,EACA+P,EACAC,EACA7H,EACAsB,EACAC,EACAuG,GACI,IAAD,EACiC3M,mBAA6B,MAD9D,mBACIgI,EADJ,KACgB4E,EADhB,OAEuC5M,mBAEvC,IAJA,mBAEIiI,EAFJ,KAEmB4E,EAFnB,KAMGC,EAAYjM,kBAAO,GACzBP,qBAAU,WAIR,OAHgB,WACdwM,EAAU7L,SAAU,KAGrB,IAEH,IAAMM,EAAUR,sBAAW,uCAAC,WAAOlD,EAAOH,GAAd,eAAAf,EAAA,sDACpBuP,EAAgB,SAACa,GACjBD,EAAU7L,SACZ4L,GAAiB,SAAC5F,GAAU,IAAD,EAChBvJ,EAAKhB,OAASsQ,EAAuB/F,EADrB,GACYgG,EADZ,YACqBhG,EADrB,YAEzB,OAAI+F,IAAcD,EACTE,EAEFhG,MAIb4F,GAAiB,SAAC5F,GAChB,IAAMtF,EAASsF,EAAKvJ,EAAKhB,QACnByP,EAAYF,EAAiBpO,EAAO8D,EAAQuK,GAClD,OAAIvK,IAAWwK,EACNlF,EAEF,2BAAKA,GAAZ,kBAAmBvJ,EAAKhB,OAASyP,OAlBT,2CAAD,wDAoBxB,IAEGe,EAAgB5L,YACpB7E,EACAC,EACA6E,EACAkL,EAAY,UAAME,GAAiB,OAAvB,cAAuClL,GAG/C0L,EAAgB7L,YACpB7E,EACAC,EACA6E,EACAmL,EAAY,UAAMC,GAAiB,OAAvB,cAAuClL,GAoFrD,OAjFAnB,qBAAU,WACR,IAAIb,EAA+B,KAyBnC,OAxBIgN,GAAgBS,GAClB,sBAAC,0CAAAvQ,EAAA,sEAIW+N,YAAmBvE,GAJ9B,gBAEWiH,EAFX,EAEGzL,OACS0L,EAHZ,EAGG5N,QAHH,EAKsB2N,EAAYzJ,iBALlC,mBAKQ2J,EALR,KAMOC,EAAmBL,EAAcI,GACjCpB,EAAgB,SAACa,GACjBD,EAAU7L,SACZ2L,GAAc,SAAC3F,GAAD,OAAWA,IAAS8F,EAAI,KAAO9F,MAGjD2F,GAAc,SAAC3F,GAAD,OACZgF,EAAiBqB,EAAYrG,EAAMiF,MAErCzM,EAAU,WACR8N,IACAF,IAEAC,EAAWjB,cAAc,IAAImB,MAAM,WAnBtC,2CAAD,GAuBK,WACD/N,GAASA,OAEd,CAAChD,EAAQgQ,EAActG,EAAe+G,IAEzC5M,qBAAU,WACR,IAAIb,EAA+B,KAyBnC,OAxBIiN,GAAgBS,GAClB,sBAAC,0CAAAxQ,EAAA,sEAIW8O,EAAerF,GAJ1B,gBAEWqH,EAFX,EAEG9L,OACS+L,EAHZ,EAGGjO,QAHH,EAKsBgO,EAAY9B,iBALlC,mBAKQgC,EALR,KAMOC,EAAmBT,EAAcQ,GACjCzB,EAAgB,SAACa,GACjBD,EAAU7L,SACZ2L,GAAc,SAAC3F,GAAD,OAAWA,IAAS8F,EAAI,KAAO9F,MAGjD2F,GAAc,SAAC3F,GAAD,OACZgF,EAAiB0B,EAAY1G,EAAMiF,MAErCzM,EAAU,WACRmO,IACAF,IAEAC,EAAWtB,cAAc,IAAImB,MAAM,WAnBtC,2CAAD,GAuBK,WACD/N,GAASA,OAEd,CAAChD,EAAQiQ,EAActG,EAAe+G,IACzC7M,qBAAU,WACR,GAAI0H,EAAY,CACdA,EAAW2D,iBAAiB7P,SAAQ,SAAC+B,GAChBA,EACRgQ,QAAUhJ,KAEvB,IAAMiJ,EAAa,SAACC,GAAkC,IAC5ClQ,EAAUkQ,EAAVlQ,MACW,UAAfA,EAAMmQ,OACRnQ,EAAMgQ,QAAUhJ,IAIpB,OADAmD,EAAWuE,iBAAiB,WAAYuB,GACjC,WACL9F,EAAWiG,oBAAoB,WAAYH,OAI9C,CAAC9F,EAAYnD,IAET,CAAEmD,aAAYC,mB,iCClKR,SAASiG,EAAyBrS,EAAQsS,GACvD,GAAc,MAAVtS,EAAgB,MAAO,GAC3B,IACIE,EAAKL,EADLD,ECHS,SAAuCI,EAAQsS,GAC5D,GAAc,MAAVtS,EAAgB,MAAO,GAC3B,IAEIE,EAAKL,EAFLD,EAAS,GACT2S,EAAarT,OAAOD,KAAKe,GAG7B,IAAKH,EAAI,EAAGA,EAAI0S,EAAWxS,OAAQF,IACjCK,EAAMqS,EAAW1S,GACbyS,EAAS3E,QAAQzN,IAAQ,IAC7BN,EAAOM,GAAOF,EAAOE,IAGvB,OAAON,EDTM,CAA6BI,EAAQsS,GAGlD,GAAIpT,OAAOC,sBAAuB,CAChC,IAAIqT,EAAmBtT,OAAOC,sBAAsBa,GAEpD,IAAKH,EAAI,EAAGA,EAAI2S,EAAiBzS,OAAQF,IACvCK,EAAMsS,EAAiB3S,GACnByS,EAAS3E,QAAQzN,IAAQ,GACxBhB,OAAOuT,UAAUC,qBAAqBlD,KAAKxP,EAAQE,KACxDN,EAAOM,GAAOF,EAAOE,IAIzB,OAAON,E","file":"static/js/8.8bbd9a75.chunk.js","sourcesContent":["export const isObject = (x: unknown): x is Record<string, unknown> =>\n  typeof x === \"object\" && x !== null;\n\nexport const hasStringProp = <\n  Obj extends Record<string, unknown>,\n  Prop extends string\n>(\n  x: Obj,\n  prop: Prop\n): x is Obj & Record<Prop, string> =>\n  typeof (x as Record<Prop, unknown>)[prop] === \"string\";\n\nexport const hasObjectProp = <\n  Obj extends Record<string, unknown>,\n  Prop extends string\n>(\n  x: Obj,\n  prop: Prop\n): x is Obj & Record<Prop, Record<string, unknown>> =>\n  isObject((x as Record<Prop, unknown>)[prop]);\n\nexport type ReturnPromiseType<\n  F extends (...args: any) => any\n> = ReturnType<F> extends Promise<infer T> ? T : never;\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export const sleep = (ms: number) =>\n  new Promise((resolve) => setTimeout(resolve, ms));\n","import { useEffect, useState, useCallback, useRef } from \"react\";\n\nimport { ReturnPromiseType } from \"../utils/types\";\nimport { PeerInfo, createRoom, NetworkStatus } from \"../network/room\";\n\ntype NetworkStatusListener = (status: NetworkStatus) => void;\ntype NewPeerListener = (peerIndex: number) => void;\ntype DataListener = (data: unknown, info: PeerInfo) => void;\ntype TrackListener = (track: MediaStreamTrack, info: PeerInfo) => void;\ntype TrackCacheItem = { track: MediaStreamTrack; info: PeerInfo };\ntype RoomEntry = {\n  room: ReturnPromiseType<typeof createRoom>;\n  networkStatusListeners: Set<NetworkStatusListener>;\n  newPeerListeners: Set<NewPeerListener>;\n  dataListeners: Set<DataListener>;\n  trackListeners: Map<string, Set<TrackListener>>; // key = mediaType\n  trackCache: Map<string, Set<TrackCacheItem>>; // key = mediaType\n  count: number;\n};\n\nconst createRoomEntry = async (\n  roomId: string,\n  userId: string\n): Promise<RoomEntry> => {\n  const networkStatusListeners = new Set<NetworkStatusListener>();\n  const newPeerListeners = new Set<NewPeerListener>();\n  const dataListeners = new Set<DataListener>();\n  const trackListeners = new Map<string, Set<TrackListener>>();\n  const trackCache = new Map<string, Set<TrackCacheItem>>();\n  const updateNetworkStatus = (status: NetworkStatus) => {\n    networkStatusListeners.forEach((listener) => {\n      listener(status);\n    });\n  };\n  const notifyNewPeer = (peerIndex: number) => {\n    newPeerListeners.forEach((listener) => {\n      listener(peerIndex);\n    });\n  };\n  const receiveData = (data: unknown, info: PeerInfo) => {\n    dataListeners.forEach((listener) => {\n      listener(data, info);\n    });\n  };\n  const receiveTrack = (\n    mediaType: string,\n    track: MediaStreamTrack,\n    info: PeerInfo\n  ) => {\n    let trackCacheItems = trackCache.get(mediaType);\n    if (!trackCacheItems) {\n      trackCacheItems = new Set<TrackCacheItem>();\n      trackCache.set(mediaType, trackCacheItems);\n    }\n    trackCacheItems.add({ track, info });\n    const listeners = trackListeners.get(mediaType);\n    if (listeners) {\n      listeners.forEach((listener) => {\n        listener(track, info);\n      });\n    }\n  };\n  const room = await createRoom(\n    roomId,\n    userId,\n    updateNetworkStatus,\n    notifyNewPeer,\n    receiveData,\n    receiveTrack\n  );\n  return {\n    room,\n    networkStatusListeners,\n    newPeerListeners,\n    dataListeners,\n    trackListeners,\n    trackCache,\n    count: 0,\n  };\n};\n\nconst roomEntryMap = new Map<string, Promise<RoomEntry>>();\nconst register = async (\n  roomId: string,\n  userId: string,\n  listeners: Readonly<{\n    networkStatusListener?: NetworkStatusListener;\n    newPeerListener?: NewPeerListener;\n    dataListener?: DataListener;\n    trackListener?: Readonly<{\n      mediaType: string;\n      listener: TrackListener;\n    }>;\n  }>\n) => {\n  const roomEntryKey = `${roomId}_${userId}`;\n  if (!roomEntryMap.has(roomEntryKey)) {\n    roomEntryMap.set(roomEntryKey, createRoomEntry(roomId, userId));\n  }\n  const entry = (await roomEntryMap.get(roomEntryKey)) as RoomEntry;\n  if (listeners.networkStatusListener) {\n    entry.networkStatusListeners.add(listeners.networkStatusListener);\n  }\n  if (listeners.newPeerListener) {\n    entry.newPeerListeners.add(listeners.newPeerListener);\n  }\n  if (listeners.dataListener) {\n    entry.dataListeners.add(listeners.dataListener);\n  }\n  if (listeners.trackListener) {\n    const { mediaType, listener } = listeners.trackListener;\n    const mediaTypeSet = new Set(entry.trackListeners.keys());\n    const prevSize = mediaTypeSet.size;\n    let trackListeners = entry.trackListeners.get(mediaType);\n    if (!trackListeners) {\n      trackListeners = new Set<TrackListener>();\n      entry.trackListeners.set(mediaType, trackListeners);\n    }\n    trackListeners.add(listener);\n    mediaTypeSet.add(mediaType);\n    if (prevSize !== mediaTypeSet.size) {\n      entry.room.acceptMediaTypes(Array.from(mediaTypeSet));\n    }\n    const trackCacheItems = entry.trackCache.get(mediaType);\n    if (trackCacheItems) {\n      trackCacheItems.forEach((trackCacheItem) => {\n        if (trackCacheItem.track.readyState === \"ended\") {\n          trackCacheItems.delete(trackCacheItem);\n          return;\n        }\n        listener(trackCacheItem.track, trackCacheItem.info);\n      });\n    }\n  }\n  entry.count += 1;\n  const unregister = () => {\n    if (listeners.networkStatusListener) {\n      entry.networkStatusListeners.delete(listeners.networkStatusListener);\n    }\n    if (listeners.newPeerListener) {\n      entry.newPeerListeners.delete(listeners.newPeerListener);\n    }\n    if (listeners.dataListener) {\n      entry.dataListeners.delete(listeners.dataListener);\n    }\n    if (listeners.trackListener) {\n      const { mediaType, listener } = listeners.trackListener;\n      const trackListeners = entry.trackListeners.get(mediaType);\n      if (trackListeners) {\n        trackListeners.delete(listener);\n        if (trackListeners.size === 0) {\n          entry.trackListeners.delete(mediaType);\n          entry.room.acceptMediaTypes(Array.from(entry.trackListeners.keys()));\n        }\n      }\n    }\n    entry.count -= 1;\n    if (entry.count <= 0) {\n      entry.room.dispose();\n      roomEntryMap.delete(roomEntryKey);\n    }\n  };\n  return {\n    broadcastData: entry.room.broadcastData,\n    sendData: entry.room.sendData,\n    addTrack: entry.room.addTrack,\n    removeTrack: entry.room.removeTrack,\n    unregister,\n  };\n};\n\nexport const useRoomNetworkStatus = (\n  roomId: string,\n  userId: string,\n  onNetworkStatus?: (networkStatus: NetworkStatus) => void\n) => {\n  const [networkStatus, updateNetworkStatus] = useState<NetworkStatus>();\n  if (networkStatus && networkStatus.type === \"UNKNOWN_ERROR\") {\n    throw new Error(`Network Error: ${networkStatus.err.message}`);\n  }\n  useEffect(() => {\n    let cleanup = () => {};\n    (async () => {\n      const { unregister } = await register(roomId, userId, {\n        networkStatusListener: (ns: NetworkStatus) => {\n          updateNetworkStatus(ns);\n          if (onNetworkStatus) onNetworkStatus(ns);\n        },\n      });\n      cleanup = unregister;\n    })();\n    return () => {\n      cleanup();\n    };\n  }, [roomId, userId, onNetworkStatus]);\n  return networkStatus;\n};\n\nexport const useRoomNewPeer = (\n  roomId: string,\n  userId: string,\n  sendInitialData: (send: (data: unknown) => void) => void\n) => {\n  useEffect(() => {\n    let cleanup = () => {};\n    (async () => {\n      const { unregister, sendData } = await register(roomId, userId, {\n        newPeerListener: (peerIndex) => {\n          sendInitialData((data) => sendData(data, peerIndex));\n        },\n      });\n      cleanup = unregister;\n    })();\n    return () => {\n      cleanup();\n    };\n  }, [roomId, userId, sendInitialData]);\n};\n\ntype BroadcastData = ReturnPromiseType<typeof createRoom>[\"broadcastData\"];\n\nexport const useBroadcastData = (roomId: string, userId: string) => {\n  const pending = useRef<Parameters<BroadcastData>[]>([]);\n  const broadcastDataRef = useRef<BroadcastData>();\n  const broadcastData = useCallback((...args: Parameters<BroadcastData>) => {\n    if (broadcastDataRef.current) {\n      broadcastDataRef.current(...args);\n    } else {\n      pending.current.push(args);\n    }\n  }, []);\n  useEffect(() => {\n    let cleanup = () => {};\n    (async () => {\n      const registered = await register(roomId, userId, {});\n      broadcastDataRef.current = registered.broadcastData;\n      cleanup = registered.unregister;\n      pending.current.forEach((args) => {\n        registered.broadcastData(...args);\n      });\n      pending.current.splice(0, pending.current.length);\n    })();\n    return () => {\n      cleanup();\n    };\n  }, [roomId, userId]);\n  return broadcastData;\n};\n\nexport const useRoomData = (\n  roomId: string,\n  userId: string,\n  onRoomData: (data: unknown, info: PeerInfo) => void\n) => {\n  useEffect(() => {\n    let cleanup = () => {};\n    (async () => {\n      const { unregister } = await register(roomId, userId, {\n        dataListener: onRoomData,\n      });\n      cleanup = unregister;\n    })();\n    return () => {\n      cleanup();\n    };\n  }, [roomId, userId, onRoomData]);\n};\n\nexport const useRoomMedia = (\n  roomId: string,\n  userId: string,\n  onTrack: (track: MediaStreamTrack, info: PeerInfo) => void,\n  mediaType?: string\n) => {\n  const [addTrack, setAddTrack] = useState<\n    (track: MediaStreamTrack) => () => void\n  >();\n  useEffect(() => {\n    let cleanup = () => {};\n    if (mediaType) {\n      (async () => {\n        const registered = await register(roomId, userId, {\n          trackListener: { mediaType, listener: onTrack },\n        });\n        setAddTrack(() => (track: MediaStreamTrack) => {\n          registered.addTrack(mediaType, track);\n          return () => registered.removeTrack(mediaType);\n        });\n        cleanup = () => {\n          setAddTrack(undefined);\n          registered.unregister();\n        };\n      })();\n    }\n    return () => {\n      cleanup();\n    };\n  }, [roomId, userId, onTrack, mediaType]);\n  return addTrack;\n};\n","import { sleep } from \"../utils/sleep\";\n\nconst captureImage = async (stream: MediaStream, track: MediaStreamTrack) => {\n  if (typeof ImageCapture !== \"undefined\") {\n    const imageCapture = new ImageCapture(track);\n    await sleep(2000);\n    let srcImg: ImageBitmap;\n    try {\n      const blob = await imageCapture.takePhoto();\n      srcImg = await createImageBitmap(blob);\n    } catch (e) {\n      srcImg = await imageCapture.grabFrame();\n    }\n    const srcW = srcImg.width;\n    const srcH = srcImg.height;\n    return { srcImg, srcW, srcH };\n  }\n  const video = document.createElement(\"video\");\n  video.autoplay = true;\n  video.setAttribute(\"playsinline\", \"\");\n  video.style.display = \"block\";\n  video.style.width = \"1px\";\n  video.style.height = \"1px\";\n  video.style.position = \"absolute\";\n  video.style.bottom = \"0\";\n  document.body.appendChild(video);\n  const dispose = () => {\n    document.body.removeChild(video);\n  };\n  video.srcObject = stream;\n  await sleep(2000);\n  const srcImg = video;\n  const srcW = video.videoWidth;\n  const srcH = video.videoHeight;\n  return { srcImg, srcW, srcH, dispose };\n};\n\nexport const takePhoto = async (deviceId?: string) => {\n  const constraints = deviceId\n    ? {\n        video: { deviceId },\n      }\n    : { video: true };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getVideoTracks();\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n  const dstW = 72;\n  const dstH = 72;\n  canvas.width = dstW;\n  canvas.height = dstH;\n  const { srcImg, srcW, srcH, dispose } = await captureImage(stream, track);\n  const ratio = Math.max(dstW / srcW, dstH / srcH);\n  const width = Math.min(srcW, dstW / ratio);\n  const height = Math.min(srcH, dstH / ratio);\n  const x = (srcW - width) / 2;\n  const y = (srcH - height) / 2;\n  ctx.drawImage(srcImg, x, y, width, height, 0, 0, dstW, dstH);\n  if (dispose) {\n    dispose();\n  }\n  track.stop();\n  return canvas.toDataURL(\"image/jpeg\");\n};\n","import { useCallback, useEffect, useState, useRef } from \"react\";\n\nimport { isObject } from \"../utils/types\";\nimport { takePhoto } from \"../media/capture\";\nimport {\n  useRoomData,\n  useBroadcastData,\n  useRoomNetworkStatus,\n  useRoomNewPeer,\n} from \"./useRoom\";\n\ntype ImageUrl = string;\n\ntype FaceInfo = {\n  nickname: string;\n  message: string;\n  liveMode: boolean;\n  micOn: boolean;\n  speakerOn: boolean;\n};\n\nconst isFaceInfo = (x: unknown): x is FaceInfo =>\n  isObject(x) &&\n  typeof (x as { nickname: unknown }).nickname === \"string\" &&\n  typeof (x as { message: unknown }).message === \"string\" &&\n  typeof (x as { liveMode: unknown }).liveMode === \"boolean\" &&\n  typeof (x as { micOn: unknown }).micOn === \"boolean\" &&\n  typeof (x as { speakerOn: unknown }).speakerOn === \"boolean\";\n\ntype ImageData = {\n  image: ImageUrl;\n  info: FaceInfo;\n};\n\nconst isImageData = (x: unknown): x is ImageData =>\n  isObject(x) &&\n  typeof (x as { image: unknown }).image === \"string\" &&\n  isFaceInfo((x as { info: unknown }).info);\n\ntype RoomImage = ImageData & {\n  userId: string;\n  received: number; // in milliseconds\n  obsoleted: boolean;\n  peerIndex: number;\n};\n\nexport const useFaceImages = (\n  roomId: string,\n  userId: string,\n  avatar: string,\n  nickname: string,\n  statusMesg: string,\n  suspended: boolean,\n  liveMode: boolean,\n  micOn: boolean,\n  speakerOn: boolean,\n  deviceId?: string\n) => {\n  const [myImage, setMyImage] = useState<ImageUrl>();\n  const [roomImages, setRoomImages] = useState<RoomImage[]>([]);\n\n  const [fatalError, setFatalError] = useState<Error>();\n  if (fatalError) {\n    throw fatalError;\n  }\n\n  const lastDataRef = useRef<ImageData>();\n  useRoomNewPeer(\n    roomId,\n    userId,\n    useCallback((send) => {\n      if (lastDataRef.current) {\n        send(lastDataRef.current);\n      }\n    }, [])\n  );\n\n  const broadcastData = useBroadcastData(roomId, userId);\n  useRoomData(\n    roomId,\n    userId,\n    useCallback((data, info) => {\n      if (!isImageData(data)) return;\n      const roomImage = {\n        ...data,\n        userId: info.userId,\n        received: Date.now(),\n        obsoleted: false,\n        peerIndex: info.peerIndex,\n      };\n      setRoomImages((prev) => {\n        const found = prev.find((item) => item.userId === roomImage.userId);\n        if (!found) {\n          return [...prev, roomImage];\n        }\n        return prev.map((item) =>\n          item.userId === roomImage.userId ? roomImage : item\n        );\n      });\n    }, [])\n  );\n\n  useRoomNetworkStatus(\n    roomId,\n    userId,\n    useCallback((networkStatus) => {\n      if (networkStatus && networkStatus.type === \"CONNECTION_CLOSED\") {\n        const { peerIndex } = networkStatus;\n        setRoomImages((prev) => {\n          let changed = false;\n          const next = prev.map((item) => {\n            if (item.peerIndex === peerIndex) {\n              changed = true;\n              return { ...item, obsoleted: true };\n            }\n            return item;\n          });\n          return changed ? next : prev;\n        });\n      }\n    }, [])\n  );\n\n  useEffect(() => {\n    const checkObsoletedImage = () => {\n      const twoMinAgo = Date.now() - 2 * 60 * 1000;\n      const tenMinAgo = Date.now() - 10 * 60 * 1000;\n      setRoomImages((prev) => {\n        let changed = false;\n        const next = prev\n          .map((item) => {\n            if (item.received < twoMinAgo && !item.obsoleted) {\n              changed = true;\n              return { ...item, obsoleted: true };\n            }\n            if (item.received < tenMinAgo && item.obsoleted) {\n              changed = true;\n              return null;\n            }\n            return item;\n          })\n          .filter((item) => item) as typeof prev;\n\n        return changed ? next : prev;\n      });\n    };\n    let didCleanup = false;\n    let timer: NodeJS.Timeout;\n    const loop = async () => {\n      if (didCleanup) return;\n      try {\n        checkObsoletedImage();\n        const image = suspended ? avatar : await takePhoto(deviceId);\n        if (didCleanup) return;\n        setMyImage(image);\n        const info: FaceInfo = {\n          nickname,\n          message: statusMesg,\n          liveMode,\n          micOn,\n          speakerOn,\n        };\n        const data: ImageData = {\n          image,\n          info,\n        };\n        broadcastData(data);\n        lastDataRef.current = data;\n      } catch (e) {\n        setFatalError(e);\n      }\n      timer = setTimeout(loop, 2 * 60 * 1000);\n    };\n    loop();\n    return () => {\n      didCleanup = true;\n      clearTimeout(timer);\n    };\n  }, [\n    roomId,\n    userId,\n    deviceId,\n    avatar,\n    nickname,\n    statusMesg,\n    suspended,\n    liveMode,\n    micOn,\n    speakerOn,\n    broadcastData,\n  ]);\n\n  return {\n    myImage,\n    roomImages,\n  };\n};\n","import React from \"react\";\n\nimport \"./FaceImages.css\";\nimport { BLANK_IMAGE } from \"../media/imagePresets\";\nimport { useFaceImages } from \"../hooks/useFaceImages\";\nimport { useFaceVideos } from \"../hooks/useFaceVideos\";\n\nconst FaceImage = React.memo<{\n  image?: string;\n  nickname: string;\n  statusMesg: string;\n  obsoleted?: boolean;\n  liveMode: boolean;\n  stream?: MediaStream;\n  muted: boolean;\n  micOn: boolean;\n  speakerOn: boolean;\n}>(\n  ({\n    image,\n    nickname,\n    statusMesg,\n    obsoleted,\n    liveMode,\n    stream,\n    muted,\n    micOn,\n    speakerOn,\n  }) => (\n    <div className=\"FaceImages-card\" style={{ opacity: obsoleted ? 0.2 : 1 }}>\n      {liveMode && !obsoleted && stream ? (\n        <video\n          className=\"FaceImages-photo\"\n          ref={(videoEle) => {\n            if (videoEle && videoEle.srcObject !== stream) {\n              // eslint-disable-next-line no-param-reassign\n              videoEle.srcObject = stream;\n            }\n          }}\n          autoPlay\n          playsInline\n          muted={muted}\n        />\n      ) : (\n        <img\n          src={image || BLANK_IMAGE}\n          className=\"FaceImages-photo\"\n          alt=\"myself\"\n        />\n      )}\n      <div className=\"FaceImages-name\">{nickname}</div>\n      <div\n        className=\"FaceImages-mesg\"\n        title={[...statusMesg][1] ? statusMesg : \"(No status message)\"}\n      >\n        {[...statusMesg][0]}\n      </div>\n      {liveMode && !obsoleted && stream && (\n        <div className=\"FaceImages-live-indicator\" title=\"Live Mode On\">\n          &#9673;\n        </div>\n      )}\n      {liveMode && !obsoleted && !stream && (\n        <div className=\"FaceImages-live-indicator\" title=\"Live Mode Available\">\n          &#9678;\n        </div>\n      )}\n      {liveMode && !obsoleted && (\n        <div className=\"FaceImages-mic-speaker-icons\">\n          {micOn && <span title=\"Mic On\">&#x1F3A4;</span>}\n          {speakerOn && <span title=\"Speaker On\">&#x1F508;</span>}\n        </div>\n      )}\n    </div>\n  )\n);\n\nexport const FaceImages = React.memo<{\n  roomId: string;\n  userId: string;\n  avatar: string;\n  nickname: string;\n  statusMesg: string;\n  suspended: boolean;\n  liveMode: boolean;\n  micOn: boolean;\n  speakerOn: boolean;\n  videoDeviceId?: string;\n  audioDeviceId?: string;\n}>(\n  ({\n    roomId,\n    userId,\n    avatar,\n    nickname,\n    statusMesg,\n    suspended,\n    liveMode,\n    micOn,\n    speakerOn,\n    videoDeviceId,\n    audioDeviceId,\n  }) => {\n    const { myImage, roomImages } = useFaceImages(\n      roomId,\n      userId,\n      avatar,\n      nickname,\n      statusMesg,\n      suspended,\n      liveMode,\n      micOn,\n      speakerOn,\n      videoDeviceId\n    );\n    const { faceStream, faceStreamMap } = useFaceVideos(\n      roomId,\n      userId,\n      liveMode,\n      liveMode,\n      micOn,\n      videoDeviceId,\n      audioDeviceId\n    );\n\n    return (\n      <>\n        <FaceImage\n          image={myImage}\n          nickname={nickname}\n          statusMesg={statusMesg}\n          liveMode={liveMode}\n          stream={faceStream || undefined}\n          muted\n          micOn={micOn}\n          speakerOn={speakerOn}\n        />\n        {roomImages.map((item) => (\n          <FaceImage\n            key={item.userId}\n            image={item.image}\n            nickname={item.info.nickname}\n            statusMesg={item.info.message}\n            obsoleted={item.obsoleted}\n            liveMode={item.info.liveMode}\n            stream={(liveMode && faceStreamMap[item.userId]) || undefined}\n            muted={!speakerOn}\n            micOn={item.info.micOn}\n            speakerOn={item.info.speakerOn}\n          />\n        ))}\n      </>\n    );\n  }\n);\n","import React, { Dispatch, SetStateAction } from \"react\";\n\nimport \"./ControlPanel.css\";\n\nexport const ControlPanel = React.memo<{\n  suspended: boolean;\n  setSuspended: Dispatch<SetStateAction<boolean>>;\n  liveMode: boolean;\n  setLiveMode: Dispatch<SetStateAction<boolean>>;\n  micOn: boolean;\n  setMicOn: Dispatch<SetStateAction<boolean>>;\n  speakerOn: boolean;\n  setSpeakerOn: Dispatch<SetStateAction<boolean>>;\n  secondColumnOpen: boolean;\n  setSecondColumnOpen: Dispatch<SetStateAction<boolean>>;\n}>(\n  ({\n    suspended,\n    setSuspended,\n    liveMode,\n    setLiveMode,\n    setMicOn,\n    setSpeakerOn,\n    secondColumnOpen,\n    setSecondColumnOpen,\n  }) => (\n    <div className=\"ControlPanel-container\">\n      <button\n        type=\"button\"\n        onClick={() => setSuspended((x) => !x)}\n        title={suspended ? \"Enable Camera\" : \"Disable Camera\"}\n      >\n        &#x1F4F7;\n        {suspended && <span className=\"ControlPanel-disabled\">&#10060;</span>}\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => setSecondColumnOpen((x) => !x)}\n        title={secondColumnOpen ? \"Close Right Pane\" : \"Open Right Pane\"}\n      >\n        {secondColumnOpen ? <>&#9664;</> : <>&#9654;</>}\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => setLiveMode((x) => !x)}\n        title={liveMode ? \"Disable Live Mode\" : \"Enable Live Mode\"}\n      >\n        &#x1F3A5;\n        {!liveMode && <span className=\"ControlPanel-disabled\">&#10060;</span>}\n      </button>\n      <div className=\"ControlPanel-select\">\n        &#x1F39B;\n        <select\n          onChange={(e) => {\n            switch (e.target.value) {\n              case \"off\":\n                setSpeakerOn(false);\n                setMicOn(false);\n                break;\n              case \"speaker\":\n                setSpeakerOn(true);\n                setMicOn(false);\n                break;\n              case \"mic\":\n                setSpeakerOn(true);\n                setMicOn(true);\n                break;\n              default:\n                throw new Error(\"no option\");\n            }\n          }}\n        >\n          <option value=\"off\">Audio Off</option>\n          <option value=\"speaker\">Speaker Only</option>\n          <option value=\"mic\">Mic + Speaker</option>\n        </select>\n      </div>\n    </div>\n  )\n);\n","import React, { Suspense, createElement, useState } from \"react\";\n\nimport { SuspenseFallback } from \"./SuspenseFallback\";\nimport \"./SelectivePane.css\";\n\nconst components = {\n  Welcome: React.lazy(() => import(\"./Welcome\")),\n  \"Momentary Chat\": React.lazy(() => import(\"./MomentaryChat\")),\n  \"Spatial Area\": React.lazy(() => import(\"./SpatialArea\")),\n  \"Screen Share\": React.lazy(() => import(\"./ScreenShare\")),\n  \"White Board\": React.lazy(() => import(\"./CollabWhiteBoard\")),\n  \"Video Share\": React.lazy(() => import(\"./VideoShare\")),\n  \"Go Board\": React.lazy(() => import(\"./GoBoard\")),\n};\n\nexport const SelectivePane = React.memo<{\n  roomId: string;\n  userId: string;\n  nickname: string;\n  statusMesg: string;\n  setStatusMesg: (mesg: string) => void;\n}>(({ roomId, userId, nickname, statusMesg, setStatusMesg }) => {\n  const [activePane, setActivePane] = useState<string[]>([\n    \"Welcome\",\n    \"Momentary Chat\",\n  ]);\n  const togglePane = (name: string) => {\n    setActivePane((prev) => {\n      if (prev.includes(name)) {\n        return prev.filter((item) => item !== name);\n      }\n      return [...prev, name];\n    });\n  };\n  return (\n    <div className=\"SelectivePane-container\">\n      <div className=\"SelectivePane-select\">\n        &#9776;\n        <select\n          multiple\n          size={Object.keys(components).length}\n          value={activePane}\n          onChange={(e) => togglePane(e.target.value)}\n        >\n          {Object.keys(components).map((name) => {\n            const idx = activePane.indexOf(name);\n            if (idx >= 0) {\n              return (\n                <option key={name} value={name}>\n                  {`[${idx + 1}] ${name}`}\n                </option>\n              );\n            }\n            return (\n              <option key={name} value={name}>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{name}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <div className=\"SelectivePane-body\">\n        {activePane.map((name) => (\n          <Suspense key={name} fallback={<SuspenseFallback />}>\n            {createElement(components[name as keyof typeof components], {\n              roomId,\n              userId,\n              nickname,\n              statusMesg,\n              setStatusMesg,\n            })}\n          </Suspense>\n        ))}\n      </div>\n    </div>\n  );\n});\n","import React, { useEffect, useState } from \"react\";\nimport { useProxy } from \"valtio\";\n\nimport \"./SingleRoom.css\";\nimport { singleRoomState } from \"../states/singleRoom\";\nimport { setRoomIdToUrl } from \"../utils/url\";\nimport { useNicknameMap } from \"../hooks/useNicknameMap\";\nimport { FaceImages } from \"./FaceImages\";\nimport { ControlPanel } from \"./ControlPanel\";\nimport { SelectivePane } from \"./SelectivePane\";\n\nexport const SingleRoom = React.memo(() => {\n  const { roomId, userId, config } = useProxy(singleRoomState);\n  const [statusMesg, setStatusMesg] = useState(\"\");\n  useEffect(() => {\n    setRoomIdToUrl(roomId);\n  }, [roomId]);\n\n  const [suspended, setSuspended] = useState(true);\n  const [liveMode, setLiveMode] = useState(false);\n  const [micOn, setMicOn] = useState(false);\n  const [speakerOn, setSpeakerOn] = useState(false);\n  const [secondColumnOpen, setSecondColumnOpen] = useState(true);\n\n  useNicknameMap(roomId, userId); // to enable caching\n\n  return (\n    <div className=\"SingleRoom-container\">\n      <div className=\"SingleRoom-1st-column\">\n        <ControlPanel\n          suspended={suspended}\n          setSuspended={setSuspended}\n          liveMode={liveMode}\n          setLiveMode={setLiveMode}\n          micOn={micOn}\n          setMicOn={setMicOn}\n          speakerOn={speakerOn}\n          setSpeakerOn={setSpeakerOn}\n          secondColumnOpen={secondColumnOpen}\n          setSecondColumnOpen={setSecondColumnOpen}\n        />\n        <FaceImages\n          roomId={roomId}\n          userId={userId}\n          videoDeviceId={config.videoDeviceId}\n          audioDeviceId={config.audioDeviceId}\n          avatar={config.avatar}\n          nickname={config.nickname}\n          statusMesg={statusMesg}\n          suspended={suspended}\n          liveMode={liveMode}\n          micOn={micOn}\n          speakerOn={speakerOn}\n        />\n      </div>\n      <div\n        className=\"SingleRoom-2nd-column\"\n        style={{ display: secondColumnOpen ? \"inherit\" : \"none\" }}\n      >\n        <SelectivePane\n          roomId={roomId}\n          userId={userId}\n          nickname={config.nickname}\n          statusMesg={statusMesg}\n          setStatusMesg={setStatusMesg}\n        />\n      </div>\n    </div>\n  );\n});\n\nexport default SingleRoom;\n","import { useCallback, useState } from \"react\";\n\nimport { isObject } from \"../utils/types\";\nimport { useRoomData } from \"./useRoom\";\n\ntype Entry = {\n  roomId: string;\n  userId: string;\n  nickname: string;\n  lastUpdated: number;\n};\nconst cache: Entry[] = [];\nconst TTL = 10 * 60 * 1000; // 10min\n\nconst createMapFromCache = (roomId: string) => {\n  const map: { [userId: string]: string } = {};\n  cache.forEach((entry) => {\n    if (entry.roomId === roomId) {\n      map[entry.userId] = entry.nickname;\n    }\n  });\n  return map;\n};\n\nconst hasInfoNickname = (x: unknown): x is { info: { nickname: string } } =>\n  isObject(x) &&\n  isObject((x as { info: unknown }).info) &&\n  typeof (x as { info: { nickname: unknown } }).info.nickname === \"string\";\n\nexport const useNicknameMap = (roomId: string, userId: string) => {\n  const [nicknameMap, setNicknameMap] = useState<{\n    [userId: string]: string;\n  }>(() => createMapFromCache(roomId));\n  useRoomData(\n    roomId,\n    userId,\n    useCallback(\n      (data, info) => {\n        if (!hasInfoNickname(data)) return;\n        const index = cache.findIndex(\n          (entry) => entry.roomId === roomId && entry.userId === info.userId\n        );\n        const now = Date.now();\n        if (index >= 0) {\n          if (cache[index].nickname !== data.info.nickname) {\n            cache[index].nickname = data.info.nickname;\n          }\n          cache[index].lastUpdated = now;\n        } else {\n          cache.push({\n            roomId,\n            userId: info.userId,\n            nickname: data.info.nickname,\n            lastUpdated: now,\n          });\n        }\n        for (let i = cache.length - 1; i >= 0; i -= 1) {\n          if (cache[i].lastUpdated + TTL < now) {\n            cache.splice(i, 1);\n          }\n        }\n        setNicknameMap((prev) => {\n          const map = createMapFromCache(roomId);\n          const keys = Object.keys(map);\n          if (\n            keys.length === Object.keys(prev).length &&\n            keys.every((key) => map[key] === prev[key])\n          ) {\n            return prev;\n          }\n          return map;\n        });\n      },\n      [roomId]\n    )\n  );\n  return nicknameMap;\n};\n","export const getVideoStream = async (deviceId?: string) => {\n  const constraints = deviceId\n    ? {\n        video: { deviceId },\n      }\n    : { video: true };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getVideoTracks();\n  const dispose = () => {\n    track.stop();\n  };\n  return {\n    stream,\n    dispose,\n  };\n};\n\nexport const getFaceVideoStream = async (deviceId?: string) => {\n  const constraints = {\n    video: {\n      deviceId,\n      frameRate: { max: 5 },\n      width: { exact: 72 },\n      height: { exact: 72 },\n    },\n  };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getVideoTracks();\n  const dispose = () => {\n    track.stop();\n  };\n  return {\n    stream,\n    dispose,\n  };\n};\n","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport toPrimitive from \"@babel/runtime/helpers/esm/toPrimitive\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}","export const getAudioStream = async (deviceId?: string) => {\n  const constraints = deviceId\n    ? {\n        audio: { deviceId },\n      }\n    : { audio: true };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getAudioTracks();\n  await track.applyConstraints({\n    echoCancellation: true,\n    echoCancellationType: { ideal: \"system\" },\n    noiseSuppression: { ideal: true },\n  } as MediaTrackConstraints);\n  const dispose = () => {\n    track.stop();\n  };\n  return {\n    stream,\n    dispose,\n  };\n};\n","import { useCallback, useEffect, useState, useRef } from \"react\";\n\nimport { getFaceVideoStream } from \"../media/video\";\nimport { getAudioStream } from \"../media/audio\";\nimport { useRoomMedia } from \"./useRoom\";\n\nconst addTrackToStream = (\n  track: MediaStreamTrack,\n  stream: MediaStream | null,\n  disposeStream: (s: MediaStream) => void\n) => {\n  const newStream = stream || new MediaStream();\n  newStream.addTrack(track);\n  newStream.dispatchEvent(new MediaStreamTrackEvent(\"addtrack\", { track }));\n  track.addEventListener(\"ended\", () => {\n    newStream.removeTrack(track);\n    if (newStream.getTracks().length === 0) {\n      disposeStream(newStream);\n    }\n  });\n  return newStream;\n};\n\nexport const useFaceVideos = (\n  roomId: string,\n  userId: string,\n  videoEnabled: boolean,\n  audioEnabled: boolean,\n  micOn: boolean,\n  videoDeviceId?: string,\n  audioDeviceId?: string,\n  uniqueMediaId?: string\n) => {\n  const [faceStream, setFaceStream] = useState<MediaStream | null>(null);\n  const [faceStreamMap, setFaceStreamMap] = useState<{\n    [userId: string]: MediaStream;\n  }>({});\n\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const cleanup = () => {\n      isMounted.current = false;\n    };\n    return cleanup;\n  }, []);\n\n  const onTrack = useCallback(async (track, info) => {\n    const disposeStream = (s: MediaStream) => {\n      if (isMounted.current) {\n        setFaceStreamMap((prev) => {\n          const { [info.userId]: oldStream, ...rest } = prev;\n          if (oldStream === s) {\n            return rest;\n          }\n          return prev;\n        });\n      }\n    };\n    setFaceStreamMap((prev) => {\n      const stream = prev[info.userId];\n      const newStream = addTrackToStream(track, stream, disposeStream);\n      if (stream === newStream) {\n        return prev;\n      }\n      return { ...prev, [info.userId]: newStream };\n    });\n  }, []);\n\n  const addVideoTrack = useRoomMedia(\n    roomId,\n    userId,\n    onTrack,\n    videoEnabled ? `${uniqueMediaId || \"face\"}Video` : undefined\n  );\n\n  const addAudioTrack = useRoomMedia(\n    roomId,\n    userId,\n    onTrack,\n    audioEnabled ? `${uniqueMediaId || \"face\"}Audio` : undefined\n  );\n\n  useEffect(() => {\n    let dispose: (() => void) | null = null;\n    if (videoEnabled && addVideoTrack) {\n      (async () => {\n        const {\n          stream: videoStream,\n          dispose: disposeVideo,\n        } = await getFaceVideoStream(videoDeviceId);\n        const [videoTrack] = videoStream.getVideoTracks();\n        const removeVideoTrack = addVideoTrack(videoTrack);\n        const disposeStream = (s: MediaStream) => {\n          if (isMounted.current) {\n            setFaceStream((prev) => (prev === s ? null : prev));\n          }\n        };\n        setFaceStream((prev) =>\n          addTrackToStream(videoTrack, prev, disposeStream)\n        );\n        dispose = () => {\n          removeVideoTrack();\n          disposeVideo();\n          // XXX we need to manually dispatch ended event, why?\n          videoTrack.dispatchEvent(new Event(\"ended\"));\n        };\n      })();\n    }\n    return () => {\n      if (dispose) dispose();\n    };\n  }, [roomId, videoEnabled, videoDeviceId, addVideoTrack]);\n\n  useEffect(() => {\n    let dispose: (() => void) | null = null;\n    if (audioEnabled && addAudioTrack) {\n      (async () => {\n        const {\n          stream: audioStream,\n          dispose: disposeAudio,\n        } = await getAudioStream(audioDeviceId);\n        const [audioTrack] = audioStream.getAudioTracks();\n        const removeAudioTrack = addAudioTrack(audioTrack);\n        const disposeStream = (s: MediaStream) => {\n          if (isMounted.current) {\n            setFaceStream((prev) => (prev === s ? null : prev));\n          }\n        };\n        setFaceStream((prev) =>\n          addTrackToStream(audioTrack, prev, disposeStream)\n        );\n        dispose = () => {\n          removeAudioTrack();\n          disposeAudio();\n          // XXX we need to manually dispatch ended event, why?\n          audioTrack.dispatchEvent(new Event(\"ended\"));\n        };\n      })();\n    }\n    return () => {\n      if (dispose) dispose();\n    };\n  }, [roomId, audioEnabled, audioDeviceId, addAudioTrack]);\n  useEffect(() => {\n    if (faceStream) {\n      faceStream.getAudioTracks().forEach((track) => {\n        const audioTrack = track;\n        audioTrack.enabled = micOn;\n      });\n      const onaddtrack = (event: MediaStreamTrackEvent) => {\n        const { track } = event;\n        if (track.kind === \"audio\") {\n          track.enabled = micOn;\n        }\n      };\n      faceStream.addEventListener(\"addtrack\", onaddtrack);\n      return () => {\n        faceStream.removeEventListener(\"addtrack\", onaddtrack);\n      };\n    }\n    return undefined;\n  }, [faceStream, micOn]);\n\n  return { faceStream, faceStreamMap };\n};\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}