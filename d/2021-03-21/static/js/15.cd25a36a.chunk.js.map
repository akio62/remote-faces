{"version":3,"sources":["hooks/useGatherArea.ts","components/RegionEditor.tsx","components/GatherArea.tsx"],"names":["ROOM_STATE_KEY","RegionEditor","React","memo","roomId","userId","useState","regionId","setRegionId","type","setType","left","setLeft","top","setTop","width","setWidth","height","setHeight","zIndex","setZIndex","background","setBackground","border","setBorder","iframe","setIframe","allRegionData","setAllRegionData","className","value","onChange","e","target","Number","max","onClick","data","position","size","getRoomState","ydoc","getMap","set","addRegion","disabled","map","JSON","stringify","toJSON","loadAllRegionData","Object","entries","parse","forEach","key","console","log","MomentaryChat","lazy","Region","nickname","id","highlight","boxShadow","undefined","style","title","src","frameBorder","fallback","SuspenseFallback","uniqueId","Avatar","statusMesg","image","setPosition","registerOnMouseDrag","stream","muted","isMyself","onMouseDown","preventDefault","currentTarget","offset","clientX","clientY","FaceCard","obsoleted","liveMode","micOn","speakerOn","GatherArea","avatar","suspended","videoDeviceId","audioDeviceId","useFaceImages","myImage","roomImages","uid","avatarMap","setAvatarMap","parseInt","slice","myAvatar","setMyAvatar","useEffect","roomState","listener","prev","copied","changed","a","b","userIdMap","x","obj","isAvatarData","keys","observe","unsub","subscribe","unobserve","dataToBroadcast","useRef","current","setTimeout","regionMap","setRegionMap","next","includes","isRegionData","updateRegion","useCallback","useGatherArea","onMouseDragRef","onMouseMove","activeMeetingRegionId","sort","find","useFaceVideos","faceStream","faceStreamMap","showRegionEditor","setShowRegionEditor","onMouseUp","regionData","avatarData","imageData","info","message","p"],"mappings":"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","file":"static/js/15.cd25a36a.chunk.js","sourcesContent":["import { useCallback, useState, useRef, useEffect } from \"react\";\nimport { subscribe } from \"valtio\";\n\nimport { getRoomState } from \"../states/roomMap\";\n\nconst getInitialPosition = (uid: string): [number, number] => [\n  parseInt(uid.slice(0, 2), 16) / 2 + 20,\n  parseInt(uid.slice(2, 4), 16) / 2 + 20,\n];\n\nexport type AvatarData = {\n  position: [left: number, top: number];\n};\n\nconst isAvatarData = (x: unknown): x is AvatarData => {\n  try {\n    const obj = x as AvatarData;\n    if (\n      typeof obj.position[0] === \"number\" &&\n      typeof obj.position[1] === \"number\"\n    ) {\n      return true;\n    }\n    return false;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isEqualAvatarData = (a: AvatarData, b: AvatarData) =>\n  a.position[0] === b.position[0] && a.position[1] === b.position[1];\n\nexport type RegionData = {\n  type: \"background\" | \"meeting\" | \"chat\";\n  position: [left: number, top: number];\n  size: [width: number, height: number];\n  zIndex?: number;\n  background?: string;\n  border?: string;\n  iframe?: string;\n};\n\nconst isRegionData = (x: unknown): x is RegionData => {\n  try {\n    const obj = x as RegionData;\n    if (\n      [\"background\", \"meeting\", \"chat\"].includes(obj.type) &&\n      typeof obj.position[0] === \"number\" &&\n      typeof obj.position[1] === \"number\" &&\n      typeof obj.size[0] === \"number\" &&\n      typeof obj.size[1] === \"number\" &&\n      (typeof obj.zIndex === \"undefined\" || typeof obj.zIndex === \"number\") &&\n      (typeof obj.background === \"undefined\" ||\n        typeof obj.background === \"string\") &&\n      (typeof obj.border === \"undefined\" || typeof obj.border === \"string\") &&\n      (typeof obj.iframe === \"undefined\" || typeof obj.iframe === \"string\")\n    ) {\n      return true;\n    }\n    return false;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isEqualRegionData = (a: RegionData, b: RegionData) =>\n  a.type === b.type &&\n  a.position[0] === b.position[0] &&\n  a.position[1] === b.position[1] &&\n  a.size[0] === b.size[0] &&\n  a.size[1] === b.size[1] &&\n  a.zIndex === b.zIndex &&\n  a.background === b.background &&\n  a.border === b.border &&\n  a.iframe === b.iframe;\n\nexport type AvatarMap = {\n  [userId: string]: AvatarData;\n};\n\nexport type RegionMap = {\n  [regionId: string]: RegionData;\n};\n\nexport const ROOM_STATE_KEY = \"gatherRegionMap\";\n\nexport const useGatherArea = (roomId: string, userId: string) => {\n  const [avatarMap, setAvatarMap] = useState<AvatarMap>({});\n  const [myAvatar, setMyAvatar] = useState<AvatarData>({\n    position: getInitialPosition(userId),\n  });\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(\"gatherAvatarMap\");\n    const listener = () => {\n      setAvatarMap((prev) => {\n        const copied = { ...prev };\n        let changed = false;\n        map.forEach((data, uid) => {\n          if (uid === userId) return;\n          if (!roomState.userIdMap[uid]) return;\n          if (!isAvatarData(data)) return;\n          if (!copied[uid]) {\n            copied[uid] = data;\n            changed = true;\n          } else if (!isEqualAvatarData(data, copied[uid])) {\n            copied[uid] = data;\n            changed = true;\n          }\n        });\n        Object.keys(copied).forEach((uid) => {\n          if (!roomState.userIdMap[uid]) {\n            delete copied[uid];\n            changed = true;\n          }\n        });\n        if (changed) {\n          return copied;\n        }\n        return prev;\n      });\n    };\n    map.observe(listener);\n    const unsub = subscribe(roomState.userIdMap, listener);\n    listener();\n    return () => {\n      unsub();\n      map.unobserve(listener);\n    };\n  }, [roomId, userId]);\n\n  const dataToBroadcast = useRef<AvatarData>();\n  useEffect(() => {\n    if (!myAvatar) return;\n    if (dataToBroadcast.current) {\n      dataToBroadcast.current = myAvatar;\n    } else {\n      dataToBroadcast.current = myAvatar;\n      setTimeout(() => {\n        const roomState = getRoomState(roomId, userId);\n        const map = roomState.ydoc.getMap(\"gatherAvatarMap\");\n        map.set(userId, dataToBroadcast.current);\n        dataToBroadcast.current = undefined;\n      }, 500);\n    }\n  }, [roomId, userId, myAvatar]);\n\n  const [regionMap, setRegionMap] = useState<RegionMap>({});\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(ROOM_STATE_KEY);\n    const listener = () => {\n      setRegionMap((prev) => {\n        const next: RegionMap = {};\n        map.forEach((data, id) => {\n          if (!isRegionData(data)) return;\n          if (prev[id] && isEqualRegionData(prev[id], data)) {\n            next[id] = prev[id];\n          } else {\n            next[id] = data;\n          }\n        });\n        return next;\n      });\n    };\n    map.observe(listener);\n    listener();\n    return () => {\n      map.unobserve(listener);\n    };\n  }, [roomId, userId]);\n\n  const updateRegion = useCallback(\n    (id: string, data: RegionData) => {\n      const roomState = getRoomState(roomId, userId);\n      const map = roomState.ydoc.getMap(ROOM_STATE_KEY);\n      map.set(id, data);\n    },\n    [roomId, userId]\n  );\n\n  return {\n    avatarMap,\n    myAvatar,\n    setMyAvatar,\n    regionMap,\n    updateRegion,\n  };\n};\n","import React, { useState } from \"react\";\n\nimport \"./RegionEditor.css\";\nimport { getRoomState } from \"../states/roomMap\";\nimport { ROOM_STATE_KEY, RegionData } from \"../hooks/useGatherArea\";\n\nexport const RegionEditor = React.memo<{\n  roomId: string;\n  userId: string;\n}>(({ roomId, userId }) => {\n  const [regionId, setRegionId] = useState(\"\");\n  const [type, setType] = useState<RegionData[\"type\"]>(\"background\");\n  const [left, setLeft] = useState(100);\n  const [top, setTop] = useState(100);\n  const [width, setWidth] = useState(100);\n  const [height, setHeight] = useState(100);\n  const [zIndex, setZIndex] = useState(0);\n  const [background, setBackground] = useState(\"\");\n  const [border, setBorder] = useState(\"\");\n  const [iframe, setIframe] = useState(\"\");\n\n  const addRegion = () => {\n    const data: RegionData = {\n      type,\n      position: [left, top],\n      size: [width, height],\n      zIndex,\n      background,\n      border,\n      iframe,\n    };\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(ROOM_STATE_KEY);\n    map.set(regionId, data);\n  };\n\n  const [allRegionData, setAllRegionData] = useState<string | null>(null);\n\n  const loadAllRegionData = () => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(ROOM_STATE_KEY);\n    setAllRegionData(JSON.stringify(map.toJSON()));\n  };\n\n  const saveAllRegionData = () => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(ROOM_STATE_KEY);\n    try {\n      Object.entries(JSON.parse(allRegionData || \"\")).forEach(\n        ([key, value]) => {\n          map.set(key, value);\n        }\n      );\n      setAllRegionData(null);\n    } catch (e) {\n      console.log(\"failed to save all region data\", e);\n    }\n  };\n\n  return (\n    <div className=\"RegionEditor-container\">\n      <h3>Region Editor</h3>\n      <label>\n        Region ID:{\" \"}\n        <input value={regionId} onChange={(e) => setRegionId(e.target.value)} />\n      </label>\n      <hr />\n      <label>\n        Type:{\" \"}\n        <select\n          value={type}\n          onChange={(e) => setType(e.target.value as RegionData[\"type\"])}\n        >\n          <option value=\"background\">Background</option>\n          <option value=\"meeting\">Meeting</option>\n          <option value=\"chat\">Chat</option>\n        </select>\n      </label>\n      <hr />\n      <label>\n        Left:{\" \"}\n        <input\n          type=\"number\"\n          value={left}\n          onChange={(e) => setLeft(Number(e.target.value))}\n        />\n      </label>\n      <label>\n        Top:{\" \"}\n        <input\n          type=\"number\"\n          value={top}\n          onChange={(e) => setTop(Number(e.target.value))}\n        />\n      </label>\n      <hr />\n      <label>\n        Width:{\" \"}\n        <input\n          type=\"number\"\n          value={width}\n          onChange={(e) => setWidth(Number(e.target.value))}\n        />\n      </label>\n      <label>\n        Height:{\" \"}\n        <input\n          type=\"number\"\n          value={height}\n          onChange={(e) => setHeight(Number(e.target.value))}\n        />\n      </label>\n      <hr />\n      {type !== \"chat\" && (\n        <label>\n          zIndex:{\" \"}\n          <input\n            type=\"number\"\n            value={zIndex}\n            max={0}\n            onChange={(e) => setZIndex(Number(e.target.value))}\n          />\n        </label>\n      )}\n      <hr />\n      <label>\n        Background:{\" \"}\n        <input\n          value={background}\n          onChange={(e) => setBackground(e.target.value)}\n        />\n      </label>\n      <label>\n        Border:{\" \"}\n        <input value={border} onChange={(e) => setBorder(e.target.value)} />\n      </label>\n      <hr />\n      <label>\n        Iframe:{\" \"}\n        <input value={iframe} onChange={(e) => setIframe(e.target.value)} />\n      </label>\n      <hr />\n      <button type=\"button\" onClick={() => addRegion()} disabled={!regionId}>\n        Add Region\n      </button>\n      <hr />\n      <button\n        type=\"button\"\n        className=\"RegionEditor-toggle\"\n        onClick={() => {\n          if (allRegionData) {\n            setAllRegionData(null);\n          } else {\n            loadAllRegionData();\n          }\n        }}\n      >\n        Import/Export {allRegionData ? <>&#9660;</> : <>&#9654;</>}\n      </button>\n      {!!allRegionData && (\n        <div>\n          <label>\n            All Region Data:{\" \"}\n            <textarea\n              value={allRegionData}\n              onChange={(e) => setAllRegionData(e.target.value)}\n            />\n          </label>\n          <button type=\"button\" onClick={saveAllRegionData}>\n            Replace (Be careful)\n          </button>\n        </div>\n      )}\n    </div>\n  );\n});\n","/* eslint jsx-a11y/no-static-element-interactions: off */\n\nimport React, { Suspense, useCallback, useRef, useState } from \"react\";\n\nimport \"./GatherArea.css\";\nimport { useGatherArea, RegionData } from \"../hooks/useGatherArea\";\nimport { useFaceImages } from \"../hooks/useFaceImages\";\nimport { useFaceVideos } from \"../hooks/useFaceVideos\";\nimport { RegionEditor } from \"./RegionEditor\";\nimport { FaceCard } from \"./FaceCard\";\nimport { SuspenseFallback } from \"./SuspenseFallback\";\n\nconst MomentaryChat = React.lazy(() => import(\"./MomentaryChat\"));\n\ntype OnMouseMove = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n\nconst Region = React.memo<{\n  roomId: string;\n  userId: string;\n  nickname: string;\n  id: string;\n  data: RegionData;\n  highlight?: boolean;\n}>(({ roomId, userId, nickname, id, data, highlight }) => {\n  const boxShadow =\n    (data.type === \"meeting\" &&\n      (highlight ? \"0 0 0 5px pink\" : \"0 0 0 1px pink\")) ||\n    undefined;\n  return (\n    <div\n      className=\"GatherArea-region\"\n      style={{\n        left: `${data.position[0]}px`,\n        top: `${data.position[1]}px`,\n        width: `${data.size[0]}px`,\n        height: `${data.size[1]}px`,\n        boxShadow,\n        zIndex: data.type !== \"chat\" ? data.zIndex : undefined,\n        background: data.background,\n        border: data.border,\n      }}\n    >\n      {data.iframe && <iframe title={id} src={data.iframe} frameBorder=\"0\" />}\n      {data.type === \"chat\" && (\n        <Suspense fallback={<SuspenseFallback />}>\n          <MomentaryChat\n            roomId={roomId}\n            userId={userId}\n            nickname={nickname}\n            uniqueId={id}\n          />\n        </Suspense>\n      )}\n    </div>\n  );\n});\n\nconst Avatar = React.memo<{\n  nickname: string;\n  statusMesg: string;\n  image?: string;\n  position: [left: number, top: number];\n  setPosition?: (nextPosition: [number, number]) => void;\n  registerOnMouseDrag: (onMouseMove?: OnMouseMove) => void;\n  stream?: MediaStream;\n  muted?: boolean;\n}>(\n  ({\n    nickname,\n    statusMesg,\n    image,\n    position,\n    setPosition,\n    registerOnMouseDrag,\n    stream,\n    muted,\n  }) => {\n    const isMyself = !!setPosition;\n    return (\n      <div\n        className=\"GatherArea-avatar\"\n        style={{\n          left: `${position[0]}px`,\n          top: `${position[1]}px`,\n        }}\n        onMouseDown={(e) => {\n          e.preventDefault();\n          if (isMyself) {\n            const target = e.currentTarget;\n            const offset = [e.clientX - position[0], e.clientY - position[1]];\n            registerOnMouseDrag((e) => {\n              const left = e.clientX - offset[0];\n              const top = e.clientY - offset[1];\n              target.style.left = `${left}px`;\n              target.style.top = `${top}px`;\n              setPosition?.([left, top]);\n            });\n          }\n        }}\n      >\n        <FaceCard\n          image={image}\n          nickname={nickname}\n          statusMesg={statusMesg}\n          obsoleted={false}\n          liveMode={!!stream}\n          stream={stream}\n          muted={!!muted}\n          micOn={!!stream}\n          speakerOn={!!stream}\n        />\n      </div>\n    );\n  }\n);\n\nexport const GatherArea = React.memo<{\n  roomId: string;\n  userId: string;\n  avatar: string;\n  nickname: string;\n  statusMesg: string;\n  suspended: boolean;\n  videoDeviceId?: string;\n  audioDeviceId?: string;\n}>(\n  ({\n    roomId,\n    userId,\n    avatar,\n    nickname,\n    statusMesg,\n    suspended,\n    videoDeviceId,\n    audioDeviceId,\n  }) => {\n    const { myImage, roomImages } = useFaceImages(\n      roomId,\n      userId,\n      avatar,\n      nickname,\n      statusMesg,\n      suspended,\n      false,\n      false,\n      false,\n      videoDeviceId\n    );\n    const { avatarMap, myAvatar, setMyAvatar, regionMap } = useGatherArea(\n      roomId,\n      userId\n    );\n\n    const onMouseDragRef = useRef<OnMouseMove>();\n    const registerOnMouseDrag = useCallback((onMouseMove?: OnMouseMove) => {\n      onMouseDragRef.current = onMouseMove;\n    }, []);\n\n    const regionIdList = Object.keys(regionMap).sort(\n      (a, b) => (regionMap[b].zIndex ?? 0) - (regionMap[a].zIndex ?? 0)\n    );\n    const activeMeetingRegionId = regionIdList.find((id) => {\n      const { type, position, size } = regionMap[id] as RegionData;\n      return (\n        type === \"meeting\" &&\n        position[0] <= myAvatar.position[0] &&\n        position[1] <= myAvatar.position[1] &&\n        myAvatar.position[0] + 36 <= position[0] + size[0] &&\n        myAvatar.position[1] + 36 <= position[1] + size[1]\n      );\n    });\n\n    const { faceStream, faceStreamMap } = useFaceVideos(\n      roomId,\n      userId,\n      !!activeMeetingRegionId,\n      !!activeMeetingRegionId,\n      true,\n      videoDeviceId,\n      audioDeviceId,\n      `gatherArea/meeting/${activeMeetingRegionId}/`\n    );\n\n    const [showRegionEditor, setShowRegionEditor] = useState(false);\n\n    return (\n      <div className=\"GatherArea-container\">\n        <div\n          className=\"GatherArea-body\"\n          onMouseMove={(e) => {\n            if (onMouseDragRef.current) {\n              onMouseDragRef.current(e);\n            }\n          }}\n          onMouseUp={() => {\n            registerOnMouseDrag();\n          }}\n        >\n          {Object.entries(regionMap).map(([regionId, regionData]) => (\n            <Region\n              key={regionId}\n              roomId={roomId}\n              userId={userId}\n              nickname={nickname}\n              id={regionId}\n              data={regionData}\n              highlight={regionId === activeMeetingRegionId}\n            />\n          ))}\n          {Object.entries(avatarMap).map(([uid, avatarData]) => {\n            if (uid === userId) {\n              return null;\n            }\n            const imageData = roomImages.find((data) => data.userId === uid);\n            if (!imageData) {\n              return null;\n            }\n            return (\n              <Avatar\n                key={uid}\n                nickname={imageData.info.nickname}\n                statusMesg={imageData.info.message}\n                image={imageData.image}\n                position={avatarData.position}\n                registerOnMouseDrag={registerOnMouseDrag}\n                stream={faceStreamMap[uid]}\n              />\n            );\n          })}\n          <Avatar\n            nickname={nickname}\n            statusMesg={statusMesg}\n            image={myImage}\n            position={myAvatar.position}\n            setPosition={(position) =>\n              setMyAvatar((prev) => ({ ...prev, position }))\n            }\n            registerOnMouseDrag={registerOnMouseDrag}\n            stream={faceStream || undefined}\n            muted\n          />\n        </div>\n        <div className=\"GatherArea-toolbar\">\n          <div>\n            <button\n              type=\"button\"\n              onClick={() => setShowRegionEditor((p) => !p)}\n            >\n              {showRegionEditor ? \"Close Region Editor\" : \"Open Region Editor\"}\n            </button>\n            {showRegionEditor && (\n              <div className=\"GatherArea-region-editor\">\n                <RegionEditor roomId={roomId} userId={userId} />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default GatherArea;\n"],"sourceRoot":""}