{"version":3,"sources":["utils/types.ts","utils/base64.ts","states/roomMap.ts","hooks/useGatherArea.ts","media/capture.ts","hooks/useFaceImages.ts","media/audio.ts","hooks/useFaceVideos.ts","components/RegionEditor.tsx","utils/excalidraw.ts","components/LinkOpener.tsx","components/Loading.tsx","components/FaceCard.tsx","components/FaceList.tsx","components/GatherArea.tsx","components/SingleRoom.tsx","utils/sleep.ts","media/video.ts","utils/emoji.ts"],"names":["isObject","x","hasStringProp","prop","hasObjectProp","encodeBase64Async","data","Promise","resolve","reader","FileReader","onload","result","offset","indexOf","slice","readAsDataURL","Blob","decodeBase64Async","base64","a","fetch","response","arrayBuffer","buf","Uint8Array","roomMap","Map","getRoomState","roomId","userId","key","has","state","addMediaType","type","acceptingMediaTypes","includes","console","log","push","roomPromise","acceptMediaTypes","snapshot","removeMediaType","index","splice","addTrack","track","removeTrack","dispose","proxy","networkStatusList","userIdMap","ydoc","ref","Y","trackMap","notifyNewPeer","peerIndex","update","ydocUpdate","then","room","sendData","receiveData","info","on","broadcastData","createRoom","status","unshift","length","pop","Object","entries","forEach","uid","mediaType","addEventListener","createRoomState","set","get","ROOM_STATE_KEY","captureImage","stream","ImageCapture","imageCapture","sleep","takePhoto","blob","createImageBitmap","srcImg","grabFrame","srcW","width","srcH","height","video","document","createElement","autoplay","setAttribute","style","display","position","bottom","body","appendChild","removeChild","srcObject","videoWidth","videoHeight","deviceId","constraints","navigator","mediaDevices","getUserMedia","getVideoTracks","canvas","ctx","getContext","dstW","dstH","ratio","Math","max","min","y","drawImage","stop","toDataURL","isImageData","image","nickname","message","liveMode","micOn","speakerOn","isFaceInfo","updated","useFaceImages","avatar","statusMesg","suspended","useState","myImage","setMyImage","roomImages","setRoomImages","useEffect","roomState","map","getMap","listener","prev","copied","changed","findIndex","item","tenMinAgo","Date","now","filtered","filter","observe","unsub","subscribe","unobserve","timer","didCleanup","loop","error","setTimeout","clearTimeout","getAudioStream","audio","getAudioTracks","applyConstraints","echoCancellation","echoCancellationType","ideal","noiseSuppression","addTrackToStream","disposeStream","newStream","MediaStream","dispatchEvent","MediaStreamTrackEvent","getTracks","RegionEditor","React","memo","regionId","setRegionId","setType","left","setLeft","top","setTop","setWidth","setHeight","zIndex","setZIndex","background","setBackground","border","setBorder","iframe","setIframe","allRegionData","setAllRegionData","className","value","onChange","e","target","Number","onClick","size","addRegion","disabled","JSON","stringify","toJSON","loadAllRegionData","parse","generateExcalidrawURL","id","importCryptoKey","ROOM_ID_PREFIX_LEN","imported","window","crypto","subtle","exportKey","k","LinkOpener","excalidrawUrl","setExcalidrawUrl","appLink","location","href","replace","title","readOnly","rel","Loading","FaceCard","setStatusMesg","obsoleted","muted","toggleSuspended","firstStatusMesgChar","emoji","String","fromCodePoint","isEmoji","opacity","videoEle","autoPlay","playsInline","src","BLANK_IMAGE","alt","mesg","prompt","FaceList","videoDeviceId","useSnapshot","twoMinAgo","transform","MomentaryChat","lazy","MediaShare","GoBoard","Region","highlight","boxShadow","undefined","frameBorder","fallback","SuspenseFallback","uniqueId","Avatar","setPosition","registerOnMouseDrag","isMyself","onMouseDown","preventDefault","currentTarget","clientX","clientY","GatherArea","audioDeviceId","avatarMap","setAvatarMap","parseInt","myAvatar","setMyAvatar","b","obj","isAvatarData","keys","dataToBroadcast","useRef","current","regionMap","setRegionMap","next","isRegionData","updateRegion","useCallback","useGatherArea","onMouseDragRef","onMouseMove","activeMeetingRegionId","sort","find","videoEnabled","audioEnabled","uniqueMediaId","videoType","audioType","faceStream","setFaceStream","faceStreamMap","setFaceStreamMap","isMounted","onTrack","readyState","s","oldStream","rest","cleanup","getFaceVideoStream","videoStream","disposeVideo","videoTrack","Event","audioStream","disposeAudio","audioTrack","enabled","onaddtrack","event","kind","removeEventListener","useFaceVideos","showModal","setShowModal","onMouseUp","regionData","avatarData","imageData","SingleRoom","singleRoomState","config","setRoomIdToUrl","toggleConfigTakePhoto","ms","getVideoStream","frameRate","exact","EmojiPicker","Picker","getEmojiDataFromNative"],"mappings":"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","file":"static/js/9.0cb399f7.chunk.js","sourcesContent":["export const isObject = (x: unknown): x is Record<string, unknown> =>\n  typeof x === \"object\" && x !== null;\n\nexport const hasStringProp = <\n  Obj extends Record<string, unknown>,\n  Prop extends string\n>(\n  x: Obj,\n  prop: Prop\n): x is Obj & Record<Prop, string> =>\n  typeof (x as Record<Prop, unknown>)[prop] === \"string\";\n\nexport const hasObjectProp = <\n  Obj extends Record<string, unknown>,\n  Prop extends string\n>(\n  x: Obj,\n  prop: Prop\n): x is Obj & Record<Prop, Record<string, unknown>> =>\n  isObject((x as Record<Prop, unknown>)[prop]);\n\nexport type ReturnPromiseType<\n  F extends (...args: any) => any\n> = ReturnType<F> extends Promise<infer T> ? T : never;\n","export const encodeBase64Sync = (data: Uint8Array) => {\n  const base64 = btoa(String.fromCharCode(...data));\n  return base64;\n};\n\nexport const decodeBase64Sync = (base64: string) => {\n  const binaryString = atob(base64);\n  const data = new Uint8Array(\n    ([].map.call(binaryString, (c: string) =>\n      c.charCodeAt(0)\n    ) as unknown) as ArrayBufferLike\n  );\n  return data;\n};\n\nexport const encodeBase64Async = (data: Uint8Array) =>\n  new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      const result = reader.result as string;\n      const offset = result.indexOf(\",\") + 1;\n      resolve(result.slice(offset));\n    };\n    reader.readAsDataURL(new Blob([data]));\n  });\n\nexport const decodeBase64Async = async (base64: string) => {\n  const response = await fetch(\n    `data:application/octet-binary;base64,${base64}`\n  );\n  const buf = await response.arrayBuffer();\n  return new Uint8Array(buf);\n};\n","import { proxy, snapshot, ref } from \"valtio\";\nimport * as Y from \"yjs\";\n\nimport { PeerInfo, createRoom, NetworkStatus } from \"../network/room\";\nimport { encodeBase64Async, decodeBase64Async } from \"../utils/base64\";\n\ntype RoomState = {\n  networkStatusList: NetworkStatus[];\n  // userIdMap: number is peerIndex\n  userIdMap: { [userId: string]: number | \"closed\" };\n  ydoc: Y.Doc;\n  acceptingMediaTypes: string[];\n  trackMap: {\n    [mediaType: string]: {\n      [userId: string]: MediaStreamTrack;\n    };\n  };\n  addMediaType: (type: string) => Promise<void>;\n  removeMediaType: (type: string) => Promise<void>;\n  addTrack: (type: string, track: MediaStreamTrack) => Promise<void>;\n  removeTrack: (type: string) => Promise<void>;\n  dispose: () => Promise<void>;\n};\n\nconst createRoomState = (roomId: string, userId: string) => {\n  const addMediaType = async (type: string) => {\n    if (state.acceptingMediaTypes.includes(type)) {\n      console.log(\"media type already added\", type);\n      return;\n    }\n    state.acceptingMediaTypes.push(type);\n    const room = await roomPromise;\n    room.acceptMediaTypes(snapshot(state.acceptingMediaTypes));\n  };\n  const removeMediaType = async (type: string) => {\n    const index = state.acceptingMediaTypes.indexOf(type);\n    if (index === -1) {\n      console.log(\"media type already added\", type);\n      return;\n    }\n    state.acceptingMediaTypes.splice(index, 1);\n    const room = await roomPromise;\n    room.acceptMediaTypes(snapshot(state.acceptingMediaTypes));\n  };\n  const addTrack = async (type: string, track: MediaStreamTrack) => {\n    const room = await roomPromise;\n    room.addTrack(type, track);\n  };\n  const removeTrack = async (type: string) => {\n    const room = await roomPromise;\n    room.removeTrack(type);\n  };\n  const dispose = async () => {\n    const room = await roomPromise;\n    room.dispose();\n  };\n  const state = proxy<RoomState>({\n    networkStatusList: [],\n    userIdMap: {},\n    ydoc: ref(new Y.Doc()),\n    acceptingMediaTypes: [],\n    trackMap: {},\n    addMediaType,\n    removeMediaType,\n    addTrack,\n    removeTrack,\n    dispose,\n  });\n  const updateNetworkStatus = (status: NetworkStatus) => {\n    console.log(\"[network status]\", status);\n    state.networkStatusList.unshift(status);\n    if (state.networkStatusList.length > 10) {\n      state.networkStatusList.pop();\n    }\n    if (status?.type === \"CONNECTION_CLOSED\") {\n      Object.entries(state.userIdMap).forEach(([uid, idx]) => {\n        if (idx === status.peerIndex) {\n          state.userIdMap[uid] = \"closed\";\n          // FIXME somehow this might be causing fatal behavior\n          // delete state.userIdMap[uid];\n        }\n      });\n    }\n  };\n  const notifyNewPeer = async (peerIndex: number) => {\n    const update = Y.encodeStateAsUpdate(state.ydoc);\n    const base64 = await encodeBase64Async(update);\n    const data = { ydocUpdate: base64 };\n    roomPromise.then((room) => {\n      // XXX this does not scale\n      room.sendData(data, peerIndex);\n    });\n  };\n  const receiveData = async (data: any, info: PeerInfo) => {\n    state.userIdMap[info.userId] = info.peerIndex;\n    if (data?.ydocUpdate) {\n      const update = await decodeBase64Async(data.ydocUpdate);\n      Y.applyUpdate(state.ydoc, update);\n    }\n  };\n  state.ydoc.on(\"update\", async (update: Uint8Array) => {\n    const base64 = await encodeBase64Async(update);\n    roomPromise.then((room) => {\n      room.broadcastData({ ydocUpdate: base64 });\n    });\n  });\n  const receiveTrack = (\n    mediaType: string,\n    track: MediaStreamTrack,\n    info: PeerInfo\n  ) => {\n    if (!state.trackMap[mediaType]) {\n      state.trackMap[mediaType] = {};\n    }\n    track.addEventListener(\"ended\", () => {\n      if (state.trackMap[mediaType][info.userId] === track) {\n        delete state.trackMap[mediaType][info.userId];\n      }\n    });\n    state.trackMap[mediaType][info.userId] = ref(track);\n  };\n  const roomPromise = createRoom(\n    roomId,\n    userId,\n    updateNetworkStatus,\n    notifyNewPeer,\n    receiveData,\n    receiveTrack\n  );\n  return state;\n};\n\nconst roomMap = new Map<string, RoomState>();\n\nexport const getRoomState = (roomId: string, userId: string) => {\n  const key = `${roomId}:${userId}`;\n  if (!roomMap.has(key)) {\n    const state = createRoomState(roomId, userId);\n    roomMap.set(key, state);\n  }\n  return roomMap.get(key) as RoomState;\n};\n\nexport const disposeRoomState = (roomId: string, userId: string) => {\n  const key = `${roomId}:${userId}`;\n  const state = roomMap.get(key);\n  if (state) {\n    roomMap.delete(key);\n    state.dispose();\n  }\n};\n","import { useCallback, useState, useRef, useEffect } from \"react\";\nimport { subscribe } from \"valtio\";\n\nimport { getRoomState } from \"../states/roomMap\";\n\nconst getInitialPosition = (uid: string): [number, number] => [\n  parseInt(uid.slice(0, 2), 16) / 2 + 50,\n  parseInt(uid.slice(2, 4), 16) / 2 + 30,\n];\n\nexport type AvatarData = {\n  position: [left: number, top: number];\n};\n\nconst isAvatarData = (x: unknown): x is AvatarData => {\n  try {\n    const obj = x as AvatarData;\n    if (\n      typeof obj.position[0] === \"number\" &&\n      typeof obj.position[1] === \"number\"\n    ) {\n      return true;\n    }\n    return false;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isEqualAvatarData = (a: AvatarData, b: AvatarData) =>\n  a.position[0] === b.position[0] && a.position[1] === b.position[1];\n\nexport type RegionData = {\n  type: \"background\" | \"meeting\" | \"chat\" | \"media\" | \"goboard\";\n  position: [left: number, top: number];\n  size: [width: number, height: number];\n  zIndex?: number;\n  background?: string;\n  border?: string;\n  iframe?: string;\n};\n\nconst isRegionData = (x: unknown): x is RegionData => {\n  try {\n    const obj = x as RegionData;\n    if (\n      [\"background\", \"meeting\", \"chat\", \"media\", \"goboard\"].includes(\n        obj.type\n      ) &&\n      typeof obj.position[0] === \"number\" &&\n      typeof obj.position[1] === \"number\" &&\n      typeof obj.size[0] === \"number\" &&\n      typeof obj.size[1] === \"number\" &&\n      (typeof obj.zIndex === \"undefined\" || typeof obj.zIndex === \"number\") &&\n      (typeof obj.background === \"undefined\" ||\n        typeof obj.background === \"string\") &&\n      (typeof obj.border === \"undefined\" || typeof obj.border === \"string\") &&\n      (typeof obj.iframe === \"undefined\" || typeof obj.iframe === \"string\")\n    ) {\n      return true;\n    }\n    return false;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isEqualRegionData = (a: RegionData, b: RegionData) =>\n  a.type === b.type &&\n  a.position[0] === b.position[0] &&\n  a.position[1] === b.position[1] &&\n  a.size[0] === b.size[0] &&\n  a.size[1] === b.size[1] &&\n  a.zIndex === b.zIndex &&\n  a.background === b.background &&\n  a.border === b.border &&\n  a.iframe === b.iframe;\n\nexport type AvatarMap = {\n  [userId: string]: AvatarData;\n};\n\nexport type RegionMap = {\n  [regionId: string]: RegionData;\n};\n\nexport const ROOM_STATE_KEY = \"gatherRegionMap\";\n\nexport const useGatherArea = (roomId: string, userId: string) => {\n  const [avatarMap, setAvatarMap] = useState<AvatarMap>({});\n  const [myAvatar, setMyAvatar] = useState<AvatarData>({\n    position: getInitialPosition(userId),\n  });\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(\"gatherAvatarMap\");\n    const listener = () => {\n      setAvatarMap((prev) => {\n        const copied = { ...prev };\n        let changed = false;\n        map.forEach((data, uid) => {\n          if (uid === userId) return;\n          if (!roomState.userIdMap[uid]) return;\n          if (!isAvatarData(data)) return;\n          if (!copied[uid]) {\n            copied[uid] = data;\n            changed = true;\n          } else if (!isEqualAvatarData(data, copied[uid])) {\n            copied[uid] = data;\n            changed = true;\n          }\n        });\n        Object.keys(copied).forEach((uid) => {\n          if (!roomState.userIdMap[uid]) {\n            delete copied[uid];\n            changed = true;\n          }\n        });\n        if (changed) {\n          return copied;\n        }\n        return prev;\n      });\n    };\n    map.observe(listener);\n    const unsub = subscribe(roomState.userIdMap, listener);\n    listener();\n    return () => {\n      unsub();\n      map.unobserve(listener);\n    };\n  }, [roomId, userId]);\n\n  const dataToBroadcast = useRef<AvatarData>();\n  useEffect(() => {\n    if (!myAvatar) return;\n    if (dataToBroadcast.current) {\n      dataToBroadcast.current = myAvatar;\n    } else {\n      dataToBroadcast.current = myAvatar;\n      setTimeout(() => {\n        const roomState = getRoomState(roomId, userId);\n        const map = roomState.ydoc.getMap(\"gatherAvatarMap\");\n        map.set(userId, dataToBroadcast.current);\n        dataToBroadcast.current = undefined;\n      }, 500);\n    }\n  }, [roomId, userId, myAvatar]);\n\n  const [regionMap, setRegionMap] = useState<RegionMap>({});\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(ROOM_STATE_KEY);\n    const listener = () => {\n      setRegionMap((prev) => {\n        const next: RegionMap = {};\n        map.forEach((data, id) => {\n          if (!isRegionData(data)) return;\n          if (prev[id] && isEqualRegionData(prev[id], data)) {\n            next[id] = prev[id];\n          } else {\n            next[id] = data;\n          }\n        });\n        return next;\n      });\n    };\n    map.observe(listener);\n    listener();\n    return () => {\n      map.unobserve(listener);\n    };\n  }, [roomId, userId]);\n\n  const updateRegion = useCallback(\n    (id: string, data: RegionData) => {\n      const roomState = getRoomState(roomId, userId);\n      const map = roomState.ydoc.getMap(ROOM_STATE_KEY);\n      map.set(id, data);\n    },\n    [roomId, userId]\n  );\n\n  return {\n    avatarMap,\n    myAvatar,\n    setMyAvatar,\n    regionMap,\n    updateRegion,\n  };\n};\n","import { sleep } from \"../utils/sleep\";\n\nconst captureImage = async (stream: MediaStream, track: MediaStreamTrack) => {\n  if (typeof ImageCapture !== \"undefined\") {\n    const imageCapture = new ImageCapture(track);\n    await sleep(2000);\n    let srcImg: ImageBitmap;\n    try {\n      const blob = await imageCapture.takePhoto();\n      srcImg = await createImageBitmap(blob);\n    } catch (e) {\n      srcImg = await imageCapture.grabFrame();\n    }\n    const srcW = srcImg.width;\n    const srcH = srcImg.height;\n    return { srcImg, srcW, srcH };\n  }\n  const video = document.createElement(\"video\");\n  video.autoplay = true;\n  video.setAttribute(\"playsinline\", \"\");\n  video.style.display = \"block\";\n  video.style.width = \"1px\";\n  video.style.height = \"1px\";\n  video.style.position = \"absolute\";\n  video.style.bottom = \"0\";\n  document.body.appendChild(video);\n  const dispose = () => {\n    document.body.removeChild(video);\n  };\n  video.srcObject = stream;\n  await sleep(2000);\n  const srcImg = video;\n  const srcW = video.videoWidth;\n  const srcH = video.videoHeight;\n  return { srcImg, srcW, srcH, dispose };\n};\n\nexport const takePhoto = async (deviceId?: string) => {\n  const constraints = {\n    video: {\n      deviceId,\n      width: 1280,\n      height: 720,\n    },\n  };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getVideoTracks();\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n  const dstW = 72;\n  const dstH = 72;\n  canvas.width = dstW;\n  canvas.height = dstH;\n  const { srcImg, srcW, srcH, dispose } = await captureImage(stream, track);\n  const ratio = Math.max(dstW / srcW, dstH / srcH);\n  const width = Math.min(srcW, dstW / ratio);\n  const height = Math.min(srcH, dstH / ratio);\n  const x = (srcW - width) / 2;\n  const y = (srcH - height) / 2;\n  ctx.drawImage(srcImg, x, y, width, height, 0, 0, dstW, dstH);\n  if (dispose) {\n    dispose();\n  }\n  track.stop();\n  return canvas.toDataURL(\"image/jpeg\");\n};\n","import { useEffect, useState } from \"react\";\nimport { subscribe } from \"valtio\";\n\nimport { isObject } from \"../utils/types\";\nimport { takePhoto } from \"../media/capture\";\nimport { getRoomState } from \"../states/roomMap\";\n\ntype ImageUrl = string;\n\ntype FaceInfo = {\n  nickname: string;\n  message: string;\n  liveMode: boolean;\n  micOn: boolean;\n  speakerOn: boolean;\n};\n\nconst isFaceInfo = (x: unknown): x is FaceInfo =>\n  isObject(x) &&\n  typeof (x as { nickname: unknown }).nickname === \"string\" &&\n  typeof (x as { message: unknown }).message === \"string\" &&\n  typeof (x as { liveMode: unknown }).liveMode === \"boolean\" &&\n  typeof (x as { micOn: unknown }).micOn === \"boolean\" &&\n  typeof (x as { speakerOn: unknown }).speakerOn === \"boolean\";\n\ntype ImageData = {\n  userId: string;\n  image: ImageUrl;\n  info: FaceInfo;\n  updated: number; // in milliseconds\n};\n\nconst isImageData = (x: unknown): x is ImageData =>\n  isObject(x) &&\n  typeof (x as { image: unknown }).image === \"string\" &&\n  isFaceInfo((x as { info: unknown }).info) &&\n  typeof (x as { updated: unknown }).updated === \"number\";\n\nexport const useFaceImages = (\n  roomId: string,\n  userId: string,\n  avatar: string,\n  nickname: string,\n  statusMesg: string,\n  suspended: boolean,\n  liveMode: boolean,\n  micOn: boolean,\n  speakerOn: boolean,\n  deviceId?: string\n) => {\n  const [myImage, setMyImage] = useState<ImageUrl>();\n  const [roomImages, setRoomImages] = useState<ImageData[]>([]);\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(\"faceImages\");\n    const listener = () => {\n      setRoomImages((prev) => {\n        const copied = [...prev];\n        let changed = false;\n        map.forEach((data, uid) => {\n          if (uid === userId) return;\n          if (!roomState.userIdMap[uid]) return;\n          if (!isImageData(data)) return;\n          const index = copied.findIndex((item) => item.userId === uid);\n          if (index === -1) {\n            copied.push(data);\n            changed = true;\n          } else if (data.updated > copied[index].updated) {\n            copied[index] = data;\n            changed = true;\n          }\n        });\n        const tenMinAgo = Date.now() - 10 * 60 * 1000;\n        const filtered = copied.filter(\n          (item) =>\n            item.updated >= tenMinAgo && roomState.userIdMap[item.userId]\n        );\n        changed = changed || copied.length !== filtered.length;\n        if (changed) {\n          return filtered;\n        }\n        return prev;\n      });\n    };\n    map.observe(listener);\n    const unsub = subscribe(roomState.userIdMap, listener);\n    listener();\n    return () => {\n      unsub();\n      map.unobserve(listener);\n    };\n  }, [roomId, userId]);\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(\"faceImages\");\n    let didCleanup = false;\n    let timer: NodeJS.Timeout;\n    const loop = async () => {\n      if (didCleanup) return;\n      try {\n        const image = suspended ? avatar : await takePhoto(deviceId);\n        if (didCleanup) return;\n        setMyImage(image);\n        const info: FaceInfo = {\n          nickname,\n          message: statusMesg,\n          liveMode,\n          micOn,\n          speakerOn,\n        };\n        const data: ImageData = {\n          userId,\n          image,\n          info,\n          updated: Date.now(),\n        };\n        map.set(userId, data);\n      } catch (e) {\n        console.error(e);\n      }\n      timer = setTimeout(loop, 2 * 60 * 1000);\n    };\n    loop();\n    return () => {\n      didCleanup = true;\n      clearTimeout(timer);\n    };\n  }, [\n    roomId,\n    userId,\n    deviceId,\n    avatar,\n    nickname,\n    statusMesg,\n    suspended,\n    liveMode,\n    micOn,\n    speakerOn,\n  ]);\n\n  return {\n    myImage,\n    roomImages,\n  };\n};\n","export const getAudioStream = async (deviceId?: string) => {\n  const constraints = deviceId\n    ? {\n        audio: { deviceId },\n      }\n    : { audio: true };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getAudioTracks();\n  await track.applyConstraints({\n    echoCancellation: true,\n    echoCancellationType: { ideal: \"system\" },\n    noiseSuppression: { ideal: true },\n  } as MediaTrackConstraints);\n  const dispose = () => {\n    track.stop();\n  };\n  return {\n    stream,\n    dispose,\n  };\n};\n","import { useEffect, useState, useRef } from \"react\";\nimport { useSnapshot } from \"valtio\";\n\nimport { getFaceVideoStream } from \"../media/video\";\nimport { getAudioStream } from \"../media/audio\";\nimport { getRoomState } from \"../states/roomMap\";\n\nconst addTrackToStream = (\n  track: MediaStreamTrack,\n  stream: MediaStream | null,\n  disposeStream: (s: MediaStream) => void\n) => {\n  const newStream = stream || new MediaStream();\n  newStream.addTrack(track);\n  newStream.dispatchEvent(new MediaStreamTrackEvent(\"addtrack\", { track }));\n  track.addEventListener(\"ended\", () => {\n    newStream.removeTrack(track);\n    if (newStream.getTracks().length === 0) {\n      disposeStream(newStream);\n    }\n  });\n  return newStream;\n};\n\nexport const useFaceVideos = (\n  roomId: string,\n  userId: string,\n  videoEnabled: boolean,\n  audioEnabled: boolean,\n  micOn: boolean,\n  videoDeviceId?: string,\n  audioDeviceId?: string,\n  uniqueMediaId?: string\n) => {\n  const videoType = `${uniqueMediaId || \"face\"}Video`;\n  const audioType = `${uniqueMediaId || \"face\"}Audio`;\n  const [faceStream, setFaceStream] = useState<MediaStream | null>(null);\n  const [faceStreamMap, setFaceStreamMap] = useState<{\n    [userId: string]: MediaStream;\n  }>({});\n\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const cleanup = () => {\n      isMounted.current = false;\n    };\n    return cleanup;\n  }, []);\n\n  const onTrack = ([uid, track]: [string, MediaStreamTrack]) => {\n    if (track.readyState === \"ended\") return;\n    if (faceStreamMap[uid]?.getTracks().includes(track)) return;\n    const disposeStream = (s: MediaStream) => {\n      if (isMounted.current) {\n        setFaceStreamMap((prev) => {\n          const { [uid]: oldStream, ...rest } = prev;\n          if (oldStream === s) {\n            return rest;\n          }\n          return prev;\n        });\n      }\n    };\n    setFaceStreamMap((prev) => {\n      const stream = prev[uid];\n      const newStream = addTrackToStream(track, stream, disposeStream);\n      if (stream === newStream) {\n        return prev;\n      }\n      return { ...prev, [uid]: newStream };\n    });\n  };\n\n  const trackMap = useSnapshot(getRoomState(roomId, userId).trackMap);\n  Object.entries(trackMap[videoType] || {}).forEach(onTrack);\n  Object.entries(trackMap[audioType] || {}).forEach(onTrack);\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    let cleanup: (() => void) | null | false = null;\n    if (videoEnabled) {\n      (async () => {\n        const {\n          stream: videoStream,\n          dispose: disposeVideo,\n        } = await getFaceVideoStream(videoDeviceId);\n        const [videoTrack] = videoStream.getVideoTracks();\n        roomState.addMediaType(videoType);\n        roomState.addTrack(videoType, videoTrack);\n        const disposeStream = (s: MediaStream) => {\n          if (isMounted.current) {\n            setFaceStream((prev) => (prev === s ? null : prev));\n          }\n        };\n        setFaceStream((prev) =>\n          addTrackToStream(videoTrack, prev, disposeStream)\n        );\n        const dispose = () => {\n          roomState.removeMediaType(videoType);\n          roomState.removeTrack(videoType);\n          disposeVideo();\n          // XXX we need to manually dispatch ended event, why?\n          videoTrack.dispatchEvent(new Event(\"ended\"));\n        };\n        if (cleanup === false) {\n          dispose();\n        } else {\n          cleanup = dispose;\n        }\n      })();\n    }\n    return () => {\n      if (cleanup) cleanup();\n      cleanup = false;\n    };\n  }, [roomId, userId, videoEnabled, videoDeviceId, videoType]);\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    let cleanup: (() => void) | null | false = null;\n    if (audioEnabled) {\n      (async () => {\n        const {\n          stream: audioStream,\n          dispose: disposeAudio,\n        } = await getAudioStream(audioDeviceId);\n        const [audioTrack] = audioStream.getAudioTracks();\n        roomState.addMediaType(audioType);\n        roomState.addTrack(audioType, audioTrack);\n        const disposeStream = (s: MediaStream) => {\n          if (isMounted.current) {\n            setFaceStream((prev) => (prev === s ? null : prev));\n          }\n        };\n        setFaceStream((prev) =>\n          addTrackToStream(audioTrack, prev, disposeStream)\n        );\n        const dispose = () => {\n          roomState.removeMediaType(audioType);\n          roomState.removeTrack(audioType);\n          disposeAudio();\n          // XXX we need to manually dispatch ended event, why?\n          audioTrack.dispatchEvent(new Event(\"ended\"));\n        };\n        if (cleanup === false) {\n          dispose();\n        } else {\n          cleanup = dispose;\n        }\n      })();\n    }\n    return () => {\n      if (cleanup) cleanup();\n      cleanup = false;\n    };\n  }, [roomId, userId, audioEnabled, audioDeviceId, audioType]);\n\n  useEffect(() => {\n    if (faceStream) {\n      faceStream.getAudioTracks().forEach((track) => {\n        const audioTrack = track;\n        audioTrack.enabled = micOn;\n      });\n      const onaddtrack = (event: MediaStreamTrackEvent) => {\n        const { track } = event;\n        if (track.kind === \"audio\") {\n          track.enabled = micOn;\n        }\n      };\n      faceStream.addEventListener(\"addtrack\", onaddtrack);\n      return () => {\n        faceStream.removeEventListener(\"addtrack\", onaddtrack);\n      };\n    }\n    return undefined;\n  }, [faceStream, micOn]);\n\n  return { faceStream, faceStreamMap };\n};\n","import React, { useState } from \"react\";\n\nimport \"./RegionEditor.css\";\nimport { getRoomState } from \"../states/roomMap\";\nimport { ROOM_STATE_KEY, RegionData } from \"../hooks/useGatherArea\";\n\nexport const RegionEditor = React.memo<{\n  roomId: string;\n  userId: string;\n}>(({ roomId, userId }) => {\n  const [regionId, setRegionId] = useState(\"\");\n  const [type, setType] = useState<RegionData[\"type\"]>(\"background\");\n  const [left, setLeft] = useState(100);\n  const [top, setTop] = useState(100);\n  const [width, setWidth] = useState(100);\n  const [height, setHeight] = useState(100);\n  const [zIndex, setZIndex] = useState(0);\n  const [background, setBackground] = useState(\"\");\n  const [border, setBorder] = useState(\"\");\n  const [iframe, setIframe] = useState(\"\");\n\n  const addRegion = () => {\n    const data: RegionData = {\n      type,\n      position: [left, top],\n      size: [width, height],\n      zIndex,\n      background,\n      border,\n      iframe,\n    };\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(ROOM_STATE_KEY);\n    map.set(regionId, data);\n  };\n\n  const [allRegionData, setAllRegionData] = useState<string | null>(null);\n\n  const loadAllRegionData = () => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(ROOM_STATE_KEY);\n    setAllRegionData(JSON.stringify(map.toJSON()));\n  };\n\n  const saveAllRegionData = () => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(ROOM_STATE_KEY);\n    try {\n      Object.entries(JSON.parse(allRegionData || \"\")).forEach(\n        ([key, value]) => {\n          map.set(key, value);\n        }\n      );\n      setAllRegionData(null);\n    } catch (e) {\n      console.log(\"failed to save all region data\", e);\n    }\n  };\n\n  return (\n    <div className=\"RegionEditor-container\">\n      <h3>Region Editor</h3>\n      <label>\n        Region ID:{\" \"}\n        <input value={regionId} onChange={(e) => setRegionId(e.target.value)} />\n      </label>\n      <hr />\n      <label>\n        Type:{\" \"}\n        <select\n          value={type}\n          onChange={(e) => setType(e.target.value as RegionData[\"type\"])}\n        >\n          <option value=\"background\">Background</option>\n          <option value=\"meeting\">Meeting</option>\n          <option value=\"chat\">Chat</option>\n          <option value=\"media\">Media</option>\n          <option value=\"goboard\">Go Board</option>\n        </select>\n      </label>\n      <hr />\n      <label>\n        Left:{\" \"}\n        <input\n          type=\"number\"\n          value={left}\n          onChange={(e) => setLeft(Number(e.target.value))}\n        />\n      </label>\n      <label>\n        Top:{\" \"}\n        <input\n          type=\"number\"\n          value={top}\n          onChange={(e) => setTop(Number(e.target.value))}\n        />\n      </label>\n      <hr />\n      <label>\n        Width:{\" \"}\n        <input\n          type=\"number\"\n          value={width}\n          onChange={(e) => setWidth(Number(e.target.value))}\n        />\n      </label>\n      <label>\n        Height:{\" \"}\n        <input\n          type=\"number\"\n          value={height}\n          onChange={(e) => setHeight(Number(e.target.value))}\n        />\n      </label>\n      <hr />\n      {type !== \"chat\" && (\n        <label>\n          zIndex:{\" \"}\n          <input\n            type=\"number\"\n            value={zIndex}\n            max={0}\n            onChange={(e) => setZIndex(Number(e.target.value))}\n          />\n        </label>\n      )}\n      <hr />\n      <label>\n        Background:{\" \"}\n        <input\n          value={background}\n          onChange={(e) => setBackground(e.target.value)}\n        />\n      </label>\n      <label>\n        Border:{\" \"}\n        <input value={border} onChange={(e) => setBorder(e.target.value)} />\n      </label>\n      <hr />\n      <label>\n        Iframe:{\" \"}\n        <input value={iframe} onChange={(e) => setIframe(e.target.value)} />\n      </label>\n      <hr />\n      <button type=\"button\" onClick={() => addRegion()} disabled={!regionId}>\n        Add Region\n      </button>\n      <hr />\n      <button\n        type=\"button\"\n        className=\"RegionEditor-toggle\"\n        onClick={() => {\n          if (allRegionData) {\n            setAllRegionData(null);\n          } else {\n            loadAllRegionData();\n          }\n        }}\n      >\n        Import/Export {allRegionData ? <>&#9660;</> : <>&#9654;</>}\n      </button>\n      {!!allRegionData && (\n        <div>\n          <label>\n            All Region Data:{\" \"}\n            <textarea\n              value={allRegionData}\n              onChange={(e) => setAllRegionData(e.target.value)}\n            />\n          </label>\n          <button type=\"button\" onClick={saveAllRegionData}>\n            Replace (Be careful)\n          </button>\n        </div>\n      )}\n    </div>\n  );\n});\n","import { ROOM_ID_PREFIX_LEN } from \"../network/room\";\nimport { importCryptoKey } from \"./crypto\";\n\nexport const generateExcalidrawURL = async (roomId: string) => {\n  const id = roomId.slice(0, 20);\n  const imported = await importCryptoKey(roomId.slice(ROOM_ID_PREFIX_LEN));\n  const key = (await window.crypto.subtle.exportKey(\"jwk\", imported)).k;\n  return `https://excalidraw.com/#room=${id},${key}`;\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport \"./LinkOpener.css\";\nimport { generateExcalidrawURL } from \"../utils/excalidraw\";\n\nexport const LinkOpener = React.memo<{\n  roomId: string;\n}>(({ roomId }) => {\n  const [excalidrawUrl, setExcalidrawUrl] = useState<string>();\n  useEffect(() => {\n    (async () => {\n      setExcalidrawUrl(await generateExcalidrawURL(roomId));\n    })();\n  }, [roomId]);\n\n  const appLink = `remote-faces://${window.location.href.replace(\n    /^https:\\/\\//,\n    \"\"\n  )}`;\n\n  return (\n    <div className=\"LinkOpener-container\">\n      <div>\n        <span title=\"Share this link with your colleagues\">Room Link: </span>\n        <input value={window.location.href} readOnly />\n      </div>\n      <div>\n        <a href={appLink} title=\"Open this link in the desktop app\">\n          Open App\n        </a>\n      </div>\n      <div>\n        <a href={excalidrawUrl} target=\"_blank\" rel=\"noreferrer\">\n          Open Excalidraw\n        </a>\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\n\nimport \"./Loading.css\";\n\nexport const Loading = React.memo(() => (\n  <div className=\"Loading-container\">\n    <div className=\"loader\">\n      <div>Loading...</div>\n    </div>\n  </div>\n));\n","import React from \"react\";\n\nimport \"./FaceCard.css\";\nimport { BLANK_IMAGE } from \"../media/imagePresets\";\nimport { isEmoji } from \"../utils/emoji\";\n\nexport const FaceCard = React.memo<{\n  image?: string;\n  nickname: string;\n  statusMesg: string;\n  setStatusMesg?: (mesg: string) => void;\n  obsoleted?: boolean;\n  liveMode: boolean;\n  stream?: MediaStream;\n  muted: boolean;\n  micOn: boolean;\n  speakerOn: boolean;\n  toggleSuspended?: () => void;\n  suspended?: boolean;\n}>(\n  ({\n    image,\n    nickname,\n    statusMesg,\n    setStatusMesg,\n    obsoleted,\n    liveMode,\n    stream,\n    muted,\n    micOn,\n    speakerOn,\n    toggleSuspended,\n    suspended,\n  }) => {\n    const firstStatusMesgChar: string | undefined = [...statusMesg][0];\n    let emoji = setStatusMesg ? String.fromCodePoint(0x1f4dd) : \"\";\n    if (firstStatusMesgChar) {\n      if (isEmoji(firstStatusMesgChar)) {\n        emoji = firstStatusMesgChar;\n      } else {\n        emoji = String.fromCodePoint(0x1f4ac);\n      }\n    }\n    const editStatusMesg = () => {\n      if (setStatusMesg) {\n        // eslint-disable-next-line no-alert\n        const mesg = window.prompt(\"Enter status message\");\n        if (mesg !== null) {\n          setStatusMesg(mesg);\n        }\n      }\n    };\n    return (\n      <div\n        className=\"FaceCard-container\"\n        style={{ opacity: obsoleted ? 0.2 : 1 }}\n      >\n        {liveMode && stream ? (\n          <video\n            className=\"FaceCard-photo\"\n            ref={(videoEle) => {\n              if (videoEle && videoEle.srcObject !== stream) {\n                // eslint-disable-next-line no-param-reassign\n                videoEle.srcObject = stream;\n              }\n            }}\n            autoPlay\n            playsInline\n            muted={muted}\n          />\n        ) : (\n          <img\n            src={image || BLANK_IMAGE}\n            className=\"FaceCard-photo\"\n            alt=\"faceImage\"\n          />\n        )}\n        <div className=\"FaceCard-name\">{nickname}</div>\n        {setStatusMesg ? (\n          <button\n            type=\"button\"\n            className=\"FaceCard-mesg\"\n            title={statusMesg || \"(No status message)\"}\n            onClick={editStatusMesg}\n          >\n            {emoji}\n          </button>\n        ) : (\n          <div\n            className=\"FaceCard-mesg\"\n            title={statusMesg || \"(No status message)\"}\n          >\n            {emoji}\n          </div>\n        )}\n        {liveMode && stream && (\n          <div className=\"FaceCard-live-indicator\" title=\"Live Mode On\">\n            &#9673;\n          </div>\n        )}\n        {liveMode && stream && (\n          <div className=\"FaceCard-mic-speaker-icons\">\n            {micOn && <span title=\"Mic On\">&#x1F3A4;</span>}\n            {speakerOn && <span title=\"Speaker On\">&#x1F508;</span>}\n          </div>\n        )}\n        {!liveMode && toggleSuspended && (\n          <button\n            type=\"button\"\n            className=\"FaceCard-camera\"\n            onClick={toggleSuspended}\n            title={suspended ? \"Enable Camera\" : \"Disable Camera\"}\n          >\n            &#x1F4F7;\n            {suspended && (\n              <span className=\"FaceCard-camera-disabled\">&#10060;</span>\n            )}\n          </button>\n        )}\n      </div>\n    );\n  }\n);\n","import React from \"react\";\nimport { useSnapshot } from \"valtio\";\n\nimport \"./FaceList.css\";\nimport { Loading } from \"./Loading\";\nimport { useFaceImages } from \"../hooks/useFaceImages\";\nimport { FaceCard } from \"./FaceCard\";\n\n// XXX temporary global state for debugging\nimport { getRoomState } from \"../states/roomMap\";\n\nexport const FaceList = React.memo<{\n  roomId: string;\n  userId: string;\n  avatar: string;\n  nickname: string;\n  statusMesg: string;\n  setStatusMesg: (mesg: string) => void;\n  videoDeviceId?: string;\n  toggleSuspended: () => void;\n  suspended: boolean;\n}>(\n  ({\n    roomId,\n    userId,\n    avatar,\n    nickname,\n    statusMesg,\n    setStatusMesg,\n    videoDeviceId,\n    toggleSuspended,\n    suspended,\n  }) => {\n    const userIdMap = useSnapshot(getRoomState(roomId, userId).userIdMap);\n    const { myImage, roomImages } = useFaceImages(\n      roomId,\n      userId,\n      avatar,\n      nickname,\n      statusMesg,\n      suspended,\n      false,\n      false,\n      false,\n      videoDeviceId\n    );\n    const twoMinAgo = Date.now() - 2 * 60 * 1000;\n\n    return (\n      <div className=\"FaceList-list\">\n        <div className=\"FaceList-item\">\n          <FaceCard\n            image={myImage}\n            nickname={nickname}\n            statusMesg={statusMesg}\n            setStatusMesg={setStatusMesg}\n            liveMode={false}\n            muted\n            micOn={false}\n            speakerOn={false}\n            toggleSuspended={toggleSuspended}\n            suspended={suspended}\n          />\n        </div>\n        {roomImages.map((item) => (\n          <div\n            key={item.userId}\n            className=\"FaceList-item\"\n            style={\n              userIdMap[item.userId] === \"closed\"\n                ? { transform: \"scale(0.5)\" }\n                : {}\n            }\n          >\n            <FaceCard\n              image={item.image}\n              nickname={item.info.nickname}\n              statusMesg={item.info.message}\n              obsoleted={item.updated < twoMinAgo}\n              liveMode={false}\n              muted\n              micOn={false}\n              speakerOn={false}\n            />\n          </div>\n        ))}\n        {!roomImages.length && (\n          <div className=\"FaceList-item\">\n            <Loading />\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n","/* eslint jsx-a11y/no-static-element-interactions: off */\n\nimport React, { Suspense, useCallback, useRef, useState } from \"react\";\n\nimport \"./GatherArea.css\";\nimport { useGatherArea, RegionData } from \"../hooks/useGatherArea\";\nimport { useFaceImages } from \"../hooks/useFaceImages\";\nimport { useFaceVideos } from \"../hooks/useFaceVideos\";\nimport { RegionEditor } from \"./RegionEditor\";\nimport { LinkOpener } from \"./LinkOpener\";\nimport { FaceList } from \"./FaceList\";\nimport { FaceCard } from \"./FaceCard\";\nimport { SuspenseFallback } from \"./SuspenseFallback\";\n\nconst MomentaryChat = React.lazy(() => import(\"./MomentaryChat\"));\nconst MediaShare = React.lazy(() => import(\"./MediaShare\"));\nconst GoBoard = React.lazy(() => import(\"./GoBoard\"));\n\ntype OnMouseMove = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n\nconst Region = React.memo<{\n  roomId: string;\n  userId: string;\n  nickname: string;\n  id: string;\n  data: RegionData;\n  highlight?: boolean;\n}>(({ roomId, userId, nickname, id, data, highlight }) => {\n  const boxShadow =\n    (data.type === \"meeting\" &&\n      (highlight ? \"0 0 0 5px pink\" : \"0 0 0 1px pink\")) ||\n    undefined;\n  return (\n    <div\n      className=\"GatherArea-region\"\n      style={{\n        left: `${data.position[0]}px`,\n        top: `${data.position[1]}px`,\n        width: `${data.size[0]}px`,\n        height: `${data.size[1]}px`,\n        boxShadow,\n        zIndex: data.type !== \"chat\" ? data.zIndex : undefined,\n        background: data.background,\n        border: data.border,\n      }}\n    >\n      {data.iframe && <iframe title={id} src={data.iframe} frameBorder=\"0\" />}\n      {data.type === \"chat\" && (\n        <Suspense fallback={<SuspenseFallback />}>\n          <MomentaryChat\n            roomId={roomId}\n            userId={userId}\n            nickname={nickname}\n            uniqueId={id}\n          />\n        </Suspense>\n      )}\n      {data.type === \"media\" && (\n        <Suspense fallback={<SuspenseFallback />}>\n          <MediaShare\n            roomId={roomId}\n            userId={userId}\n            nickname={nickname}\n            uniqueId={id}\n          />\n        </Suspense>\n      )}\n      {data.type === \"goboard\" && (\n        <Suspense fallback={<SuspenseFallback />}>\n          <GoBoard roomId={roomId} userId={userId} uniqueId={id} />\n        </Suspense>\n      )}\n    </div>\n  );\n});\n\nconst Avatar = React.memo<{\n  nickname: string;\n  statusMesg: string;\n  setStatusMesg?: (mesg: string) => void;\n  image?: string;\n  obsoleted?: boolean;\n  position: [left: number, top: number];\n  setPosition?: (nextPosition: [number, number]) => void;\n  registerOnMouseDrag: (onMouseMove?: OnMouseMove) => void;\n  stream?: MediaStream;\n  liveMode: boolean;\n  muted?: boolean;\n  toggleSuspended?: () => void;\n  suspended?: boolean;\n}>(\n  ({\n    nickname,\n    statusMesg,\n    setStatusMesg,\n    image,\n    obsoleted,\n    position,\n    setPosition,\n    registerOnMouseDrag,\n    stream,\n    liveMode,\n    muted,\n    toggleSuspended,\n    suspended,\n  }) => {\n    const isMyself = !!setPosition;\n    return (\n      <div\n        className=\"GatherArea-avatar\"\n        style={{\n          left: `${position[0]}px`,\n          top: `${position[1]}px`,\n        }}\n        onMouseDown={(e) => {\n          e.preventDefault();\n          if (isMyself) {\n            const target = e.currentTarget;\n            const offset = [e.clientX - position[0], e.clientY - position[1]];\n            registerOnMouseDrag((e) => {\n              const left = e.clientX - offset[0];\n              const top = e.clientY - offset[1];\n              target.style.left = `${left}px`;\n              target.style.top = `${top}px`;\n              setPosition?.([left, top]);\n            });\n          }\n        }}\n      >\n        {statusMesg && (\n          <div\n            className=\"GatherArea-avatar-balloon\"\n            style={{ opacity: obsoleted ? 0.2 : 1 }}\n          >\n            {statusMesg}\n          </div>\n        )}\n        <FaceCard\n          image={image}\n          nickname={nickname}\n          statusMesg={statusMesg}\n          setStatusMesg={setStatusMesg}\n          obsoleted={!!obsoleted}\n          liveMode={liveMode}\n          stream={stream}\n          muted={!!muted}\n          micOn={!!stream}\n          speakerOn={liveMode}\n          toggleSuspended={toggleSuspended}\n          suspended={suspended}\n        />\n      </div>\n    );\n  }\n);\n\nexport const GatherArea = React.memo<{\n  roomId: string;\n  userId: string;\n  avatar: string;\n  nickname: string;\n  statusMesg: string;\n  setStatusMesg: (mesg: string) => void;\n  videoDeviceId?: string;\n  audioDeviceId?: string;\n  toggleSuspended: () => void;\n  suspended: boolean;\n}>(\n  ({\n    roomId,\n    userId,\n    avatar,\n    nickname,\n    statusMesg,\n    setStatusMesg,\n    videoDeviceId,\n    audioDeviceId,\n    toggleSuspended,\n    suspended,\n  }) => {\n    const { myImage, roomImages } = useFaceImages(\n      roomId,\n      userId,\n      avatar,\n      nickname,\n      statusMesg,\n      suspended,\n      false,\n      false,\n      false,\n      videoDeviceId\n    );\n    const { avatarMap, myAvatar, setMyAvatar, regionMap } = useGatherArea(\n      roomId,\n      userId\n    );\n\n    const onMouseDragRef = useRef<OnMouseMove>();\n    const registerOnMouseDrag = useCallback((onMouseMove?: OnMouseMove) => {\n      onMouseDragRef.current = onMouseMove;\n    }, []);\n\n    const regionIdList = Object.keys(regionMap).sort(\n      (a, b) => (regionMap[b].zIndex ?? 0) - (regionMap[a].zIndex ?? 0)\n    );\n    const activeMeetingRegionId = regionIdList.find((id) => {\n      const { type, position, size } = regionMap[id] as RegionData;\n      return (\n        type === \"meeting\" &&\n        position[0] <= myAvatar.position[0] &&\n        position[1] <= myAvatar.position[1] &&\n        myAvatar.position[0] + 36 <= position[0] + size[0] &&\n        myAvatar.position[1] + 36 <= position[1] + size[1]\n      );\n    });\n\n    const { faceStream, faceStreamMap } = useFaceVideos(\n      roomId,\n      userId,\n      !!activeMeetingRegionId,\n      !!activeMeetingRegionId,\n      true,\n      videoDeviceId,\n      audioDeviceId,\n      `gatherArea/meeting/${activeMeetingRegionId}/`\n    );\n\n    const [showModal, setShowModal] = useState<\n      null | \"region-editor\" | \"link-opener\"\n    >(null);\n\n    const twoMinAgo = Date.now() - 2 * 60 * 1000;\n\n    return (\n      <div className=\"GatherArea-container\">\n        <div\n          className=\"GatherArea-body\"\n          onMouseMove={(e) => {\n            if (onMouseDragRef.current) {\n              onMouseDragRef.current(e);\n            }\n          }}\n          onMouseUp={() => {\n            registerOnMouseDrag();\n          }}\n        >\n          {Object.entries(regionMap).map(([regionId, regionData]) => (\n            <Region\n              key={regionId}\n              roomId={roomId}\n              userId={userId}\n              nickname={nickname}\n              id={regionId}\n              data={regionData}\n              highlight={regionId === activeMeetingRegionId}\n            />\n          ))}\n          {Object.entries(avatarMap).map(([uid, avatarData]) => {\n            if (uid === userId) {\n              return null;\n            }\n            const imageData = roomImages.find((data) => data.userId === uid);\n            if (!imageData) {\n              return null;\n            }\n            return (\n              <Avatar\n                key={uid}\n                nickname={imageData.info.nickname}\n                statusMesg={imageData.info.message}\n                image={imageData.image}\n                obsoleted={imageData.updated < twoMinAgo}\n                position={avatarData.position}\n                registerOnMouseDrag={registerOnMouseDrag}\n                stream={faceStreamMap[uid]}\n                liveMode={!!activeMeetingRegionId}\n              />\n            );\n          })}\n          <Avatar\n            nickname={nickname}\n            statusMesg={statusMesg}\n            setStatusMesg={setStatusMesg}\n            image={myImage}\n            position={myAvatar.position}\n            setPosition={(position) =>\n              setMyAvatar((prev) => ({ ...prev, position }))\n            }\n            registerOnMouseDrag={registerOnMouseDrag}\n            stream={faceStream || undefined}\n            liveMode={!!activeMeetingRegionId}\n            muted\n            toggleSuspended={toggleSuspended}\n            suspended={suspended}\n          />\n        </div>\n        <div className=\"GatherArea-facelist\">\n          <FaceList\n            roomId={roomId}\n            userId={userId}\n            avatar={avatar}\n            nickname={nickname}\n            statusMesg={statusMesg}\n            setStatusMesg={setStatusMesg}\n            videoDeviceId={videoDeviceId}\n            toggleSuspended={toggleSuspended}\n            suspended={suspended}\n          />\n        </div>\n        <div className=\"GatherArea-toolbar\">\n          <div>\n            <button\n              type=\"button\"\n              onClick={() =>\n                setShowModal(\n                  showModal === \"region-editor\" ? null : \"region-editor\"\n                )\n              }\n            >\n              {showModal === \"region-editor\"\n                ? \"Close Region Editor\"\n                : \"Open Region Editor\"}\n            </button>\n            {showModal === \"region-editor\" && (\n              <div className=\"GatherArea-region-editor\">\n                <RegionEditor roomId={roomId} userId={userId} />\n              </div>\n            )}\n          </div>\n          <div>\n            <button\n              type=\"button\"\n              onClick={() =>\n                setShowModal(showModal === \"link-opener\" ? null : \"link-opener\")\n              }\n            >\n              {showModal === \"link-opener\"\n                ? \"Close Link Opener\"\n                : \"Open Link Opener\"}\n            </button>\n            {showModal === \"link-opener\" && (\n              <div className=\"GatherArea-link-opener\">\n                <LinkOpener roomId={roomId} />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default GatherArea;\n","import React, { useEffect, useState } from \"react\";\nimport { useSnapshot } from \"valtio\";\n\nimport \"./SingleRoom.css\";\nimport { singleRoomState, toggleConfigTakePhoto } from \"../states/singleRoom\";\nimport { setRoomIdToUrl } from \"../utils/url\";\nimport { GatherArea } from \"./GatherArea\";\n\nexport const SingleRoom = React.memo(() => {\n  const { roomId, userId, config } = useSnapshot(singleRoomState);\n  const [statusMesg, setStatusMesg] = useState(\"\");\n  useEffect(() => {\n    setRoomIdToUrl(roomId);\n  }, [roomId]);\n\n  return (\n    <div className=\"SingleRoom-container\">\n      <GatherArea\n        roomId={roomId}\n        userId={userId}\n        avatar={config.avatar}\n        nickname={config.nickname}\n        statusMesg={statusMesg}\n        setStatusMesg={setStatusMesg}\n        suspended={!config.takePhoto}\n        videoDeviceId={config.videoDeviceId}\n        audioDeviceId={config.audioDeviceId}\n        toggleSuspended={toggleConfigTakePhoto}\n      />\n    </div>\n  );\n});\n\nexport default SingleRoom;\n","export const sleep = (ms: number) =>\n  new Promise((resolve) => setTimeout(resolve, ms));\n","export const getVideoStream = async (deviceId?: string) => {\n  const constraints = deviceId\n    ? {\n        video: { deviceId },\n      }\n    : { video: true };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getVideoTracks();\n  const dispose = () => {\n    track.stop();\n  };\n  return {\n    stream,\n    dispose,\n  };\n};\n\nexport const getFaceVideoStream = async (deviceId?: string) => {\n  const constraints = {\n    video: {\n      deviceId,\n      frameRate: { max: 5 },\n      width: { exact: 72 },\n      height: { exact: 72 },\n    },\n  };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getVideoTracks();\n  const dispose = () => {\n    track.stop();\n  };\n  return {\n    stream,\n    dispose,\n  };\n};\n","import React from \"react\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { BaseEmoji, Picker, getEmojiDataFromNative, Data } from \"emoji-mart\";\nimport data from \"emoji-mart/data/all.json\";\n\nexport { Emoji } from \"emoji-mart\";\nexport type EmojiDataType = BaseEmoji;\n\n// we do not support custom emojis\nexport const EmojiPicker = Picker as React.ComponentType<\n  | Omit<React.ComponentProps<typeof Picker>, \"custom\" | \"onSelect\">\n  | {\n      onSelect: (emoji: BaseEmoji) => void;\n    }\n>;\n\nexport const isEmoji = (s: string) => {\n  const emojiData: BaseEmoji | null = getEmojiDataFromNative(\n    s,\n    \"apple\",\n    (data as unknown) as Data\n  );\n  return !!emojiData;\n};\n"],"sourceRoot":""}