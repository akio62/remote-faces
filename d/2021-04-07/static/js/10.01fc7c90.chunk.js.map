{"version":3,"sources":["states/roomMap.ts","utils/types.ts","components/FaceImages.tsx","components/ControlPanel.tsx","components/SelectivePane.tsx","components/SingleRoom.tsx","utils/sleep.ts","media/video.ts","components/FaceCard.tsx","utils/emoji.ts","media/capture.ts","hooks/useFaceImages.ts","media/audio.ts","hooks/useFaceVideos.ts","components/Loading.tsx"],"names":["roomMap","Map","getRoomState","roomId","userId","key","has","state","addMediaType","type","a","acceptingMediaTypes","includes","console","log","push","roomPromise","acceptMediaTypes","snapshot","removeMediaType","index","indexOf","splice","addTrack","track","removeTrack","dispose","proxy","networkStatusList","userIdMap","ydoc","ref","Y","trackMap","on","update","base64","btoa","String","fromCharCode","then","room","broadcastData","ydocUpdate","createRoom","status","unshift","length","pop","peerIndex","data","sendData","info","binaryString","atob","Uint8Array","map","call","c","charCodeAt","mediaType","addEventListener","createRoomState","set","get","isObject","x","hasStringProp","prop","hasObjectProp","FaceImages","React","memo","avatar","nickname","statusMesg","suspended","liveMode","micOn","speakerOn","videoDeviceId","audioDeviceId","useFaceImages","myImage","roomImages","useFaceVideos","faceStream","faceStreamMap","twoMinAgo","Date","now","className","FaceCard","image","stream","undefined","muted","item","message","obsoleted","updated","Loading","ControlPanel","toggleSuspended","setLiveMode","setMicOn","setSpeakerOn","secondColumnOpen","setSecondColumnOpen","onClick","title","onChange","e","target","value","Error","components","lazy","Welcome","SelectivePane","setStatusMesg","useState","activePane","setActivePane","multiple","size","Object","keys","name","prev","filter","idx","fallback","SuspenseFallback","createElement","uniqueId","SingleRoom","useSnapshot","singleRoomState","config","useEffect","setRoomIdToUrl","takePhoto","toggleConfigTakePhoto","style","display","sleep","ms","Promise","resolve","setTimeout","getVideoStream","deviceId","constraints","video","navigator","mediaDevices","getUserMedia","getVideoTracks","stop","getFaceVideoStream","frameRate","max","width","exact","height","firstStatusMesgChar","emoji","fromCodePoint","isEmoji","opacity","videoEle","srcObject","autoPlay","playsInline","src","BLANK_IMAGE","alt","mesg","window","prompt","EmojiPicker","Picker","s","getEmojiDataFromNative","captureImage","ImageCapture","imageCapture","blob","createImageBitmap","srcImg","grabFrame","srcW","srcH","document","autoplay","setAttribute","position","bottom","body","appendChild","removeChild","videoWidth","videoHeight","canvas","ctx","getContext","dstW","dstH","ratio","Math","min","y","drawImage","toDataURL","isImageData","isFaceInfo","setMyImage","setRoomImages","roomState","getMap","listener","copied","changed","forEach","uid","findIndex","tenMinAgo","filtered","observe","unsub","subscribe","unobserve","timer","didCleanup","loop","error","clearTimeout","getAudioStream","audio","getAudioTracks","applyConstraints","echoCancellation","echoCancellationType","ideal","noiseSuppression","addTrackToStream","disposeStream","newStream","MediaStream","dispatchEvent","MediaStreamTrackEvent","getTracks","videoEnabled","audioEnabled","uniqueMediaId","videoType","audioType","setFaceStream","setFaceStreamMap","isMounted","useRef","current","onTrack","readyState","oldStream","rest","entries","cleanup","videoStream","disposeVideo","videoTrack","Event","audioStream","disposeAudio","audioTrack","enabled","onaddtrack","event","kind","removeEventListener"],"mappings":"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","file":"static/js/10.01fc7c90.chunk.js","sourcesContent":["import { proxy, snapshot, ref } from \"valtio\";\nimport * as Y from \"yjs\";\n\nimport { PeerInfo, createRoom, NetworkStatus } from \"../network/room\";\n\ntype RoomState = {\n  networkStatusList: NetworkStatus[];\n  userIdMap: { [userId: string]: number }; // peerIndex\n  ydoc: Y.Doc;\n  acceptingMediaTypes: string[];\n  trackMap: {\n    [mediaType: string]: {\n      [userId: string]: MediaStreamTrack;\n    };\n  };\n  addMediaType: (type: string) => Promise<void>;\n  removeMediaType: (type: string) => Promise<void>;\n  addTrack: (type: string, track: MediaStreamTrack) => Promise<void>;\n  removeTrack: (type: string) => Promise<void>;\n  dispose: () => Promise<void>;\n};\n\nconst createRoomState = (roomId: string, userId: string) => {\n  const addMediaType = async (type: string) => {\n    if (state.acceptingMediaTypes.includes(type)) {\n      console.log(\"media type already added\", type);\n      return;\n    }\n    state.acceptingMediaTypes.push(type);\n    const room = await roomPromise;\n    room.acceptMediaTypes(snapshot(state.acceptingMediaTypes));\n  };\n  const removeMediaType = async (type: string) => {\n    const index = state.acceptingMediaTypes.indexOf(type);\n    if (index === -1) {\n      console.log(\"media type already added\", type);\n      return;\n    }\n    state.acceptingMediaTypes.splice(index, 1);\n    const room = await roomPromise;\n    room.acceptMediaTypes(snapshot(state.acceptingMediaTypes));\n  };\n  const addTrack = async (type: string, track: MediaStreamTrack) => {\n    const room = await roomPromise;\n    room.addTrack(type, track);\n  };\n  const removeTrack = async (type: string) => {\n    const room = await roomPromise;\n    room.removeTrack(type);\n  };\n  const dispose = async () => {\n    const room = await roomPromise;\n    room.dispose();\n  };\n  const state = proxy<RoomState>({\n    networkStatusList: [],\n    userIdMap: {},\n    ydoc: ref(new Y.Doc()),\n    acceptingMediaTypes: [],\n    trackMap: {},\n    addMediaType,\n    removeMediaType,\n    addTrack,\n    removeTrack,\n    dispose,\n  });\n  const updateNetworkStatus = (status: NetworkStatus) => {\n    console.log(\"[network status]\", status);\n    state.networkStatusList.unshift(status);\n    if (state.networkStatusList.length > 10) {\n      state.networkStatusList.pop();\n    }\n    if (status?.type === \"CONNECTION_CLOSED\") {\n      // FIXME somehow this might be causing fatal behavior\n      /*\n      Object.entries(state.userIdMap).forEach(([uid, idx]) => {\n        if (idx === status.peerIndex) {\n          delete state.userIdMap[uid];\n        }\n      });\n      */\n    }\n  };\n  const notifyNewPeer = (peerIndex: number) => {\n    const update = Y.encodeStateAsUpdate(state.ydoc);\n    const base64 = btoa(String.fromCharCode(...update));\n    const data = { ydocUpdate: base64 };\n    roomPromise.then((room) => {\n      // XXX this does not scale\n      room.sendData(data, peerIndex);\n    });\n  };\n  const receiveData = (data: any, info: PeerInfo) => {\n    state.userIdMap[info.userId] = info.peerIndex;\n    if (data?.ydocUpdate) {\n      const binaryString = atob(data.ydocUpdate);\n      const update = new Uint8Array(\n        ([].map.call(binaryString, (c: string) =>\n          c.charCodeAt(0)\n        ) as unknown) as ArrayBufferLike\n      );\n      Y.applyUpdate(state.ydoc, update);\n    }\n  };\n  state.ydoc.on(\"update\", (update: Uint8Array) => {\n    const base64 = btoa(String.fromCharCode(...update));\n    roomPromise.then((room) => {\n      room.broadcastData({ ydocUpdate: base64 });\n    });\n  });\n  const receiveTrack = (\n    mediaType: string,\n    track: MediaStreamTrack,\n    info: PeerInfo\n  ) => {\n    if (!state.trackMap[mediaType]) {\n      state.trackMap[mediaType] = {};\n    }\n    track.addEventListener(\"ended\", () => {\n      if (state.trackMap[mediaType][info.userId] === track) {\n        delete state.trackMap[mediaType][info.userId];\n      }\n    });\n    state.trackMap[mediaType][info.userId] = ref(track);\n  };\n  const roomPromise = createRoom(\n    roomId,\n    userId,\n    updateNetworkStatus,\n    notifyNewPeer,\n    receiveData,\n    receiveTrack\n  );\n  return state;\n};\n\nconst roomMap = new Map<string, RoomState>();\n\nexport const getRoomState = (roomId: string, userId: string) => {\n  const key = `${roomId}:${userId}`;\n  if (!roomMap.has(key)) {\n    const state = createRoomState(roomId, userId);\n    roomMap.set(key, state);\n  }\n  return roomMap.get(key) as RoomState;\n};\n\nexport const disposeRoomState = (roomId: string, userId: string) => {\n  const key = `${roomId}:${userId}`;\n  const state = roomMap.get(key);\n  if (state) {\n    roomMap.delete(key);\n    state.dispose();\n  }\n};\n","export const isObject = (x: unknown): x is Record<string, unknown> =>\n  typeof x === \"object\" && x !== null;\n\nexport const hasStringProp = <\n  Obj extends Record<string, unknown>,\n  Prop extends string\n>(\n  x: Obj,\n  prop: Prop\n): x is Obj & Record<Prop, string> =>\n  typeof (x as Record<Prop, unknown>)[prop] === \"string\";\n\nexport const hasObjectProp = <\n  Obj extends Record<string, unknown>,\n  Prop extends string\n>(\n  x: Obj,\n  prop: Prop\n): x is Obj & Record<Prop, Record<string, unknown>> =>\n  isObject((x as Record<Prop, unknown>)[prop]);\n\nexport type ReturnPromiseType<\n  F extends (...args: any) => any\n> = ReturnType<F> extends Promise<infer T> ? T : never;\n","import React from \"react\";\n\nimport \"./FaceImages.css\";\nimport { Loading } from \"./Loading\";\nimport { useFaceImages } from \"../hooks/useFaceImages\";\nimport { useFaceVideos } from \"../hooks/useFaceVideos\";\nimport { FaceCard } from \"./FaceCard\";\n\nexport const FaceImages = React.memo<{\n  roomId: string;\n  userId: string;\n  avatar: string;\n  nickname: string;\n  statusMesg: string;\n  suspended: boolean;\n  liveMode: boolean;\n  micOn: boolean;\n  speakerOn: boolean;\n  videoDeviceId?: string;\n  audioDeviceId?: string;\n}>(\n  ({\n    roomId,\n    userId,\n    avatar,\n    nickname,\n    statusMesg,\n    suspended,\n    liveMode,\n    micOn,\n    speakerOn,\n    videoDeviceId,\n    audioDeviceId,\n  }) => {\n    const { myImage, roomImages } = useFaceImages(\n      roomId,\n      userId,\n      avatar,\n      nickname,\n      statusMesg,\n      suspended,\n      liveMode,\n      micOn,\n      speakerOn,\n      videoDeviceId\n    );\n    const { faceStream, faceStreamMap } = useFaceVideos(\n      roomId,\n      userId,\n      liveMode,\n      liveMode,\n      micOn,\n      videoDeviceId,\n      audioDeviceId\n    );\n    const twoMinAgo = Date.now() - 2 * 60 * 1000;\n\n    return (\n      <div className=\"FaceImages-list\">\n        <div className=\"FaceImages-item\">\n          <FaceCard\n            image={myImage}\n            nickname={nickname}\n            statusMesg={statusMesg}\n            liveMode={liveMode}\n            stream={faceStream || undefined}\n            muted\n            micOn={micOn}\n            speakerOn={speakerOn}\n          />\n        </div>\n        {roomImages.map((item) => (\n          <div key={item.userId} className=\"FaceImages-item\">\n            <FaceCard\n              image={item.image}\n              nickname={item.info.nickname}\n              statusMesg={item.info.message}\n              obsoleted={item.updated < twoMinAgo}\n              liveMode={item.info.liveMode}\n              stream={(liveMode && faceStreamMap[item.userId]) || undefined}\n              muted={!speakerOn}\n              micOn={item.info.micOn}\n              speakerOn={item.info.speakerOn}\n            />\n          </div>\n        ))}\n        {!roomImages.length && (\n          <div className=\"FaceImages-item\">\n            <Loading />\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n","import React, { Dispatch, SetStateAction } from \"react\";\n\nimport \"./ControlPanel.css\";\n\nexport const ControlPanel = React.memo<{\n  suspended: boolean;\n  toggleSuspended: () => void;\n  liveMode: boolean;\n  setLiveMode: Dispatch<SetStateAction<boolean>>;\n  micOn: boolean;\n  setMicOn: Dispatch<SetStateAction<boolean>>;\n  speakerOn: boolean;\n  setSpeakerOn: Dispatch<SetStateAction<boolean>>;\n  secondColumnOpen: boolean;\n  setSecondColumnOpen: Dispatch<SetStateAction<boolean>>;\n}>(\n  ({\n    suspended,\n    toggleSuspended,\n    liveMode,\n    setLiveMode,\n    setMicOn,\n    setSpeakerOn,\n    secondColumnOpen,\n    setSecondColumnOpen,\n  }) => (\n    <div className=\"ControlPanel-container\">\n      <button\n        type=\"button\"\n        onClick={toggleSuspended}\n        title={suspended ? \"Enable Camera\" : \"Disable Camera\"}\n      >\n        &#x1F4F7;\n        {suspended && <span className=\"ControlPanel-disabled\">&#10060;</span>}\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => setSecondColumnOpen((x) => !x)}\n        title={secondColumnOpen ? \"Close Right Pane\" : \"Open Right Pane\"}\n      >\n        {secondColumnOpen ? <>&#9664;</> : <>&#9654;</>}\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => setLiveMode((x) => !x)}\n        title={liveMode ? \"Disable Live Mode\" : \"Enable Live Mode\"}\n      >\n        &#x1F3A5;\n        {!liveMode && <span className=\"ControlPanel-disabled\">&#10060;</span>}\n      </button>\n      <div className=\"ControlPanel-select\">\n        &#x1F39B;\n        <select\n          onChange={(e) => {\n            switch (e.target.value) {\n              case \"off\":\n                setSpeakerOn(false);\n                setMicOn(false);\n                break;\n              case \"speaker\":\n                setSpeakerOn(true);\n                setMicOn(false);\n                break;\n              case \"mic\":\n                setSpeakerOn(true);\n                setMicOn(true);\n                break;\n              default:\n                throw new Error(\"no option\");\n            }\n          }}\n        >\n          <option value=\"off\">Audio Off</option>\n          <option value=\"speaker\">Speaker Only</option>\n          <option value=\"mic\">Mic + Speaker</option>\n        </select>\n      </div>\n    </div>\n  )\n);\n","import React, { Suspense, createElement, useState } from \"react\";\n\nimport { SuspenseFallback } from \"./SuspenseFallback\";\nimport \"./SelectivePane.css\";\n\nconst components = {\n  \"Gather Area\": React.lazy(() => import(\"./GatherArea\")),\n  Welcome: React.lazy(() => import(\"./Welcome\")),\n  \"Momentary Chat\": React.lazy(() => import(\"./MomentaryChat\")),\n  \"Spatial Area\": React.lazy(() => import(\"./SpatialArea\")),\n  \"Screen Share\": React.lazy(() => import(\"./ScreenShare\")),\n  \"White Board\": React.lazy(() => import(\"./CollabWhiteBoard\")),\n  \"Video Share\": React.lazy(() => import(\"./VideoShare\")),\n  \"Go Board\": React.lazy(() => import(\"./GoBoard\")),\n};\n\nexport const SelectivePane = React.memo<{\n  roomId: string;\n  userId: string;\n  avatar: string;\n  nickname: string;\n  statusMesg: string;\n  setStatusMesg: (mesg: string) => void;\n  videoDeviceId?: string;\n  audioDeviceId?: string;\n  toggleSuspended: () => void;\n  suspended: boolean;\n}>(\n  ({\n    roomId,\n    userId,\n    avatar,\n    nickname,\n    statusMesg,\n    setStatusMesg,\n    videoDeviceId,\n    audioDeviceId,\n    toggleSuspended,\n    suspended,\n  }) => {\n    const [activePane, setActivePane] = useState<string[]>([\"Gather Area\"]);\n    const togglePane = (name: string) => {\n      setActivePane((prev) => {\n        if (prev.includes(name)) {\n          return prev.filter((item) => item !== name);\n        }\n        return [...prev, name];\n      });\n    };\n    return (\n      <div className=\"SelectivePane-container\">\n        <div className=\"SelectivePane-select\">\n          &#9776;\n          <select\n            multiple\n            size={Object.keys(components).length}\n            value={activePane}\n            onChange={(e) => togglePane(e.target.value)}\n          >\n            {Object.keys(components).map((name) => {\n              const idx = activePane.indexOf(name);\n              if (idx >= 0) {\n                return (\n                  <option key={name} value={name}>\n                    {`[${idx + 1}] ${name}`}\n                  </option>\n                );\n              }\n              return (\n                <option key={name} value={name}>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className=\"SelectivePane-body\">\n          {activePane.map((name) => (\n            <Suspense key={name} fallback={<SuspenseFallback />}>\n              {createElement(components[name as keyof typeof components], {\n                roomId,\n                userId,\n                avatar,\n                nickname,\n                statusMesg,\n                setStatusMesg,\n                suspended,\n                videoDeviceId,\n                audioDeviceId,\n                uniqueId: undefined,\n                toggleSuspended,\n              })}\n            </Suspense>\n          ))}\n        </div>\n      </div>\n    );\n  }\n);\n","import React, { useEffect, useState } from \"react\";\nimport { useSnapshot } from \"valtio\";\n\nimport \"./SingleRoom.css\";\nimport { singleRoomState, toggleConfigTakePhoto } from \"../states/singleRoom\";\nimport { setRoomIdToUrl } from \"../utils/url\";\nimport { FaceImages } from \"./FaceImages\";\nimport { ControlPanel } from \"./ControlPanel\";\nimport { SelectivePane } from \"./SelectivePane\";\n\nexport const SingleRoom = React.memo(() => {\n  const { roomId, userId, config } = useSnapshot(singleRoomState);\n  const [statusMesg, setStatusMesg] = useState(\"\");\n  useEffect(() => {\n    setRoomIdToUrl(roomId);\n  }, [roomId]);\n\n  const [liveMode, setLiveMode] = useState(false);\n  const [micOn, setMicOn] = useState(false);\n  const [speakerOn, setSpeakerOn] = useState(false);\n  const [secondColumnOpen, setSecondColumnOpen] = useState(true);\n\n  return (\n    <div className=\"SingleRoom-container\">\n      <div className=\"SingleRoom-1st-column\">\n        <ControlPanel\n          suspended={!config.takePhoto}\n          toggleSuspended={toggleConfigTakePhoto}\n          liveMode={liveMode}\n          setLiveMode={setLiveMode}\n          micOn={micOn}\n          setMicOn={setMicOn}\n          speakerOn={speakerOn}\n          setSpeakerOn={setSpeakerOn}\n          secondColumnOpen={secondColumnOpen}\n          setSecondColumnOpen={setSecondColumnOpen}\n        />\n        <FaceImages\n          roomId={roomId}\n          userId={userId}\n          videoDeviceId={config.videoDeviceId}\n          audioDeviceId={config.audioDeviceId}\n          avatar={config.avatar}\n          nickname={config.nickname}\n          statusMesg={statusMesg}\n          suspended={!config.takePhoto}\n          liveMode={liveMode}\n          micOn={micOn}\n          speakerOn={speakerOn}\n        />\n      </div>\n      <div\n        className=\"SingleRoom-2nd-column\"\n        style={{ display: secondColumnOpen ? \"inherit\" : \"none\" }}\n      >\n        <SelectivePane\n          roomId={roomId}\n          userId={userId}\n          avatar={config.avatar}\n          nickname={config.nickname}\n          statusMesg={statusMesg}\n          setStatusMesg={setStatusMesg}\n          suspended={!config.takePhoto}\n          videoDeviceId={config.videoDeviceId}\n          audioDeviceId={config.audioDeviceId}\n          toggleSuspended={toggleConfigTakePhoto}\n        />\n      </div>\n    </div>\n  );\n});\n\nexport default SingleRoom;\n","export const sleep = (ms: number) =>\n  new Promise((resolve) => setTimeout(resolve, ms));\n","export const getVideoStream = async (deviceId?: string) => {\n  const constraints = deviceId\n    ? {\n        video: { deviceId },\n      }\n    : { video: true };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getVideoTracks();\n  const dispose = () => {\n    track.stop();\n  };\n  return {\n    stream,\n    dispose,\n  };\n};\n\nexport const getFaceVideoStream = async (deviceId?: string) => {\n  const constraints = {\n    video: {\n      deviceId,\n      frameRate: { max: 5 },\n      width: { exact: 72 },\n      height: { exact: 72 },\n    },\n  };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getVideoTracks();\n  const dispose = () => {\n    track.stop();\n  };\n  return {\n    stream,\n    dispose,\n  };\n};\n","import React from \"react\";\n\nimport \"./FaceCard.css\";\nimport { BLANK_IMAGE } from \"../media/imagePresets\";\nimport { isEmoji } from \"../utils/emoji\";\n\nexport const FaceCard = React.memo<{\n  image?: string;\n  nickname: string;\n  statusMesg: string;\n  setStatusMesg?: (mesg: string) => void;\n  obsoleted?: boolean;\n  liveMode: boolean;\n  stream?: MediaStream;\n  muted: boolean;\n  micOn: boolean;\n  speakerOn: boolean;\n  toggleSuspended?: () => void;\n  suspended?: boolean;\n}>(\n  ({\n    image,\n    nickname,\n    statusMesg,\n    setStatusMesg,\n    obsoleted,\n    liveMode,\n    stream,\n    muted,\n    micOn,\n    speakerOn,\n    toggleSuspended,\n    suspended,\n  }) => {\n    const firstStatusMesgChar: string | undefined = [...statusMesg][0];\n    let emoji = setStatusMesg ? String.fromCodePoint(0x1f4dd) : \"\";\n    if (firstStatusMesgChar) {\n      if (isEmoji(firstStatusMesgChar)) {\n        emoji = firstStatusMesgChar;\n      } else {\n        emoji = String.fromCodePoint(0x1f4ac);\n      }\n    }\n    const editStatusMesg = () => {\n      if (setStatusMesg) {\n        // eslint-disable-next-line no-alert\n        const mesg = window.prompt(\"Enter status message\");\n        if (mesg !== null) {\n          setStatusMesg(mesg);\n        }\n      }\n    };\n    return (\n      <div\n        className=\"FaceCard-container\"\n        style={{ opacity: obsoleted ? 0.2 : 1 }}\n      >\n        {liveMode && !obsoleted && stream ? (\n          <video\n            className=\"FaceCard-photo\"\n            ref={(videoEle) => {\n              if (videoEle && videoEle.srcObject !== stream) {\n                // eslint-disable-next-line no-param-reassign\n                videoEle.srcObject = stream;\n              }\n            }}\n            autoPlay\n            playsInline\n            muted={muted}\n          />\n        ) : (\n          <img\n            src={image || BLANK_IMAGE}\n            className=\"FaceCard-photo\"\n            alt=\"faceImage\"\n          />\n        )}\n        <div className=\"FaceCard-name\">{nickname}</div>\n        {setStatusMesg ? (\n          <button\n            type=\"button\"\n            className=\"FaceCard-mesg\"\n            title={statusMesg || \"(No status message)\"}\n            onClick={editStatusMesg}\n          >\n            {emoji}\n          </button>\n        ) : (\n          <div\n            className=\"FaceCard-mesg\"\n            title={statusMesg || \"(No status message)\"}\n          >\n            {emoji}\n          </div>\n        )}\n        {liveMode && !obsoleted && stream && (\n          <div className=\"FaceCard-live-indicator\" title=\"Live Mode On\">\n            &#9673;\n          </div>\n        )}\n        {liveMode && !obsoleted && !stream && (\n          <div className=\"FaceCard-live-indicator\" title=\"Live Mode Available\">\n            &#9678;\n          </div>\n        )}\n        {liveMode && !obsoleted && (\n          <div className=\"FaceCard-mic-speaker-icons\">\n            {micOn && <span title=\"Mic On\">&#x1F3A4;</span>}\n            {speakerOn && <span title=\"Speaker On\">&#x1F508;</span>}\n          </div>\n        )}\n        {!liveMode && toggleSuspended && (\n          <button\n            type=\"button\"\n            className=\"FaceCard-camera\"\n            onClick={toggleSuspended}\n            title={suspended ? \"Enable Camera\" : \"Disable Camera\"}\n          >\n            &#x1F4F7;\n            {suspended && (\n              <span className=\"FaceCard-camera-disabled\">&#10060;</span>\n            )}\n          </button>\n        )}\n      </div>\n    );\n  }\n);\n","import React from \"react\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { BaseEmoji, Picker, getEmojiDataFromNative, Data } from \"emoji-mart\";\nimport data from \"emoji-mart/data/all.json\";\n\nexport { Emoji } from \"emoji-mart\";\nexport type EmojiDataType = BaseEmoji;\n\n// we do not support custom emojis\nexport const EmojiPicker = Picker as React.ComponentType<\n  | Omit<React.ComponentProps<typeof Picker>, \"custom\" | \"onSelect\">\n  | {\n      onSelect: (emoji: BaseEmoji) => void;\n    }\n>;\n\nexport const isEmoji = (s: string) => {\n  const emojiData: BaseEmoji | null = getEmojiDataFromNative(\n    s,\n    \"apple\",\n    (data as unknown) as Data\n  );\n  return !!emojiData;\n};\n","import { sleep } from \"../utils/sleep\";\n\nconst captureImage = async (stream: MediaStream, track: MediaStreamTrack) => {\n  if (typeof ImageCapture !== \"undefined\") {\n    const imageCapture = new ImageCapture(track);\n    await sleep(2000);\n    let srcImg: ImageBitmap;\n    try {\n      const blob = await imageCapture.takePhoto();\n      srcImg = await createImageBitmap(blob);\n    } catch (e) {\n      srcImg = await imageCapture.grabFrame();\n    }\n    const srcW = srcImg.width;\n    const srcH = srcImg.height;\n    return { srcImg, srcW, srcH };\n  }\n  const video = document.createElement(\"video\");\n  video.autoplay = true;\n  video.setAttribute(\"playsinline\", \"\");\n  video.style.display = \"block\";\n  video.style.width = \"1px\";\n  video.style.height = \"1px\";\n  video.style.position = \"absolute\";\n  video.style.bottom = \"0\";\n  document.body.appendChild(video);\n  const dispose = () => {\n    document.body.removeChild(video);\n  };\n  video.srcObject = stream;\n  await sleep(2000);\n  const srcImg = video;\n  const srcW = video.videoWidth;\n  const srcH = video.videoHeight;\n  return { srcImg, srcW, srcH, dispose };\n};\n\nexport const takePhoto = async (deviceId?: string) => {\n  const constraints = deviceId\n    ? {\n        video: { deviceId },\n      }\n    : { video: true };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getVideoTracks();\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n  const dstW = 72;\n  const dstH = 72;\n  canvas.width = dstW;\n  canvas.height = dstH;\n  const { srcImg, srcW, srcH, dispose } = await captureImage(stream, track);\n  const ratio = Math.max(dstW / srcW, dstH / srcH);\n  const width = Math.min(srcW, dstW / ratio);\n  const height = Math.min(srcH, dstH / ratio);\n  const x = (srcW - width) / 2;\n  const y = (srcH - height) / 2;\n  ctx.drawImage(srcImg, x, y, width, height, 0, 0, dstW, dstH);\n  if (dispose) {\n    dispose();\n  }\n  track.stop();\n  return canvas.toDataURL(\"image/jpeg\");\n};\n","import { useEffect, useState } from \"react\";\nimport { subscribe } from \"valtio\";\n\nimport { isObject } from \"../utils/types\";\nimport { takePhoto } from \"../media/capture\";\nimport { getRoomState } from \"../states/roomMap\";\n\ntype ImageUrl = string;\n\ntype FaceInfo = {\n  nickname: string;\n  message: string;\n  liveMode: boolean;\n  micOn: boolean;\n  speakerOn: boolean;\n};\n\nconst isFaceInfo = (x: unknown): x is FaceInfo =>\n  isObject(x) &&\n  typeof (x as { nickname: unknown }).nickname === \"string\" &&\n  typeof (x as { message: unknown }).message === \"string\" &&\n  typeof (x as { liveMode: unknown }).liveMode === \"boolean\" &&\n  typeof (x as { micOn: unknown }).micOn === \"boolean\" &&\n  typeof (x as { speakerOn: unknown }).speakerOn === \"boolean\";\n\ntype ImageData = {\n  userId: string;\n  image: ImageUrl;\n  info: FaceInfo;\n  updated: number; // in milliseconds\n};\n\nconst isImageData = (x: unknown): x is ImageData =>\n  isObject(x) &&\n  typeof (x as { image: unknown }).image === \"string\" &&\n  isFaceInfo((x as { info: unknown }).info) &&\n  typeof (x as { updated: unknown }).updated === \"number\";\n\nexport const useFaceImages = (\n  roomId: string,\n  userId: string,\n  avatar: string,\n  nickname: string,\n  statusMesg: string,\n  suspended: boolean,\n  liveMode: boolean,\n  micOn: boolean,\n  speakerOn: boolean,\n  deviceId?: string\n) => {\n  const [myImage, setMyImage] = useState<ImageUrl>();\n  const [roomImages, setRoomImages] = useState<ImageData[]>([]);\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(\"faceImages\");\n    const listener = () => {\n      setRoomImages((prev) => {\n        const copied = [...prev];\n        let changed = false;\n        map.forEach((data, uid) => {\n          if (uid === userId) return;\n          if (!roomState.userIdMap[uid]) return;\n          if (!isImageData(data)) return;\n          const index = copied.findIndex((item) => item.userId === uid);\n          if (index === -1) {\n            copied.push(data);\n            changed = true;\n          } else if (data.updated > copied[index].updated) {\n            copied[index] = data;\n            changed = true;\n          }\n        });\n        const tenMinAgo = Date.now() - 10 * 60 * 1000;\n        const filtered = copied.filter(\n          (item) =>\n            item.updated >= tenMinAgo && roomState.userIdMap[item.userId]\n        );\n        changed = changed || copied.length !== filtered.length;\n        if (changed) {\n          return filtered;\n        }\n        return prev;\n      });\n    };\n    map.observe(listener);\n    const unsub = subscribe(roomState.userIdMap, listener);\n    listener();\n    return () => {\n      unsub();\n      map.unobserve(listener);\n    };\n  }, [roomId, userId]);\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(\"faceImages\");\n    let didCleanup = false;\n    let timer: NodeJS.Timeout;\n    const loop = async () => {\n      if (didCleanup) return;\n      try {\n        const image = suspended ? avatar : await takePhoto(deviceId);\n        if (didCleanup) return;\n        setMyImage(image);\n        const info: FaceInfo = {\n          nickname,\n          message: statusMesg,\n          liveMode,\n          micOn,\n          speakerOn,\n        };\n        const data: ImageData = {\n          userId,\n          image,\n          info,\n          updated: Date.now(),\n        };\n        map.set(userId, data);\n      } catch (e) {\n        console.error(e);\n      }\n      timer = setTimeout(loop, 2 * 60 * 1000);\n    };\n    loop();\n    return () => {\n      didCleanup = true;\n      clearTimeout(timer);\n    };\n  }, [\n    roomId,\n    userId,\n    deviceId,\n    avatar,\n    nickname,\n    statusMesg,\n    suspended,\n    liveMode,\n    micOn,\n    speakerOn,\n  ]);\n\n  return {\n    myImage,\n    roomImages,\n  };\n};\n","export const getAudioStream = async (deviceId?: string) => {\n  const constraints = deviceId\n    ? {\n        audio: { deviceId },\n      }\n    : { audio: true };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getAudioTracks();\n  await track.applyConstraints({\n    echoCancellation: true,\n    echoCancellationType: { ideal: \"system\" },\n    noiseSuppression: { ideal: true },\n  } as MediaTrackConstraints);\n  const dispose = () => {\n    track.stop();\n  };\n  return {\n    stream,\n    dispose,\n  };\n};\n","import { useEffect, useState, useRef } from \"react\";\nimport { useSnapshot } from \"valtio\";\n\nimport { getFaceVideoStream } from \"../media/video\";\nimport { getAudioStream } from \"../media/audio\";\nimport { getRoomState } from \"../states/roomMap\";\n\nconst addTrackToStream = (\n  track: MediaStreamTrack,\n  stream: MediaStream | null,\n  disposeStream: (s: MediaStream) => void\n) => {\n  const newStream = stream || new MediaStream();\n  newStream.addTrack(track);\n  newStream.dispatchEvent(new MediaStreamTrackEvent(\"addtrack\", { track }));\n  track.addEventListener(\"ended\", () => {\n    newStream.removeTrack(track);\n    if (newStream.getTracks().length === 0) {\n      disposeStream(newStream);\n    }\n  });\n  return newStream;\n};\n\nexport const useFaceVideos = (\n  roomId: string,\n  userId: string,\n  videoEnabled: boolean,\n  audioEnabled: boolean,\n  micOn: boolean,\n  videoDeviceId?: string,\n  audioDeviceId?: string,\n  uniqueMediaId?: string\n) => {\n  const videoType = `${uniqueMediaId || \"face\"}Video`;\n  const audioType = `${uniqueMediaId || \"face\"}Audio`;\n  const [faceStream, setFaceStream] = useState<MediaStream | null>(null);\n  const [faceStreamMap, setFaceStreamMap] = useState<{\n    [userId: string]: MediaStream;\n  }>({});\n\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const cleanup = () => {\n      isMounted.current = false;\n    };\n    return cleanup;\n  }, []);\n\n  const onTrack = ([uid, track]: [string, MediaStreamTrack]) => {\n    if (track.readyState === \"ended\") return;\n    if (faceStreamMap[uid]?.getTracks().includes(track)) return;\n    const disposeStream = (s: MediaStream) => {\n      if (isMounted.current) {\n        setFaceStreamMap((prev) => {\n          const { [uid]: oldStream, ...rest } = prev;\n          if (oldStream === s) {\n            return rest;\n          }\n          return prev;\n        });\n      }\n    };\n    setFaceStreamMap((prev) => {\n      const stream = prev[uid];\n      const newStream = addTrackToStream(track, stream, disposeStream);\n      if (stream === newStream) {\n        return prev;\n      }\n      return { ...prev, [uid]: newStream };\n    });\n  };\n\n  const trackMap = useSnapshot(getRoomState(roomId, userId).trackMap);\n  Object.entries(trackMap[videoType] || {}).forEach(onTrack);\n  Object.entries(trackMap[audioType] || {}).forEach(onTrack);\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    let cleanup: (() => void) | null | false = null;\n    if (videoEnabled) {\n      (async () => {\n        const {\n          stream: videoStream,\n          dispose: disposeVideo,\n        } = await getFaceVideoStream(videoDeviceId);\n        const [videoTrack] = videoStream.getVideoTracks();\n        roomState.addMediaType(videoType);\n        roomState.addTrack(videoType, videoTrack);\n        const disposeStream = (s: MediaStream) => {\n          if (isMounted.current) {\n            setFaceStream((prev) => (prev === s ? null : prev));\n          }\n        };\n        setFaceStream((prev) =>\n          addTrackToStream(videoTrack, prev, disposeStream)\n        );\n        const dispose = () => {\n          roomState.removeMediaType(videoType);\n          roomState.removeTrack(videoType);\n          disposeVideo();\n          // XXX we need to manually dispatch ended event, why?\n          videoTrack.dispatchEvent(new Event(\"ended\"));\n        };\n        if (cleanup === false) {\n          dispose();\n        } else {\n          cleanup = dispose;\n        }\n      })();\n    }\n    return () => {\n      if (cleanup) cleanup();\n      cleanup = false;\n    };\n  }, [roomId, userId, videoEnabled, videoDeviceId, videoType]);\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    let cleanup: (() => void) | null | false = null;\n    if (audioEnabled) {\n      (async () => {\n        const {\n          stream: audioStream,\n          dispose: disposeAudio,\n        } = await getAudioStream(audioDeviceId);\n        const [audioTrack] = audioStream.getAudioTracks();\n        roomState.addMediaType(audioType);\n        roomState.addTrack(audioType, audioTrack);\n        const disposeStream = (s: MediaStream) => {\n          if (isMounted.current) {\n            setFaceStream((prev) => (prev === s ? null : prev));\n          }\n        };\n        setFaceStream((prev) =>\n          addTrackToStream(audioTrack, prev, disposeStream)\n        );\n        const dispose = () => {\n          roomState.removeMediaType(audioType);\n          roomState.removeTrack(audioType);\n          disposeAudio();\n          // XXX we need to manually dispatch ended event, why?\n          audioTrack.dispatchEvent(new Event(\"ended\"));\n        };\n        if (cleanup === false) {\n          dispose();\n        } else {\n          cleanup = dispose;\n        }\n      })();\n    }\n    return () => {\n      if (cleanup) cleanup();\n      cleanup = false;\n    };\n  }, [roomId, userId, audioEnabled, audioDeviceId, audioType]);\n\n  useEffect(() => {\n    if (faceStream) {\n      faceStream.getAudioTracks().forEach((track) => {\n        const audioTrack = track;\n        audioTrack.enabled = micOn;\n      });\n      const onaddtrack = (event: MediaStreamTrackEvent) => {\n        const { track } = event;\n        if (track.kind === \"audio\") {\n          track.enabled = micOn;\n        }\n      };\n      faceStream.addEventListener(\"addtrack\", onaddtrack);\n      return () => {\n        faceStream.removeEventListener(\"addtrack\", onaddtrack);\n      };\n    }\n    return undefined;\n  }, [faceStream, micOn]);\n\n  return { faceStream, faceStreamMap };\n};\n","import React from \"react\";\n\nimport \"./Loading.css\";\n\nexport const Loading = React.memo(() => (\n  <div className=\"Loading-container\">\n    <div className=\"loader\">\n      <div>Loading...</div>\n    </div>\n  </div>\n));\n"],"sourceRoot":""}