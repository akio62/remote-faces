{"version":3,"sources":["utils/types.ts","states/roomMap.ts","hooks/useGatherArea.ts","media/capture.ts","hooks/useFaceImages.ts","media/audio.ts","hooks/useFaceVideos.ts","components/RegionEditor.tsx","utils/excalidraw.ts","components/LinkOpener.tsx","components/Loading.tsx","components/FaceCard.tsx","components/FaceList.tsx","components/GatherArea.tsx","components/SingleRoom.tsx","utils/sleep.ts","media/video.ts","utils/emoji.ts"],"names":["isObject","x","hasStringProp","prop","hasObjectProp","roomMap","Map","getRoomState","roomId","userId","key","has","state","addMediaType","type","a","acceptingMediaTypes","includes","console","log","push","roomPromise","acceptMediaTypes","snapshot","removeMediaType","index","indexOf","splice","addTrack","track","removeTrack","dispose","proxy","networkStatusList","userIdMap","ydoc","ref","Y","trackMap","on","update","base64","btoa","String","fromCharCode","then","room","broadcastData","ydocUpdate","createRoom","status","unshift","length","pop","peerIndex","data","sendData","info","binaryString","atob","Uint8Array","map","call","c","charCodeAt","mediaType","addEventListener","createRoomState","set","get","ROOM_STATE_KEY","captureImage","stream","ImageCapture","imageCapture","sleep","takePhoto","blob","createImageBitmap","srcImg","grabFrame","srcW","width","srcH","height","video","document","createElement","autoplay","setAttribute","style","display","position","bottom","body","appendChild","removeChild","srcObject","videoWidth","videoHeight","deviceId","constraints","navigator","mediaDevices","getUserMedia","getVideoTracks","canvas","ctx","getContext","dstW","dstH","ratio","Math","max","min","y","drawImage","stop","toDataURL","isImageData","image","nickname","message","liveMode","micOn","speakerOn","isFaceInfo","updated","useFaceImages","avatar","statusMesg","suspended","useState","myImage","setMyImage","roomImages","setRoomImages","useEffect","roomState","getMap","listener","prev","copied","changed","forEach","uid","findIndex","item","tenMinAgo","Date","now","filtered","filter","observe","unsub","subscribe","unobserve","timer","didCleanup","loop","error","setTimeout","clearTimeout","getAudioStream","audio","getAudioTracks","applyConstraints","echoCancellation","echoCancellationType","ideal","noiseSuppression","addTrackToStream","disposeStream","newStream","MediaStream","dispatchEvent","MediaStreamTrackEvent","getTracks","RegionEditor","React","memo","regionId","setRegionId","setType","left","setLeft","top","setTop","setWidth","setHeight","zIndex","setZIndex","background","setBackground","border","setBorder","iframe","setIframe","allRegionData","setAllRegionData","className","value","onChange","e","target","Number","onClick","size","addRegion","disabled","JSON","stringify","toJSON","loadAllRegionData","Object","entries","parse","generateExcalidrawURL","id","slice","importCryptoKey","ROOM_ID_PREFIX_LEN","imported","window","crypto","subtle","exportKey","k","LinkOpener","excalidrawUrl","setExcalidrawUrl","appLink","location","href","replace","title","readOnly","rel","Loading","FaceCard","setStatusMesg","obsoleted","muted","toggleSuspended","firstStatusMesgChar","emoji","fromCodePoint","isEmoji","opacity","videoEle","autoPlay","playsInline","src","BLANK_IMAGE","alt","mesg","prompt","FaceList","videoDeviceId","twoMinAgo","MomentaryChat","lazy","MediaShare","GoBoard","Region","highlight","boxShadow","undefined","frameBorder","fallback","SuspenseFallback","uniqueId","Avatar","setPosition","registerOnMouseDrag","isMyself","onMouseDown","preventDefault","currentTarget","offset","clientX","clientY","GatherArea","audioDeviceId","avatarMap","setAvatarMap","parseInt","myAvatar","setMyAvatar","b","obj","isAvatarData","keys","dataToBroadcast","useRef","current","regionMap","setRegionMap","next","isRegionData","updateRegion","useCallback","useGatherArea","onMouseDragRef","onMouseMove","activeMeetingRegionId","sort","find","videoEnabled","audioEnabled","uniqueMediaId","videoType","audioType","faceStream","setFaceStream","faceStreamMap","setFaceStreamMap","isMounted","onTrack","readyState","s","oldStream","rest","useSnapshot","cleanup","getFaceVideoStream","videoStream","disposeVideo","videoTrack","Event","audioStream","disposeAudio","audioTrack","enabled","onaddtrack","event","kind","removeEventListener","useFaceVideos","showModal","setShowModal","onMouseUp","regionData","avatarData","imageData","SingleRoom","singleRoomState","config","setRoomIdToUrl","toggleConfigTakePhoto","ms","Promise","resolve","getVideoStream","frameRate","exact","EmojiPicker","Picker","getEmojiDataFromNative"],"mappings":"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","file":"static/js/9.9efdd368.chunk.js","sourcesContent":["export const isObject = (x: unknown): x is Record<string, unknown> =>\n  typeof x === \"object\" && x !== null;\n\nexport const hasStringProp = <\n  Obj extends Record<string, unknown>,\n  Prop extends string\n>(\n  x: Obj,\n  prop: Prop\n): x is Obj & Record<Prop, string> =>\n  typeof (x as Record<Prop, unknown>)[prop] === \"string\";\n\nexport const hasObjectProp = <\n  Obj extends Record<string, unknown>,\n  Prop extends string\n>(\n  x: Obj,\n  prop: Prop\n): x is Obj & Record<Prop, Record<string, unknown>> =>\n  isObject((x as Record<Prop, unknown>)[prop]);\n\nexport type ReturnPromiseType<\n  F extends (...args: any) => any\n> = ReturnType<F> extends Promise<infer T> ? T : never;\n","import { proxy, snapshot, ref } from \"valtio\";\nimport * as Y from \"yjs\";\n\nimport { PeerInfo, createRoom, NetworkStatus } from \"../network/room\";\n\ntype RoomState = {\n  networkStatusList: NetworkStatus[];\n  userIdMap: { [userId: string]: number }; // peerIndex\n  ydoc: Y.Doc;\n  acceptingMediaTypes: string[];\n  trackMap: {\n    [mediaType: string]: {\n      [userId: string]: MediaStreamTrack;\n    };\n  };\n  addMediaType: (type: string) => Promise<void>;\n  removeMediaType: (type: string) => Promise<void>;\n  addTrack: (type: string, track: MediaStreamTrack) => Promise<void>;\n  removeTrack: (type: string) => Promise<void>;\n  dispose: () => Promise<void>;\n};\n\nconst createRoomState = (roomId: string, userId: string) => {\n  const addMediaType = async (type: string) => {\n    if (state.acceptingMediaTypes.includes(type)) {\n      console.log(\"media type already added\", type);\n      return;\n    }\n    state.acceptingMediaTypes.push(type);\n    const room = await roomPromise;\n    room.acceptMediaTypes(snapshot(state.acceptingMediaTypes));\n  };\n  const removeMediaType = async (type: string) => {\n    const index = state.acceptingMediaTypes.indexOf(type);\n    if (index === -1) {\n      console.log(\"media type already added\", type);\n      return;\n    }\n    state.acceptingMediaTypes.splice(index, 1);\n    const room = await roomPromise;\n    room.acceptMediaTypes(snapshot(state.acceptingMediaTypes));\n  };\n  const addTrack = async (type: string, track: MediaStreamTrack) => {\n    const room = await roomPromise;\n    room.addTrack(type, track);\n  };\n  const removeTrack = async (type: string) => {\n    const room = await roomPromise;\n    room.removeTrack(type);\n  };\n  const dispose = async () => {\n    const room = await roomPromise;\n    room.dispose();\n  };\n  const state = proxy<RoomState>({\n    networkStatusList: [],\n    userIdMap: {},\n    ydoc: ref(new Y.Doc()),\n    acceptingMediaTypes: [],\n    trackMap: {},\n    addMediaType,\n    removeMediaType,\n    addTrack,\n    removeTrack,\n    dispose,\n  });\n  const updateNetworkStatus = (status: NetworkStatus) => {\n    console.log(\"[network status]\", status);\n    state.networkStatusList.unshift(status);\n    if (state.networkStatusList.length > 10) {\n      state.networkStatusList.pop();\n    }\n    if (status?.type === \"CONNECTION_CLOSED\") {\n      // FIXME somehow this might be causing fatal behavior\n      /*\n      Object.entries(state.userIdMap).forEach(([uid, idx]) => {\n        if (idx === status.peerIndex) {\n          delete state.userIdMap[uid];\n        }\n      });\n      */\n    }\n  };\n  const notifyNewPeer = (peerIndex: number) => {\n    const update = Y.encodeStateAsUpdate(state.ydoc);\n    const base64 = btoa(String.fromCharCode(...update));\n    const data = { ydocUpdate: base64 };\n    roomPromise.then((room) => {\n      // XXX this does not scale\n      room.sendData(data, peerIndex);\n    });\n  };\n  const receiveData = (data: any, info: PeerInfo) => {\n    state.userIdMap[info.userId] = info.peerIndex;\n    if (data?.ydocUpdate) {\n      const binaryString = atob(data.ydocUpdate);\n      const update = new Uint8Array(\n        ([].map.call(binaryString, (c: string) =>\n          c.charCodeAt(0)\n        ) as unknown) as ArrayBufferLike\n      );\n      Y.applyUpdate(state.ydoc, update);\n    }\n  };\n  state.ydoc.on(\"update\", (update: Uint8Array) => {\n    const base64 = btoa(String.fromCharCode(...update));\n    roomPromise.then((room) => {\n      room.broadcastData({ ydocUpdate: base64 });\n    });\n  });\n  const receiveTrack = (\n    mediaType: string,\n    track: MediaStreamTrack,\n    info: PeerInfo\n  ) => {\n    if (!state.trackMap[mediaType]) {\n      state.trackMap[mediaType] = {};\n    }\n    track.addEventListener(\"ended\", () => {\n      if (state.trackMap[mediaType][info.userId] === track) {\n        delete state.trackMap[mediaType][info.userId];\n      }\n    });\n    state.trackMap[mediaType][info.userId] = ref(track);\n  };\n  const roomPromise = createRoom(\n    roomId,\n    userId,\n    updateNetworkStatus,\n    notifyNewPeer,\n    receiveData,\n    receiveTrack\n  );\n  return state;\n};\n\nconst roomMap = new Map<string, RoomState>();\n\nexport const getRoomState = (roomId: string, userId: string) => {\n  const key = `${roomId}:${userId}`;\n  if (!roomMap.has(key)) {\n    const state = createRoomState(roomId, userId);\n    roomMap.set(key, state);\n  }\n  return roomMap.get(key) as RoomState;\n};\n\nexport const disposeRoomState = (roomId: string, userId: string) => {\n  const key = `${roomId}:${userId}`;\n  const state = roomMap.get(key);\n  if (state) {\n    roomMap.delete(key);\n    state.dispose();\n  }\n};\n","import { useCallback, useState, useRef, useEffect } from \"react\";\nimport { subscribe } from \"valtio\";\n\nimport { getRoomState } from \"../states/roomMap\";\n\nconst getInitialPosition = (uid: string): [number, number] => [\n  parseInt(uid.slice(0, 2), 16) / 2 + 50,\n  parseInt(uid.slice(2, 4), 16) / 2 + 30,\n];\n\nexport type AvatarData = {\n  position: [left: number, top: number];\n};\n\nconst isAvatarData = (x: unknown): x is AvatarData => {\n  try {\n    const obj = x as AvatarData;\n    if (\n      typeof obj.position[0] === \"number\" &&\n      typeof obj.position[1] === \"number\"\n    ) {\n      return true;\n    }\n    return false;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isEqualAvatarData = (a: AvatarData, b: AvatarData) =>\n  a.position[0] === b.position[0] && a.position[1] === b.position[1];\n\nexport type RegionData = {\n  type: \"background\" | \"meeting\" | \"chat\" | \"media\" | \"goboard\";\n  position: [left: number, top: number];\n  size: [width: number, height: number];\n  zIndex?: number;\n  background?: string;\n  border?: string;\n  iframe?: string;\n};\n\nconst isRegionData = (x: unknown): x is RegionData => {\n  try {\n    const obj = x as RegionData;\n    if (\n      [\"background\", \"meeting\", \"chat\", \"media\", \"goboard\"].includes(\n        obj.type\n      ) &&\n      typeof obj.position[0] === \"number\" &&\n      typeof obj.position[1] === \"number\" &&\n      typeof obj.size[0] === \"number\" &&\n      typeof obj.size[1] === \"number\" &&\n      (typeof obj.zIndex === \"undefined\" || typeof obj.zIndex === \"number\") &&\n      (typeof obj.background === \"undefined\" ||\n        typeof obj.background === \"string\") &&\n      (typeof obj.border === \"undefined\" || typeof obj.border === \"string\") &&\n      (typeof obj.iframe === \"undefined\" || typeof obj.iframe === \"string\")\n    ) {\n      return true;\n    }\n    return false;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isEqualRegionData = (a: RegionData, b: RegionData) =>\n  a.type === b.type &&\n  a.position[0] === b.position[0] &&\n  a.position[1] === b.position[1] &&\n  a.size[0] === b.size[0] &&\n  a.size[1] === b.size[1] &&\n  a.zIndex === b.zIndex &&\n  a.background === b.background &&\n  a.border === b.border &&\n  a.iframe === b.iframe;\n\nexport type AvatarMap = {\n  [userId: string]: AvatarData;\n};\n\nexport type RegionMap = {\n  [regionId: string]: RegionData;\n};\n\nexport const ROOM_STATE_KEY = \"gatherRegionMap\";\n\nexport const useGatherArea = (roomId: string, userId: string) => {\n  const [avatarMap, setAvatarMap] = useState<AvatarMap>({});\n  const [myAvatar, setMyAvatar] = useState<AvatarData>({\n    position: getInitialPosition(userId),\n  });\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(\"gatherAvatarMap\");\n    const listener = () => {\n      setAvatarMap((prev) => {\n        const copied = { ...prev };\n        let changed = false;\n        map.forEach((data, uid) => {\n          if (uid === userId) return;\n          if (!roomState.userIdMap[uid]) return;\n          if (!isAvatarData(data)) return;\n          if (!copied[uid]) {\n            copied[uid] = data;\n            changed = true;\n          } else if (!isEqualAvatarData(data, copied[uid])) {\n            copied[uid] = data;\n            changed = true;\n          }\n        });\n        Object.keys(copied).forEach((uid) => {\n          if (!roomState.userIdMap[uid]) {\n            delete copied[uid];\n            changed = true;\n          }\n        });\n        if (changed) {\n          return copied;\n        }\n        return prev;\n      });\n    };\n    map.observe(listener);\n    const unsub = subscribe(roomState.userIdMap, listener);\n    listener();\n    return () => {\n      unsub();\n      map.unobserve(listener);\n    };\n  }, [roomId, userId]);\n\n  const dataToBroadcast = useRef<AvatarData>();\n  useEffect(() => {\n    if (!myAvatar) return;\n    if (dataToBroadcast.current) {\n      dataToBroadcast.current = myAvatar;\n    } else {\n      dataToBroadcast.current = myAvatar;\n      setTimeout(() => {\n        const roomState = getRoomState(roomId, userId);\n        const map = roomState.ydoc.getMap(\"gatherAvatarMap\");\n        map.set(userId, dataToBroadcast.current);\n        dataToBroadcast.current = undefined;\n      }, 500);\n    }\n  }, [roomId, userId, myAvatar]);\n\n  const [regionMap, setRegionMap] = useState<RegionMap>({});\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(ROOM_STATE_KEY);\n    const listener = () => {\n      setRegionMap((prev) => {\n        const next: RegionMap = {};\n        map.forEach((data, id) => {\n          if (!isRegionData(data)) return;\n          if (prev[id] && isEqualRegionData(prev[id], data)) {\n            next[id] = prev[id];\n          } else {\n            next[id] = data;\n          }\n        });\n        return next;\n      });\n    };\n    map.observe(listener);\n    listener();\n    return () => {\n      map.unobserve(listener);\n    };\n  }, [roomId, userId]);\n\n  const updateRegion = useCallback(\n    (id: string, data: RegionData) => {\n      const roomState = getRoomState(roomId, userId);\n      const map = roomState.ydoc.getMap(ROOM_STATE_KEY);\n      map.set(id, data);\n    },\n    [roomId, userId]\n  );\n\n  return {\n    avatarMap,\n    myAvatar,\n    setMyAvatar,\n    regionMap,\n    updateRegion,\n  };\n};\n","import { sleep } from \"../utils/sleep\";\n\nconst captureImage = async (stream: MediaStream, track: MediaStreamTrack) => {\n  if (typeof ImageCapture !== \"undefined\") {\n    const imageCapture = new ImageCapture(track);\n    await sleep(2000);\n    let srcImg: ImageBitmap;\n    try {\n      const blob = await imageCapture.takePhoto();\n      srcImg = await createImageBitmap(blob);\n    } catch (e) {\n      srcImg = await imageCapture.grabFrame();\n    }\n    const srcW = srcImg.width;\n    const srcH = srcImg.height;\n    return { srcImg, srcW, srcH };\n  }\n  const video = document.createElement(\"video\");\n  video.autoplay = true;\n  video.setAttribute(\"playsinline\", \"\");\n  video.style.display = \"block\";\n  video.style.width = \"1px\";\n  video.style.height = \"1px\";\n  video.style.position = \"absolute\";\n  video.style.bottom = \"0\";\n  document.body.appendChild(video);\n  const dispose = () => {\n    document.body.removeChild(video);\n  };\n  video.srcObject = stream;\n  await sleep(2000);\n  const srcImg = video;\n  const srcW = video.videoWidth;\n  const srcH = video.videoHeight;\n  return { srcImg, srcW, srcH, dispose };\n};\n\nexport const takePhoto = async (deviceId?: string) => {\n  const constraints = deviceId\n    ? {\n        video: { deviceId },\n      }\n    : { video: true };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getVideoTracks();\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n  const dstW = 72;\n  const dstH = 72;\n  canvas.width = dstW;\n  canvas.height = dstH;\n  const { srcImg, srcW, srcH, dispose } = await captureImage(stream, track);\n  const ratio = Math.max(dstW / srcW, dstH / srcH);\n  const width = Math.min(srcW, dstW / ratio);\n  const height = Math.min(srcH, dstH / ratio);\n  const x = (srcW - width) / 2;\n  const y = (srcH - height) / 2;\n  ctx.drawImage(srcImg, x, y, width, height, 0, 0, dstW, dstH);\n  if (dispose) {\n    dispose();\n  }\n  track.stop();\n  return canvas.toDataURL(\"image/jpeg\");\n};\n","import { useEffect, useState } from \"react\";\nimport { subscribe } from \"valtio\";\n\nimport { isObject } from \"../utils/types\";\nimport { takePhoto } from \"../media/capture\";\nimport { getRoomState } from \"../states/roomMap\";\n\ntype ImageUrl = string;\n\ntype FaceInfo = {\n  nickname: string;\n  message: string;\n  liveMode: boolean;\n  micOn: boolean;\n  speakerOn: boolean;\n};\n\nconst isFaceInfo = (x: unknown): x is FaceInfo =>\n  isObject(x) &&\n  typeof (x as { nickname: unknown }).nickname === \"string\" &&\n  typeof (x as { message: unknown }).message === \"string\" &&\n  typeof (x as { liveMode: unknown }).liveMode === \"boolean\" &&\n  typeof (x as { micOn: unknown }).micOn === \"boolean\" &&\n  typeof (x as { speakerOn: unknown }).speakerOn === \"boolean\";\n\ntype ImageData = {\n  userId: string;\n  image: ImageUrl;\n  info: FaceInfo;\n  updated: number; // in milliseconds\n};\n\nconst isImageData = (x: unknown): x is ImageData =>\n  isObject(x) &&\n  typeof (x as { image: unknown }).image === \"string\" &&\n  isFaceInfo((x as { info: unknown }).info) &&\n  typeof (x as { updated: unknown }).updated === \"number\";\n\nexport const useFaceImages = (\n  roomId: string,\n  userId: string,\n  avatar: string,\n  nickname: string,\n  statusMesg: string,\n  suspended: boolean,\n  liveMode: boolean,\n  micOn: boolean,\n  speakerOn: boolean,\n  deviceId?: string\n) => {\n  const [myImage, setMyImage] = useState<ImageUrl>();\n  const [roomImages, setRoomImages] = useState<ImageData[]>([]);\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(\"faceImages\");\n    const listener = () => {\n      setRoomImages((prev) => {\n        const copied = [...prev];\n        let changed = false;\n        map.forEach((data, uid) => {\n          if (uid === userId) return;\n          if (!roomState.userIdMap[uid]) return;\n          if (!isImageData(data)) return;\n          const index = copied.findIndex((item) => item.userId === uid);\n          if (index === -1) {\n            copied.push(data);\n            changed = true;\n          } else if (data.updated > copied[index].updated) {\n            copied[index] = data;\n            changed = true;\n          }\n        });\n        const tenMinAgo = Date.now() - 10 * 60 * 1000;\n        const filtered = copied.filter(\n          (item) =>\n            item.updated >= tenMinAgo && roomState.userIdMap[item.userId]\n        );\n        changed = changed || copied.length !== filtered.length;\n        if (changed) {\n          return filtered;\n        }\n        return prev;\n      });\n    };\n    map.observe(listener);\n    const unsub = subscribe(roomState.userIdMap, listener);\n    listener();\n    return () => {\n      unsub();\n      map.unobserve(listener);\n    };\n  }, [roomId, userId]);\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(\"faceImages\");\n    let didCleanup = false;\n    let timer: NodeJS.Timeout;\n    const loop = async () => {\n      if (didCleanup) return;\n      try {\n        const image = suspended ? avatar : await takePhoto(deviceId);\n        if (didCleanup) return;\n        setMyImage(image);\n        const info: FaceInfo = {\n          nickname,\n          message: statusMesg,\n          liveMode,\n          micOn,\n          speakerOn,\n        };\n        const data: ImageData = {\n          userId,\n          image,\n          info,\n          updated: Date.now(),\n        };\n        map.set(userId, data);\n      } catch (e) {\n        console.error(e);\n      }\n      timer = setTimeout(loop, 2 * 60 * 1000);\n    };\n    loop();\n    return () => {\n      didCleanup = true;\n      clearTimeout(timer);\n    };\n  }, [\n    roomId,\n    userId,\n    deviceId,\n    avatar,\n    nickname,\n    statusMesg,\n    suspended,\n    liveMode,\n    micOn,\n    speakerOn,\n  ]);\n\n  return {\n    myImage,\n    roomImages,\n  };\n};\n","export const getAudioStream = async (deviceId?: string) => {\n  const constraints = deviceId\n    ? {\n        audio: { deviceId },\n      }\n    : { audio: true };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getAudioTracks();\n  await track.applyConstraints({\n    echoCancellation: true,\n    echoCancellationType: { ideal: \"system\" },\n    noiseSuppression: { ideal: true },\n  } as MediaTrackConstraints);\n  const dispose = () => {\n    track.stop();\n  };\n  return {\n    stream,\n    dispose,\n  };\n};\n","import { useEffect, useState, useRef } from \"react\";\nimport { useSnapshot } from \"valtio\";\n\nimport { getFaceVideoStream } from \"../media/video\";\nimport { getAudioStream } from \"../media/audio\";\nimport { getRoomState } from \"../states/roomMap\";\n\nconst addTrackToStream = (\n  track: MediaStreamTrack,\n  stream: MediaStream | null,\n  disposeStream: (s: MediaStream) => void\n) => {\n  const newStream = stream || new MediaStream();\n  newStream.addTrack(track);\n  newStream.dispatchEvent(new MediaStreamTrackEvent(\"addtrack\", { track }));\n  track.addEventListener(\"ended\", () => {\n    newStream.removeTrack(track);\n    if (newStream.getTracks().length === 0) {\n      disposeStream(newStream);\n    }\n  });\n  return newStream;\n};\n\nexport const useFaceVideos = (\n  roomId: string,\n  userId: string,\n  videoEnabled: boolean,\n  audioEnabled: boolean,\n  micOn: boolean,\n  videoDeviceId?: string,\n  audioDeviceId?: string,\n  uniqueMediaId?: string\n) => {\n  const videoType = `${uniqueMediaId || \"face\"}Video`;\n  const audioType = `${uniqueMediaId || \"face\"}Audio`;\n  const [faceStream, setFaceStream] = useState<MediaStream | null>(null);\n  const [faceStreamMap, setFaceStreamMap] = useState<{\n    [userId: string]: MediaStream;\n  }>({});\n\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const cleanup = () => {\n      isMounted.current = false;\n    };\n    return cleanup;\n  }, []);\n\n  const onTrack = ([uid, track]: [string, MediaStreamTrack]) => {\n    if (track.readyState === \"ended\") return;\n    if (faceStreamMap[uid]?.getTracks().includes(track)) return;\n    const disposeStream = (s: MediaStream) => {\n      if (isMounted.current) {\n        setFaceStreamMap((prev) => {\n          const { [uid]: oldStream, ...rest } = prev;\n          if (oldStream === s) {\n            return rest;\n          }\n          return prev;\n        });\n      }\n    };\n    setFaceStreamMap((prev) => {\n      const stream = prev[uid];\n      const newStream = addTrackToStream(track, stream, disposeStream);\n      if (stream === newStream) {\n        return prev;\n      }\n      return { ...prev, [uid]: newStream };\n    });\n  };\n\n  const trackMap = useSnapshot(getRoomState(roomId, userId).trackMap);\n  Object.entries(trackMap[videoType] || {}).forEach(onTrack);\n  Object.entries(trackMap[audioType] || {}).forEach(onTrack);\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    let cleanup: (() => void) | null | false = null;\n    if (videoEnabled) {\n      (async () => {\n        const {\n          stream: videoStream,\n          dispose: disposeVideo,\n        } = await getFaceVideoStream(videoDeviceId);\n        const [videoTrack] = videoStream.getVideoTracks();\n        roomState.addMediaType(videoType);\n        roomState.addTrack(videoType, videoTrack);\n        const disposeStream = (s: MediaStream) => {\n          if (isMounted.current) {\n            setFaceStream((prev) => (prev === s ? null : prev));\n          }\n        };\n        setFaceStream((prev) =>\n          addTrackToStream(videoTrack, prev, disposeStream)\n        );\n        const dispose = () => {\n          roomState.removeMediaType(videoType);\n          roomState.removeTrack(videoType);\n          disposeVideo();\n          // XXX we need to manually dispatch ended event, why?\n          videoTrack.dispatchEvent(new Event(\"ended\"));\n        };\n        if (cleanup === false) {\n          dispose();\n        } else {\n          cleanup = dispose;\n        }\n      })();\n    }\n    return () => {\n      if (cleanup) cleanup();\n      cleanup = false;\n    };\n  }, [roomId, userId, videoEnabled, videoDeviceId, videoType]);\n\n  useEffect(() => {\n    const roomState = getRoomState(roomId, userId);\n    let cleanup: (() => void) | null | false = null;\n    if (audioEnabled) {\n      (async () => {\n        const {\n          stream: audioStream,\n          dispose: disposeAudio,\n        } = await getAudioStream(audioDeviceId);\n        const [audioTrack] = audioStream.getAudioTracks();\n        roomState.addMediaType(audioType);\n        roomState.addTrack(audioType, audioTrack);\n        const disposeStream = (s: MediaStream) => {\n          if (isMounted.current) {\n            setFaceStream((prev) => (prev === s ? null : prev));\n          }\n        };\n        setFaceStream((prev) =>\n          addTrackToStream(audioTrack, prev, disposeStream)\n        );\n        const dispose = () => {\n          roomState.removeMediaType(audioType);\n          roomState.removeTrack(audioType);\n          disposeAudio();\n          // XXX we need to manually dispatch ended event, why?\n          audioTrack.dispatchEvent(new Event(\"ended\"));\n        };\n        if (cleanup === false) {\n          dispose();\n        } else {\n          cleanup = dispose;\n        }\n      })();\n    }\n    return () => {\n      if (cleanup) cleanup();\n      cleanup = false;\n    };\n  }, [roomId, userId, audioEnabled, audioDeviceId, audioType]);\n\n  useEffect(() => {\n    if (faceStream) {\n      faceStream.getAudioTracks().forEach((track) => {\n        const audioTrack = track;\n        audioTrack.enabled = micOn;\n      });\n      const onaddtrack = (event: MediaStreamTrackEvent) => {\n        const { track } = event;\n        if (track.kind === \"audio\") {\n          track.enabled = micOn;\n        }\n      };\n      faceStream.addEventListener(\"addtrack\", onaddtrack);\n      return () => {\n        faceStream.removeEventListener(\"addtrack\", onaddtrack);\n      };\n    }\n    return undefined;\n  }, [faceStream, micOn]);\n\n  return { faceStream, faceStreamMap };\n};\n","import React, { useState } from \"react\";\n\nimport \"./RegionEditor.css\";\nimport { getRoomState } from \"../states/roomMap\";\nimport { ROOM_STATE_KEY, RegionData } from \"../hooks/useGatherArea\";\n\nexport const RegionEditor = React.memo<{\n  roomId: string;\n  userId: string;\n}>(({ roomId, userId }) => {\n  const [regionId, setRegionId] = useState(\"\");\n  const [type, setType] = useState<RegionData[\"type\"]>(\"background\");\n  const [left, setLeft] = useState(100);\n  const [top, setTop] = useState(100);\n  const [width, setWidth] = useState(100);\n  const [height, setHeight] = useState(100);\n  const [zIndex, setZIndex] = useState(0);\n  const [background, setBackground] = useState(\"\");\n  const [border, setBorder] = useState(\"\");\n  const [iframe, setIframe] = useState(\"\");\n\n  const addRegion = () => {\n    const data: RegionData = {\n      type,\n      position: [left, top],\n      size: [width, height],\n      zIndex,\n      background,\n      border,\n      iframe,\n    };\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(ROOM_STATE_KEY);\n    map.set(regionId, data);\n  };\n\n  const [allRegionData, setAllRegionData] = useState<string | null>(null);\n\n  const loadAllRegionData = () => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(ROOM_STATE_KEY);\n    setAllRegionData(JSON.stringify(map.toJSON()));\n  };\n\n  const saveAllRegionData = () => {\n    const roomState = getRoomState(roomId, userId);\n    const map = roomState.ydoc.getMap(ROOM_STATE_KEY);\n    try {\n      Object.entries(JSON.parse(allRegionData || \"\")).forEach(\n        ([key, value]) => {\n          map.set(key, value);\n        }\n      );\n      setAllRegionData(null);\n    } catch (e) {\n      console.log(\"failed to save all region data\", e);\n    }\n  };\n\n  return (\n    <div className=\"RegionEditor-container\">\n      <h3>Region Editor</h3>\n      <label>\n        Region ID:{\" \"}\n        <input value={regionId} onChange={(e) => setRegionId(e.target.value)} />\n      </label>\n      <hr />\n      <label>\n        Type:{\" \"}\n        <select\n          value={type}\n          onChange={(e) => setType(e.target.value as RegionData[\"type\"])}\n        >\n          <option value=\"background\">Background</option>\n          <option value=\"meeting\">Meeting</option>\n          <option value=\"chat\">Chat</option>\n          <option value=\"media\">Media</option>\n          <option value=\"goboard\">Go Board</option>\n        </select>\n      </label>\n      <hr />\n      <label>\n        Left:{\" \"}\n        <input\n          type=\"number\"\n          value={left}\n          onChange={(e) => setLeft(Number(e.target.value))}\n        />\n      </label>\n      <label>\n        Top:{\" \"}\n        <input\n          type=\"number\"\n          value={top}\n          onChange={(e) => setTop(Number(e.target.value))}\n        />\n      </label>\n      <hr />\n      <label>\n        Width:{\" \"}\n        <input\n          type=\"number\"\n          value={width}\n          onChange={(e) => setWidth(Number(e.target.value))}\n        />\n      </label>\n      <label>\n        Height:{\" \"}\n        <input\n          type=\"number\"\n          value={height}\n          onChange={(e) => setHeight(Number(e.target.value))}\n        />\n      </label>\n      <hr />\n      {type !== \"chat\" && (\n        <label>\n          zIndex:{\" \"}\n          <input\n            type=\"number\"\n            value={zIndex}\n            max={0}\n            onChange={(e) => setZIndex(Number(e.target.value))}\n          />\n        </label>\n      )}\n      <hr />\n      <label>\n        Background:{\" \"}\n        <input\n          value={background}\n          onChange={(e) => setBackground(e.target.value)}\n        />\n      </label>\n      <label>\n        Border:{\" \"}\n        <input value={border} onChange={(e) => setBorder(e.target.value)} />\n      </label>\n      <hr />\n      <label>\n        Iframe:{\" \"}\n        <input value={iframe} onChange={(e) => setIframe(e.target.value)} />\n      </label>\n      <hr />\n      <button type=\"button\" onClick={() => addRegion()} disabled={!regionId}>\n        Add Region\n      </button>\n      <hr />\n      <button\n        type=\"button\"\n        className=\"RegionEditor-toggle\"\n        onClick={() => {\n          if (allRegionData) {\n            setAllRegionData(null);\n          } else {\n            loadAllRegionData();\n          }\n        }}\n      >\n        Import/Export {allRegionData ? <>&#9660;</> : <>&#9654;</>}\n      </button>\n      {!!allRegionData && (\n        <div>\n          <label>\n            All Region Data:{\" \"}\n            <textarea\n              value={allRegionData}\n              onChange={(e) => setAllRegionData(e.target.value)}\n            />\n          </label>\n          <button type=\"button\" onClick={saveAllRegionData}>\n            Replace (Be careful)\n          </button>\n        </div>\n      )}\n    </div>\n  );\n});\n","import { ROOM_ID_PREFIX_LEN } from \"../network/room\";\nimport { importCryptoKey } from \"./crypto\";\n\nexport const generateExcalidrawURL = async (roomId: string) => {\n  const id = roomId.slice(0, 20);\n  const imported = await importCryptoKey(roomId.slice(ROOM_ID_PREFIX_LEN));\n  const key = (await window.crypto.subtle.exportKey(\"jwk\", imported)).k;\n  return `https://excalidraw.com/#room=${id},${key}`;\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport \"./LinkOpener.css\";\nimport { generateExcalidrawURL } from \"../utils/excalidraw\";\n\nexport const LinkOpener = React.memo<{\n  roomId: string;\n}>(({ roomId }) => {\n  const [excalidrawUrl, setExcalidrawUrl] = useState<string>();\n  useEffect(() => {\n    (async () => {\n      setExcalidrawUrl(await generateExcalidrawURL(roomId));\n    })();\n  }, [roomId]);\n\n  const appLink = `remote-faces://${window.location.href.replace(\n    /^https:\\/\\//,\n    \"\"\n  )}`;\n\n  return (\n    <div className=\"LinkOpener-container\">\n      <div>\n        <span title=\"Share this link with your colleagues\">Room Link: </span>\n        <input value={window.location.href} readOnly />\n      </div>\n      <div>\n        <a href={appLink} title=\"Open this link in the desktop app\">\n          Open App\n        </a>\n      </div>\n      <div>\n        <a href={excalidrawUrl} target=\"_blank\" rel=\"noreferrer\">\n          Open Excalidraw\n        </a>\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\n\nimport \"./Loading.css\";\n\nexport const Loading = React.memo(() => (\n  <div className=\"Loading-container\">\n    <div className=\"loader\">\n      <div>Loading...</div>\n    </div>\n  </div>\n));\n","import React from \"react\";\n\nimport \"./FaceCard.css\";\nimport { BLANK_IMAGE } from \"../media/imagePresets\";\nimport { isEmoji } from \"../utils/emoji\";\n\nexport const FaceCard = React.memo<{\n  image?: string;\n  nickname: string;\n  statusMesg: string;\n  setStatusMesg?: (mesg: string) => void;\n  obsoleted?: boolean;\n  liveMode: boolean;\n  stream?: MediaStream;\n  muted: boolean;\n  micOn: boolean;\n  speakerOn: boolean;\n  toggleSuspended?: () => void;\n  suspended?: boolean;\n}>(\n  ({\n    image,\n    nickname,\n    statusMesg,\n    setStatusMesg,\n    obsoleted,\n    liveMode,\n    stream,\n    muted,\n    micOn,\n    speakerOn,\n    toggleSuspended,\n    suspended,\n  }) => {\n    const firstStatusMesgChar: string | undefined = [...statusMesg][0];\n    let emoji = setStatusMesg ? String.fromCodePoint(0x1f4dd) : \"\";\n    if (firstStatusMesgChar) {\n      if (isEmoji(firstStatusMesgChar)) {\n        emoji = firstStatusMesgChar;\n      } else {\n        emoji = String.fromCodePoint(0x1f4ac);\n      }\n    }\n    const editStatusMesg = () => {\n      if (setStatusMesg) {\n        // eslint-disable-next-line no-alert\n        const mesg = window.prompt(\"Enter status message\");\n        if (mesg !== null) {\n          setStatusMesg(mesg);\n        }\n      }\n    };\n    return (\n      <div\n        className=\"FaceCard-container\"\n        style={{ opacity: obsoleted ? 0.2 : 1 }}\n      >\n        {liveMode && !obsoleted && stream ? (\n          <video\n            className=\"FaceCard-photo\"\n            ref={(videoEle) => {\n              if (videoEle && videoEle.srcObject !== stream) {\n                // eslint-disable-next-line no-param-reassign\n                videoEle.srcObject = stream;\n              }\n            }}\n            autoPlay\n            playsInline\n            muted={muted}\n          />\n        ) : (\n          <img\n            src={image || BLANK_IMAGE}\n            className=\"FaceCard-photo\"\n            alt=\"faceImage\"\n          />\n        )}\n        <div className=\"FaceCard-name\">{nickname}</div>\n        {setStatusMesg ? (\n          <button\n            type=\"button\"\n            className=\"FaceCard-mesg\"\n            title={statusMesg || \"(No status message)\"}\n            onClick={editStatusMesg}\n          >\n            {emoji}\n          </button>\n        ) : (\n          <div\n            className=\"FaceCard-mesg\"\n            title={statusMesg || \"(No status message)\"}\n          >\n            {emoji}\n          </div>\n        )}\n        {liveMode && !obsoleted && stream && (\n          <div className=\"FaceCard-live-indicator\" title=\"Live Mode On\">\n            &#9673;\n          </div>\n        )}\n        {liveMode && !obsoleted && !stream && (\n          <div className=\"FaceCard-live-indicator\" title=\"Live Mode Available\">\n            &#9678;\n          </div>\n        )}\n        {liveMode && !obsoleted && (\n          <div className=\"FaceCard-mic-speaker-icons\">\n            {micOn && <span title=\"Mic On\">&#x1F3A4;</span>}\n            {speakerOn && <span title=\"Speaker On\">&#x1F508;</span>}\n          </div>\n        )}\n        {!liveMode && toggleSuspended && (\n          <button\n            type=\"button\"\n            className=\"FaceCard-camera\"\n            onClick={toggleSuspended}\n            title={suspended ? \"Enable Camera\" : \"Disable Camera\"}\n          >\n            &#x1F4F7;\n            {suspended && (\n              <span className=\"FaceCard-camera-disabled\">&#10060;</span>\n            )}\n          </button>\n        )}\n      </div>\n    );\n  }\n);\n","import React from \"react\";\n\nimport \"./FaceList.css\";\nimport { Loading } from \"./Loading\";\nimport { useFaceImages } from \"../hooks/useFaceImages\";\nimport { FaceCard } from \"./FaceCard\";\n\nexport const FaceList = React.memo<{\n  roomId: string;\n  userId: string;\n  avatar: string;\n  nickname: string;\n  statusMesg: string;\n  setStatusMesg: (mesg: string) => void;\n  videoDeviceId?: string;\n  toggleSuspended: () => void;\n  suspended: boolean;\n}>(\n  ({\n    roomId,\n    userId,\n    avatar,\n    nickname,\n    statusMesg,\n    setStatusMesg,\n    videoDeviceId,\n    toggleSuspended,\n    suspended,\n  }) => {\n    const { myImage, roomImages } = useFaceImages(\n      roomId,\n      userId,\n      avatar,\n      nickname,\n      statusMesg,\n      suspended,\n      false,\n      false,\n      false,\n      videoDeviceId\n    );\n    const twoMinAgo = Date.now() - 2 * 60 * 1000;\n\n    return (\n      <div className=\"FaceList-list\">\n        <div className=\"FaceList-item\">\n          <FaceCard\n            image={myImage}\n            nickname={nickname}\n            statusMesg={statusMesg}\n            setStatusMesg={setStatusMesg}\n            liveMode={false}\n            muted\n            micOn={false}\n            speakerOn={false}\n            toggleSuspended={toggleSuspended}\n            suspended={suspended}\n          />\n        </div>\n        {roomImages.map((item) => (\n          <div key={item.userId} className=\"FaceList-item\">\n            <FaceCard\n              image={item.image}\n              nickname={item.info.nickname}\n              statusMesg={item.info.message}\n              obsoleted={item.updated < twoMinAgo}\n              liveMode={false}\n              muted\n              micOn={false}\n              speakerOn={false}\n            />\n          </div>\n        ))}\n        {!roomImages.length && (\n          <div className=\"FaceList-item\">\n            <Loading />\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n","/* eslint jsx-a11y/no-static-element-interactions: off */\n\nimport React, { Suspense, useCallback, useRef, useState } from \"react\";\n\nimport \"./GatherArea.css\";\nimport { useGatherArea, RegionData } from \"../hooks/useGatherArea\";\nimport { useFaceImages } from \"../hooks/useFaceImages\";\nimport { useFaceVideos } from \"../hooks/useFaceVideos\";\nimport { RegionEditor } from \"./RegionEditor\";\nimport { LinkOpener } from \"./LinkOpener\";\nimport { FaceList } from \"./FaceList\";\nimport { FaceCard } from \"./FaceCard\";\nimport { SuspenseFallback } from \"./SuspenseFallback\";\n\nconst MomentaryChat = React.lazy(() => import(\"./MomentaryChat\"));\nconst MediaShare = React.lazy(() => import(\"./MediaShare\"));\nconst GoBoard = React.lazy(() => import(\"./GoBoard\"));\n\ntype OnMouseMove = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n\nconst Region = React.memo<{\n  roomId: string;\n  userId: string;\n  nickname: string;\n  id: string;\n  data: RegionData;\n  highlight?: boolean;\n}>(({ roomId, userId, nickname, id, data, highlight }) => {\n  const boxShadow =\n    (data.type === \"meeting\" &&\n      (highlight ? \"0 0 0 5px pink\" : \"0 0 0 1px pink\")) ||\n    undefined;\n  return (\n    <div\n      className=\"GatherArea-region\"\n      style={{\n        left: `${data.position[0]}px`,\n        top: `${data.position[1]}px`,\n        width: `${data.size[0]}px`,\n        height: `${data.size[1]}px`,\n        boxShadow,\n        zIndex: data.type !== \"chat\" ? data.zIndex : undefined,\n        background: data.background,\n        border: data.border,\n      }}\n    >\n      {data.iframe && <iframe title={id} src={data.iframe} frameBorder=\"0\" />}\n      {data.type === \"chat\" && (\n        <Suspense fallback={<SuspenseFallback />}>\n          <MomentaryChat\n            roomId={roomId}\n            userId={userId}\n            nickname={nickname}\n            uniqueId={id}\n          />\n        </Suspense>\n      )}\n      {data.type === \"media\" && (\n        <Suspense fallback={<SuspenseFallback />}>\n          <MediaShare\n            roomId={roomId}\n            userId={userId}\n            nickname={nickname}\n            uniqueId={id}\n          />\n        </Suspense>\n      )}\n      {data.type === \"goboard\" && (\n        <Suspense fallback={<SuspenseFallback />}>\n          <GoBoard roomId={roomId} userId={userId} uniqueId={id} />\n        </Suspense>\n      )}\n    </div>\n  );\n});\n\nconst Avatar = React.memo<{\n  nickname: string;\n  statusMesg: string;\n  setStatusMesg?: (mesg: string) => void;\n  image?: string;\n  obsoleted?: boolean;\n  position: [left: number, top: number];\n  setPosition?: (nextPosition: [number, number]) => void;\n  registerOnMouseDrag: (onMouseMove?: OnMouseMove) => void;\n  stream?: MediaStream;\n  muted?: boolean;\n  toggleSuspended?: () => void;\n  suspended?: boolean;\n}>(\n  ({\n    nickname,\n    statusMesg,\n    setStatusMesg,\n    image,\n    obsoleted,\n    position,\n    setPosition,\n    registerOnMouseDrag,\n    stream,\n    muted,\n    toggleSuspended,\n    suspended,\n  }) => {\n    const isMyself = !!setPosition;\n    return (\n      <div\n        className=\"GatherArea-avatar\"\n        style={{\n          left: `${position[0]}px`,\n          top: `${position[1]}px`,\n        }}\n        onMouseDown={(e) => {\n          e.preventDefault();\n          if (isMyself) {\n            const target = e.currentTarget;\n            const offset = [e.clientX - position[0], e.clientY - position[1]];\n            registerOnMouseDrag((e) => {\n              const left = e.clientX - offset[0];\n              const top = e.clientY - offset[1];\n              target.style.left = `${left}px`;\n              target.style.top = `${top}px`;\n              setPosition?.([left, top]);\n            });\n          }\n        }}\n      >\n        <FaceCard\n          image={image}\n          nickname={nickname}\n          statusMesg={statusMesg}\n          setStatusMesg={setStatusMesg}\n          obsoleted={!!obsoleted}\n          liveMode={!!stream}\n          stream={stream}\n          muted={!!muted}\n          micOn={!!stream}\n          speakerOn={!!stream}\n          toggleSuspended={toggleSuspended}\n          suspended={suspended}\n        />\n      </div>\n    );\n  }\n);\n\nexport const GatherArea = React.memo<{\n  roomId: string;\n  userId: string;\n  avatar: string;\n  nickname: string;\n  statusMesg: string;\n  setStatusMesg: (mesg: string) => void;\n  videoDeviceId?: string;\n  audioDeviceId?: string;\n  toggleSuspended: () => void;\n  suspended: boolean;\n}>(\n  ({\n    roomId,\n    userId,\n    avatar,\n    nickname,\n    statusMesg,\n    setStatusMesg,\n    videoDeviceId,\n    audioDeviceId,\n    toggleSuspended,\n    suspended,\n  }) => {\n    const { myImage, roomImages } = useFaceImages(\n      roomId,\n      userId,\n      avatar,\n      nickname,\n      statusMesg,\n      suspended,\n      false,\n      false,\n      false,\n      videoDeviceId\n    );\n    const { avatarMap, myAvatar, setMyAvatar, regionMap } = useGatherArea(\n      roomId,\n      userId\n    );\n\n    const onMouseDragRef = useRef<OnMouseMove>();\n    const registerOnMouseDrag = useCallback((onMouseMove?: OnMouseMove) => {\n      onMouseDragRef.current = onMouseMove;\n    }, []);\n\n    const regionIdList = Object.keys(regionMap).sort(\n      (a, b) => (regionMap[b].zIndex ?? 0) - (regionMap[a].zIndex ?? 0)\n    );\n    const activeMeetingRegionId = regionIdList.find((id) => {\n      const { type, position, size } = regionMap[id] as RegionData;\n      return (\n        type === \"meeting\" &&\n        position[0] <= myAvatar.position[0] &&\n        position[1] <= myAvatar.position[1] &&\n        myAvatar.position[0] + 36 <= position[0] + size[0] &&\n        myAvatar.position[1] + 36 <= position[1] + size[1]\n      );\n    });\n\n    const { faceStream, faceStreamMap } = useFaceVideos(\n      roomId,\n      userId,\n      !!activeMeetingRegionId,\n      !!activeMeetingRegionId,\n      true,\n      videoDeviceId,\n      audioDeviceId,\n      `gatherArea/meeting/${activeMeetingRegionId}/`\n    );\n\n    const [showModal, setShowModal] = useState<\n      null | \"region-editor\" | \"link-opener\"\n    >(null);\n\n    const twoMinAgo = Date.now() - 2 * 60 * 1000;\n\n    return (\n      <div className=\"GatherArea-container\">\n        <div\n          className=\"GatherArea-body\"\n          onMouseMove={(e) => {\n            if (onMouseDragRef.current) {\n              onMouseDragRef.current(e);\n            }\n          }}\n          onMouseUp={() => {\n            registerOnMouseDrag();\n          }}\n        >\n          {Object.entries(regionMap).map(([regionId, regionData]) => (\n            <Region\n              key={regionId}\n              roomId={roomId}\n              userId={userId}\n              nickname={nickname}\n              id={regionId}\n              data={regionData}\n              highlight={regionId === activeMeetingRegionId}\n            />\n          ))}\n          {Object.entries(avatarMap).map(([uid, avatarData]) => {\n            if (uid === userId) {\n              return null;\n            }\n            const imageData = roomImages.find((data) => data.userId === uid);\n            if (!imageData) {\n              return null;\n            }\n            return (\n              <Avatar\n                key={uid}\n                nickname={imageData.info.nickname}\n                statusMesg={imageData.info.message}\n                image={imageData.image}\n                obsoleted={imageData.updated < twoMinAgo}\n                position={avatarData.position}\n                registerOnMouseDrag={registerOnMouseDrag}\n                stream={faceStreamMap[uid]}\n              />\n            );\n          })}\n          <Avatar\n            nickname={nickname}\n            statusMesg={statusMesg}\n            setStatusMesg={setStatusMesg}\n            image={myImage}\n            position={myAvatar.position}\n            setPosition={(position) =>\n              setMyAvatar((prev) => ({ ...prev, position }))\n            }\n            registerOnMouseDrag={registerOnMouseDrag}\n            stream={faceStream || undefined}\n            muted\n            toggleSuspended={toggleSuspended}\n            suspended={suspended}\n          />\n        </div>\n        <div className=\"GatherArea-facelist\">\n          <FaceList\n            roomId={roomId}\n            userId={userId}\n            avatar={avatar}\n            nickname={nickname}\n            statusMesg={statusMesg}\n            setStatusMesg={setStatusMesg}\n            videoDeviceId={videoDeviceId}\n            toggleSuspended={toggleSuspended}\n            suspended={suspended}\n          />\n        </div>\n        <div className=\"GatherArea-toolbar\">\n          <div>\n            <button\n              type=\"button\"\n              onClick={() =>\n                setShowModal(\n                  showModal === \"region-editor\" ? null : \"region-editor\"\n                )\n              }\n            >\n              {showModal === \"region-editor\"\n                ? \"Close Region Editor\"\n                : \"Open Region Editor\"}\n            </button>\n            {showModal === \"region-editor\" && (\n              <div className=\"GatherArea-region-editor\">\n                <RegionEditor roomId={roomId} userId={userId} />\n              </div>\n            )}\n          </div>\n          <div>\n            <button\n              type=\"button\"\n              onClick={() =>\n                setShowModal(showModal === \"link-opener\" ? null : \"link-opener\")\n              }\n            >\n              {showModal === \"link-opener\"\n                ? \"Close Link Opener\"\n                : \"Open Link Opener\"}\n            </button>\n            {showModal === \"link-opener\" && (\n              <div className=\"GatherArea-link-opener\">\n                <LinkOpener roomId={roomId} />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default GatherArea;\n","import React, { useEffect, useState } from \"react\";\nimport { useSnapshot } from \"valtio\";\n\nimport \"./SingleRoom.css\";\nimport { singleRoomState, toggleConfigTakePhoto } from \"../states/singleRoom\";\nimport { setRoomIdToUrl } from \"../utils/url\";\nimport { GatherArea } from \"./GatherArea\";\n\nexport const SingleRoom = React.memo(() => {\n  const { roomId, userId, config } = useSnapshot(singleRoomState);\n  const [statusMesg, setStatusMesg] = useState(\"\");\n  useEffect(() => {\n    setRoomIdToUrl(roomId);\n  }, [roomId]);\n\n  return (\n    <div className=\"SingleRoom-container\">\n      <GatherArea\n        roomId={roomId}\n        userId={userId}\n        avatar={config.avatar}\n        nickname={config.nickname}\n        statusMesg={statusMesg}\n        setStatusMesg={setStatusMesg}\n        suspended={!config.takePhoto}\n        videoDeviceId={config.videoDeviceId}\n        audioDeviceId={config.audioDeviceId}\n        toggleSuspended={toggleConfigTakePhoto}\n      />\n    </div>\n  );\n});\n\nexport default SingleRoom;\n","export const sleep = (ms: number) =>\n  new Promise((resolve) => setTimeout(resolve, ms));\n","export const getVideoStream = async (deviceId?: string) => {\n  const constraints = deviceId\n    ? {\n        video: { deviceId },\n      }\n    : { video: true };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getVideoTracks();\n  const dispose = () => {\n    track.stop();\n  };\n  return {\n    stream,\n    dispose,\n  };\n};\n\nexport const getFaceVideoStream = async (deviceId?: string) => {\n  const constraints = {\n    video: {\n      deviceId,\n      frameRate: { max: 5 },\n      width: { exact: 72 },\n      height: { exact: 72 },\n    },\n  };\n  const stream = await navigator.mediaDevices.getUserMedia(constraints);\n  const [track] = stream.getVideoTracks();\n  const dispose = () => {\n    track.stop();\n  };\n  return {\n    stream,\n    dispose,\n  };\n};\n","import React from \"react\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { BaseEmoji, Picker, getEmojiDataFromNative, Data } from \"emoji-mart\";\nimport data from \"emoji-mart/data/all.json\";\n\nexport { Emoji } from \"emoji-mart\";\nexport type EmojiDataType = BaseEmoji;\n\n// we do not support custom emojis\nexport const EmojiPicker = Picker as React.ComponentType<\n  | Omit<React.ComponentProps<typeof Picker>, \"custom\" | \"onSelect\">\n  | {\n      onSelect: (emoji: BaseEmoji) => void;\n    }\n>;\n\nexport const isEmoji = (s: string) => {\n  const emojiData: BaseEmoji | null = getEmojiDataFromNative(\n    s,\n    \"apple\",\n    (data as unknown) as Data\n  );\n  return !!emojiData;\n};\n"],"sourceRoot":""}